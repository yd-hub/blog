[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class F{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const h=r*i;t:for(const u of e.keys())if(u===_){const d=o[h-1];d<=s&&n.set(c,[e.get(u),d])}else{let d=r;for(let a=0;a<u.length;++a,++d){const m=u[a],g=i*d,y=g-i;let l=o[g];const f=Math.max(0,d-s-1),w=Math.min(i-1,d+s);for(let p=f;p<w;++p){const C=m!==t[p],S=o[y+p]+ +C,I=o[y+p+1]+1,x=o[g+p]+1,k=o[g+p+1]=Math.min(S,I,x);k<l&&(l=k)}if(l>s)continue t}q(e.get(u),t,s,n,o,d,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=M(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new F(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=v(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return v(this._tree,t)?.has(_)??!1}keys(){return new F(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new F(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const M=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),M(e.get(n),t.slice(n.length),s);return s.push([e,t]),M(void 0,"",s)},v=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return v(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const h=e.get(r);if(c===r.length)e=h;else{const u=new Map;u.set(r.slice(c),h),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=M(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",dt=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,ht=()=>new Map,O=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);B(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},lt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-c+c*n/o)))},ft=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},at=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,ht),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,h,u=new Map)=>{if(r==null)return u;for(const d of Object.keys(i)){const a=i[d],m=e._fieldIds[d],g=r.get(m);if(g==null)continue;let y=g.size;const l=e._avgFieldLength[m];for(const f of g.keys()){if(!e._documentIds.has(f)){at(e,m,f,s),y-=1;continue}const w=c?c(e._documentIds.get(f),s,e._storedFields.get(f)):1;if(!w)continue;const p=g.get(f),C=e._fieldLength.get(f)[m],S=lt(p,y,e._documentCount,C,l,h),I=n*o*a*w*S,x=u.get(f);if(x){x.score+=I,dt(x.terms,t);const k=G(x.match,s);k?k.push(d):x.match[s]=[d]}else u.set(f,{score:I,terms:[t],match:{[s]:[d]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:h}=n,{fuzzy:u,prefix:d}={...Y.weights,...i},a=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,a,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(c,Math.round(t.term.length*l)):l;f&&(y=e._index.fuzzyGet(t.term,f))}if(g)for(const[l,f]of g){const w=l.length-t.term.length;if(!w)continue;y?.delete(l);const p=d*l.length/(l.length+.3*w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}if(y)for(const l of y.keys()){const[f,w]=y.get(l);if(!w)continue;const p=u*l.length/(l.length+w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const d={...s,...t,queries:void 0},a=t.queries.map(m=>X(e,m,d));return Q(a,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:h}=i,u=c(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>xt(e,d,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:h,terms:u,match:d}]of r){const a=u.length||1,m={id:e._documentIds.get(c),score:h*a,terms:Object.keys(d),queryTerms:u,match:d};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(P),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),h=n.get(c);h!=null?(h.score+=r,h.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:h}]of n)o.push({suggestion:r,terms:c,score:i/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const kt=e=>new bt(e),It=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=kt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},Mt=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=It(e,t);i._documentIds=O(n),i._fieldLength=O(o),i._storedFields=O(r);for(const[c,h]of i._documentIds)i._idToShortId.set(h,c);for(const[c,h]of s){const u=new Map;for(const d of Object.keys(h))u.set(parseInt(d,10),O(h[d]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,d=!1)=>{let a;i===0?a=u.length>20?`… ${u.slice(-20)}`:u:d?a=u.length+i>100?`${u.slice(0,100-i)}… `:u:a=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,a&&o.push(a),i+=a.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(c(e.slice(r,h)),r=u,i>100)break;h=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Ot=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ct=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,h=r.includes("@"),u=r.includes("#"),[d,a]=r.split(/[#@]/),m=Number(d),g=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(w=>!w.includes(l))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:a,display:g.map(l=>o.c.map(f=>V(f,l))).flat().filter(l=>l!==null)},c]);else{const l=g.map(f=>V(o.h,f)).filter(f=>f!==null);if(l.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:a},display:l},c]),"t"in o&&o.t)for(const f of o.t){const w=g.map(p=>V(f,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:a},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Ot(o,r):Ct(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},St=st($(JSON.parse("{\"/\":{\"documentCount\":203,\"nextId\":203,\"documentIds\":{\"0\":\"1\",\"1\":\"1#个人简介\",\"2\":\"1#主要技术栈\",\"3\":\"1#其他技能\",\"4\":\"1#主要荣誉\",\"5\":\"1#联系方式\",\"6\":\"1@1\",\"7\":\"2\",\"8\":\"2@0\",\"9\":\"3\",\"10\":\"3@0\",\"11\":\"4\",\"12\":\"4#scss\",\"13\":\"4#变量\",\"14\":\"4#选择器符号\",\"15\":\"4#父选择器引用\",\"16\":\"4#所有子代\",\"17\":\"4#嵌套规则\",\"18\":\"4#混合-mixins\",\"19\":\"4#继承-extend\",\"20\":\"4#运算\",\"21\":\"4#插值\",\"22\":\"4#条件和循环\",\"23\":\"4#用-sass-变量控制主题\",\"24\":\"4#定义主题变量及样式\",\"25\":\"4#类名区分主题\",\"26\":\"4#javascript-动态切换主题\",\"27\":\"4#less\",\"28\":\"4#变量-1\",\"29\":\"4#嵌套规则-1\",\"30\":\"4#混合-mixins-1\",\"31\":\"4#继承-extend-1\",\"32\":\"4#运算-1\",\"33\":\"4#函数\",\"34\":\"4#条件语句和循环\",\"35\":\"4#less-编译\",\"36\":\"4@0\",\"37\":\"4@1\",\"38\":\"5\",\"39\":\"5#html4\",\"40\":\"5#css2\",\"41\":\"5#css复合选择器\",\"42\":\"5#交集选择器\",\"43\":\"5#并集选择器\",\"44\":\"5#后代选择器\",\"45\":\"5#子代选择器\",\"46\":\"5@0\",\"47\":\"5@1\",\"48\":\"6\",\"49\":\"6#symbol-数据类型\",\"50\":\"6#symbol基本使用\",\"51\":\"6#为对象添加symbol类型的属性\",\"52\":\"6#symbol内置值\",\"53\":\"6#iterator-迭代器\",\"54\":\"6#工作原理\",\"55\":\"6@0\",\"56\":\"6@1\",\"57\":\"7\",\"58\":\"7#array对象方法\",\"59\":\"7#常用方法\",\"60\":\"7#拓展方法\",\"61\":\"7#map-迭代数组\",\"62\":\"7#foreach-遍历数组\",\"63\":\"7#filter-过滤数组\",\"64\":\"7#join-元素拼接\",\"65\":\"7#find-查找元素\",\"66\":\"7#every-检测每一个\",\"67\":\"7#reduce-累计器\",\"68\":\"7#slice-提取元素\",\"69\":\"7#sort-排序\",\"70\":\"7#some和every\",\"71\":\"7#异步问题\",\"72\":\"7#_1-foreach\",\"73\":\"7#_2-map\",\"74\":\"7#_3-filter\",\"75\":\"7#sring对象方法\",\"76\":\"7#trim-删除文本两侧空格\",\"77\":\"7#number对象方法\",\"78\":\"7#tofixed-保留小数位的长度\",\"79\":\"7#object对象方法\",\"80\":\"7#object-keys\",\"81\":\"7#时间戳方法\",\"82\":\"7#gettime\",\"83\":\"7#new-date\",\"84\":\"7#date-now\",\"85\":\"7#倒计时\",\"86\":\"7#-1\",\"87\":\"7#-2\",\"88\":\"7@0\",\"89\":\"7@1\",\"90\":\"8\",\"91\":\"8#输入输出\",\"92\":\"8#输入\",\"93\":\"8#输出\",\"94\":\"8#变量\",\"95\":\"8#let和var的区别\",\"96\":\"8#const\",\"97\":\"8#let、var、const的使用\",\"98\":\"8#数组\",\"99\":\"8#操作数组\",\"100\":\"8#函数\",\"101\":\"8#函数命名规范\",\"102\":\"8#匿名函数\",\"103\":\"8#函数表达式\",\"104\":\"8#立即执行函数\",\"105\":\"8#函数返回值\",\"106\":\"8#回调函数\",\"107\":\"8#对象\",\"108\":\"8#语法\",\"109\":\"8#属性和访问\",\"110\":\"8#方法和调用\",\"111\":\"8#null\",\"112\":\"8#遍历对象\",\"113\":\"8#内置对象\",\"114\":\"8#math\",\"115\":\"8#属性\",\"116\":\"8#方法\",\"117\":\"8#随机取数组元素\",\"118\":\"8#生成随机数\",\"119\":\"8#严格模式\",\"120\":\"8@0\",\"121\":\"8@1\",\"122\":\"9\",\"123\":\"9#作用域\",\"124\":\"9#局部作用域-local\",\"125\":\"9#函数作用域\",\"126\":\"9#块作用域\",\"127\":\"9#全局作用域-global\",\"128\":\"9#作用域链\",\"129\":\"9#垃圾回收机制\",\"130\":\"9#引用计数-现浏览器多使用第二种\",\"131\":\"9#标记清除法\",\"132\":\"9#闭包-closure\",\"133\":\"9#变量提升\",\"134\":\"9#函数进阶\",\"135\":\"9#函数提升\",\"136\":\"9#函数参数\",\"137\":\"9#动态参数-arguments\",\"138\":\"9#剩余参数-arr\",\"139\":\"9#展开运算符\",\"140\":\"9#箭头函数\",\"141\":\"9#箭头函数参数\",\"142\":\"9#箭头函数-this\",\"143\":\"9#解构赋值\",\"144\":\"9#数组解构\",\"145\":\"9#对象解构\",\"146\":\"9#深入对象\",\"147\":\"9#创建对象的三种方法\",\"148\":\"9#构造函数\",\"149\":\"9@0\",\"150\":\"9@1\",\"151\":\"10\",\"152\":\"10#获取dom对象-queryselector\",\"153\":\"10#操作元素内容-innertext-innerhtml\",\"154\":\"10#操作元素属性\",\"155\":\"10#常用属性修改\",\"156\":\"10#控制样式属性\",\"157\":\"10#通过修改行内样式-style-属性-实现对样式的动态修改。\",\"158\":\"10#通过classname-操作类控制css\",\"159\":\"10#通过-classlist-操作类控制css\",\"160\":\"10#操作表单元素属性\",\"161\":\"10#自定义属性-data-、dataset\",\"162\":\"10#元素尺寸与位置\",\"163\":\"10#事件\",\"164\":\"10#事件监听-addeventlistener\",\"165\":\"10#事件解绑-removeeventlistener\",\"166\":\"10#事件类型\",\"167\":\"10#常用事件\",\"168\":\"10#其他事件\",\"169\":\"10#页面加载事件-load\",\"170\":\"10#事件名-load\",\"171\":\"10#事件名-domcontentloaded\",\"172\":\"10#元素滚动事件-scroll\",\"173\":\"10#页面尺寸事件-resize\",\"174\":\"10#m端事件-移动端\",\"175\":\"10#事件对象-event\",\"176\":\"10#环境对象-this\",\"177\":\"10#事件流\",\"178\":\"10#捕获和冒泡\",\"179\":\"10#阻止冒泡-stoppropagation\",\"180\":\"10#阻止元素默认行为-preventdefault\",\"181\":\"10#事件委托\",\"182\":\"10#元素尺寸与位置-1\",\"183\":\"10#获取宽高\",\"184\":\"10#clientwidth-clientheight\",\"185\":\"10#offsetwidth-offsetheight\",\"186\":\"10#获取位置\",\"187\":\"10#元素位置offsetleft-offsettop\",\"188\":\"10@0\",\"189\":\"10@1\",\"190\":\"11\",\"191\":\"11@0\",\"192\":\"12\",\"193\":\"12#问题描述\",\"194\":\"12#解决方案\",\"195\":\"12#_1-编写上传-unicloud-云对象\",\"196\":\"12#_2-编写图片组件\",\"197\":\"12#_3-注册组件\",\"198\":\"12#_4-在md文件中使用组件\",\"199\":\"12@0\",\"200\":\"12@1\",\"201\":\"13\",\"202\":\"14\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,5],\"1\":[1,12],\"2\":[1,11],\"3\":[1,4],\"4\":[1,1],\"5\":[1,2],\"6\":[null,null,1],\"7\":[1,3],\"8\":[null,null,1],\"9\":[1],\"10\":[null,null,1],\"11\":[2,4],\"12\":[1],\"13\":[1,9],\"14\":[1],\"15\":[2,5],\"16\":[2,6],\"17\":[1,18],\"18\":[1,10],\"19\":[1,15],\"20\":[1,10],\"21\":[1,6],\"22\":[1,24],\"23\":[3],\"24\":[1,26],\"25\":[1,18],\"26\":[2,22],\"27\":[1],\"28\":[1,8],\"29\":[1,18],\"30\":[1,7],\"31\":[1,15],\"32\":[1,10],\"33\":[1,8],\"34\":[1,19],\"35\":[1,1],\"36\":[null,null,2],\"37\":[null,null,3],\"38\":[1,9],\"39\":[1,30],\"40\":[1],\"41\":[1],\"42\":[1,11],\"43\":[1,15],\"44\":[1,16],\"45\":[1,13],\"46\":[null,null,2],\"47\":[null,null,2],\"48\":[1],\"49\":[2],\"50\":[1,36],\"51\":[1,56],\"52\":[1,83],\"53\":[2,11],\"54\":[1,35],\"55\":[null,null,2],\"56\":[null,null,2],\"57\":[2],\"58\":[1],\"59\":[1,41],\"60\":[1,48],\"61\":[2,38],\"62\":[2,34],\"63\":[2,27],\"64\":[2,45],\"65\":[2,33],\"66\":[2,19],\"67\":[2,50],\"68\":[1,32],\"69\":[1,76],\"70\":[1,26],\"71\":[1],\"72\":[2,8],\"73\":[2,20],\"74\":[2,29],\"75\":[1,78],\"76\":[2,9],\"77\":[1],\"78\":[2,21],\"79\":[1],\"80\":[3,18],\"81\":[1],\"82\":[2,10],\"83\":[3,14],\"84\":[3,7],\"85\":[1,36],\"86\":[1],\"87\":[1],\"88\":[null,null,2],\"89\":[null,null,1],\"90\":[2,3],\"91\":[1],\"92\":[1,36],\"93\":[1,18],\"94\":[1],\"95\":[1,12],\"96\":[1,20],\"97\":[3,4],\"98\":[1],\"99\":[1,44],\"100\":[1],\"101\":[1,22],\"102\":[1,5],\"103\":[1,12],\"104\":[1,8],\"105\":[1,4],\"106\":[1,8],\"107\":[1,10],\"108\":[1,36],\"109\":[1,82],\"110\":[1,78],\"111\":[1,11],\"112\":[1,19],\"113\":[1,14],\"114\":[1,8],\"115\":[1,7],\"116\":[1,58],\"117\":[1,13],\"118\":[1,13],\"119\":[1,38],\"120\":[null,null,2],\"121\":[null,null,1],\"122\":[2],\"123\":[1,10],\"124\":[3,2],\"125\":[1,30],\"126\":[1,66],\"127\":[3,51],\"128\":[1,42],\"129\":[1,20],\"130\":[3,39],\"131\":[1,17],\"132\":[3,40],\"133\":[1,20],\"134\":[1],\"135\":[1],\"136\":[1],\"137\":[2,27],\"138\":[2,24],\"139\":[2,31],\"140\":[1,30],\"141\":[1,28],\"142\":[1,33],\"143\":[1,7],\"144\":[1,74],\"145\":[1,101],\"146\":[1],\"147\":[1,25],\"148\":[1,6],\"149\":[null,null,2],\"150\":[null,null,1],\"151\":[2],\"152\":[2,8],\"153\":[3,30],\"154\":[1,2],\"155\":[1,26],\"156\":[1],\"157\":[4,44],\"158\":[2,11],\"159\":[3,31],\"160\":[1,12],\"161\":[3,34],\"162\":[1,11],\"163\":[1],\"164\":[2,83],\"165\":[2,6],\"166\":[1],\"167\":[1,20],\"168\":[1],\"169\":[1,5],\"170\":[1,7],\"171\":[1,7],\"172\":[2,7],\"173\":[2,7],\"174\":[3,8],\"175\":[1,32],\"176\":[2,29],\"177\":[1],\"178\":[1,17],\"179\":[2,42],\"180\":[2,23],\"181\":[1,13],\"182\":[1],\"183\":[1],\"184\":[1,9],\"185\":[1,6],\"186\":[1],\"187\":[1,10],\"188\":[null,null,2],\"189\":[null,null,3],\"190\":[1],\"191\":[null,null,1],\"192\":[1],\"193\":[1,8],\"194\":[1,7],\"195\":[4,72],\"196\":[2,480],\"197\":[2,17],\"198\":[2,5],\"199\":[null,null,3],\"200\":[null,null,2],\"201\":[1,3],\"202\":[2]},\"averageFieldLength\":[1.3720801007231755,23.283088501543727,0.6312992006862325],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"于2025年2月12日，0:14分创建博客，开始迁移与创作内容。\"]},\"1\":{\"h\":\"个人简介\",\"t\":[\"性别男，24岁，一名还没毕业的菜鸟前端，热爱编程，喜欢分享，擅长解决问题，乐于助人。\",\"兴趣驱动型，有兴趣就有无限动力（比如前端学习），喜欢尝试新事物。\"]},\"2\":{\"h\":\"主要技术栈\",\"t\":[\"HTML/CSS\",\"JavaScript/TypeScript\",\"Vue.js\",\"uni-app\",\"Node.js\",\"React.js ...\"]},\"3\":{\"h\":\"其他技能\",\"t\":[\"Photoshop\",\"Premiere Pro ...\"]},\"4\":{\"h\":\"主要荣誉\",\"t\":[\"国家奖学金\"]},\"5\":{\"h\":\"联系方式\",\"t\":[\"QQ：583833826\"]},\"6\":{\"c\":[\"个人介绍\"]},\"7\":{\"h\":\"前端笔记\",\"t\":[\"学习过程中积累的笔记。\",\"————好记性不如烂笔头。\"]},\"8\":{\"c\":[\"前端笔记\"]},\"9\":{\"h\":\"我的文章\"},\"10\":{\"c\":[\"我的文章\"]},\"11\":{\"h\":\"SCSS/LESS\",\"t\":[\"此笔记基于ChatGPT，在其基础上进行了整理，并添加了一些自己的理解。\"]},\"12\":{\"h\":\"SCSS\"},\"13\":{\"h\":\"\",\"t\":[\"$primary-color: #3498db; $padding: 16px; .button { background-color: $primary-color; padding: $padding; }\"]},\"14\":{\"h\":\"选择器符号\"},\"15\":{\"h\":\"父选择器引用 &\",\"t\":[\".box { // ... &:first-child { // ... } }\",\"以上代码标记部分会被编译成：\",\".box:first-child { // ... }\"]},\"16\":{\"h\":\"所有子代 >\",\"t\":[\"以下代码为选中所有 .box 的div子元素。\",\".box { // ... > div { // ... } }\"]},\"17\":{\"h\":\"\",\"t\":[\"nav { ul { margin: 0; padding: 0; list-style: none; li { display: inline-block; a { text-decoration: none; color: $primary-color; } } } }\"]},\"18\":{\"h\":\"\",\"t\":[\"@mixin border-radius($radius) { -webkit-border-radius: $radius; -moz-border-radius: $radius; border-radius: $radius; } .box { @include border-radius(10px); }\"]},\"19\":{\"h\":\"\",\"t\":[\".message { border: 1px solid #ccc; padding: 10px; color: #333; } .success { @extend .message; border-color: green; } .error { @extend .message; border-color: red; }\"]},\"20\":{\"h\":\"\",\"t\":[\".container { width: 100%; padding: $padding / 2; margin: $padding / 2; } .content { width: calc(100% - #{$padding * 2}); }\"]},\"21\":{\"h\":\"\",\"t\":[\"$side: left; .box { margin-#{$side}: 10px; }\"]},\"22\":{\"h\":\"\",\"t\":[\"@mixin theme-colors($theme) { @if $theme == 'dark' { background-color: #333; color: #fff; } @else if $theme == 'light' { background-color: #fff; color: #333; } } .theme { @include theme-colors('dark'); } @for $i from 1 through 3 { .column-#{$i} { width: 100% / $i; } }\"]},\"23\":{\"h\":\"用 Sass 变量控制主题\"},\"24\":{\"h\":\"定义主题变量及样式\",\"t\":[\"首先，你需要定义一些 Sass 变量，这些变量将决定不同的样式属性。你可以根据不同的主题定义一组变量。\",\"// 主题1：浅色主题 $background-color-light: #ffffff; $text-color-light: #333333; $primary-color-light: #007bff; // 主题2：深色主题 $background-color-dark: #333333; $text-color-dark: #ffffff; $primary-color-dark: #ff6600; // 默认使用浅色主题 $background-color: $background-color-light; $text-color: $text-color-light; $primary-color: $primary-color-light; // 样式 body { background-color: $background-color; color: $text-color; } a { color: $primary-color; }\"]},\"25\":{\"h\":\"类名区分主题\",\"t\":[\"有两种方式\",\".light-theme { $background-color: $background-color-light; $text-color: $text-color-light; $primary-color: $primary-color-light; body { background-color: $background-color; color: $text-color; } a { color: $primary-color; } } .dark-theme { $background-color: $background-color-dark; $text-color: $text-color-dark; $primary-color: $primary-color-dark; body { background-color: $background-color; color: $text-color; } a { color: $primary-color; } }\",\"// 定义 @mixin @mixin theme($background-color, $text-color, $primary-color) { body { background-color: $background-color; color: $text-color; } a { color: $primary-color; } } // 应用浅色主题 .light-theme { // 使用mixin @include theme($background-color-light, $text-color-light, $primary-color-light); } // 应用深色主题 .dark-theme { // 使用mixin @include theme($background-color-dark, $text-color-dark, $primary-color-dark); }\"]},\"26\":{\"h\":\"JavaScript 动态切换主题\",\"t\":[\"<!-- 默认浅色主题 --> <div class=\\\"light-theme\\\"> <p>Hello, this is the light theme.</p> </div>\",\"// 切换为深色主题 document.body.classList.add('dark-theme'); document.body.classList.remove('light-theme'); // 切换为浅色主题 document.body.classList.add('light-theme'); document.body.classList.remove('dark-theme');\"]},\"27\":{\"h\":\"\"},\"28\":{\"h\":\"\",\"t\":[\"**@**\",\"@primary-color: #3498db; @padding: 16px; .button { background-color: @primary-color; padding: @padding; }\"]},\"29\":{\"h\":\"\",\"t\":[\"nav { ul { margin: 0; padding: 0; list-style: none; li { display: inline-block; a { text-decoration: none; color: @primary-color; } } } }\"]},\"30\":{\"h\":\"\",\"t\":[\".border-radius(@radius) { -webkit-border-radius: @radius; -moz-border-radius: @radius; border-radius: @radius; } .box { .border-radius(10px); }\"]},\"31\":{\"h\":\"\",\"t\":[\".message { border: 1px solid #ccc; padding: 10px; color: #333; } .success { &:extend(.message); border-color: green; } .error { &:extend(.message); border-color: red; }\"]},\"32\":{\"h\":\"\",\"t\":[\"@padding: 20px; .container { width: 100%; padding: @padding / 2; margin: @padding / 2; } .content { width: calc(100% - (@padding * 2)); }\"]},\"33\":{\"h\":\"\",\"t\":[\".lighten(@color, @percentage) { @new-color: lighten(@color, @percentage); color: @new-color; } .button { .lighten(@primary-color, 20%); }\"]},\"34\":{\"h\":\"\",\"t\":[\".theme-color(@theme) when (@theme = 'dark') { background-color: #333; color: #fff; } .theme-color(@theme) when (@theme = 'light') { background-color: #fff; color: #333; } .theme-dark { .theme-color('dark'); } .theme-light { .theme-color('light'); } @i: 1; .loop (@i) when (@i <= 3) { .column-@{i} { width: (100% / @i); } .loop(@i + 1); } .loop(@i);\"]},\"35\":{\"h\":\"\",\"t\":[\"lessc\"]},\"36\":{\"c\":[\"HTML\",\"前端笔记\"]},\"37\":{\"c\":[\"LESS\",\"SCSS\",\"CSS\"]},\"38\":{\"h\":\"HTML+CSS\",\"t\":[\"复习所记，并不全面，详细笔记见下方尚硅谷笔记。\",\"尚硅谷-HTML4笔记 URL\",\"尚硅谷-HTML5笔记 URL\",\"尚硅谷-CSS2笔记 URL\",\"尚硅谷-CSS3笔记 URL\"]},\"39\":{\"h\":\"html4\",\"t\":[\"h1~h6 不能互相嵌套。\",\"p 中不要写块级元素\",\"a 通过 a 标签，可以唤起设备应用程序。\",\"<!-- 唤起设备拨号 --> <a href=\\\"tel:10010\\\">电话联系</a> <!-- 唤起设备发送邮件 --> <a href=\\\"mailto:10010@qq.com\\\">邮件联系</a> <!-- 唤起设备发送短信 --> <a href=\\\"sms:10086\\\">短信联系</a>\",\"pre 按原文显示（一般用于在页面中嵌入大段代码），空格会原样显示\"]},\"40\":{\"h\":\"css2\"},\"41\":{\"h\":\"CSS复合选择器\"},\"42\":{\"h\":\"交集选择器\",\"t\":[\"/* 选中：类名为beauty的p元素，为此种写法用的非常多！！！！ */ p.beauty { color: blue; } /* 选中：类名包含rich和beauty的元素 */ .rich.beauty { color: green; }\"]},\"43\":{\"h\":\"并集选择器\",\"t\":[\"/* 选中id为peiqi，或类名为rich，或类名为beauty的元素 */ #peiqi, .rich, .beauty { font-size: 40px; background-color: skyblue; width: 200px; }\"]},\"44\":{\"h\":\"后代选择器\",\"t\":[\"/* 选中ul中的所有li */ ul li { color: red; } /* 选中ul中所有li中的a */ ul li a { color: orange; } /* 选中类名为subject元素中的所有li */ .subject li { color: blue; } /* 选中类名为subject元素中的所有类名为front-end的li */ .subject li.front-end { color: blue; }\"]},\"45\":{\"h\":\"子代选择器\",\"t\":[\"作用：选中指定元素中，符合要求的子元素（儿子元素）。（先写父，再写子）\",\"/* div中的子代a元素 */ div>a { color: red; } /* 类名为persons的元素中的子代a元素 */ .persons>a{ color: red; }\"]},\"46\":{\"c\":[\"HTML+CSS\",\"前端笔记\"]},\"47\":{\"c\":[\"HTML\",\"CSS\"]},\"48\":{\"h\":\"ES6+\"},\"49\":{\"h\":\"Symbol 数据类型\"},\"50\":{\"h\":\"Symbol基本使用\",\"t\":[\"ES6 引入了一种新的原始数据类型Symbol，表示独一无二的值。它是 JavaScript 语言的第七种数据类型，是一种类似于字符串的数据类型。\",\"Symbol特点\",\"Symbol的值是唯一的，用来解决命名冲突的问题\",\"Symbol值不能与其他数据进行运算\",\"Symbol定义的对象属性不能使用for…in循环遍历，但是可以使用 Reflect.ownKeys来获取对象的所有键名\",\"//创建 Symbol let s1 = Symbol(); console.log(s1, typeof s1); //false //添加标识的 Symbol let s2 = Symbol('尚硅谷'); //‘尚硅谷’是标识 let s2_2 = Symbol('尚硅谷'); console.log(s2 === s2_2); //false //使用 Symbol for 定义 let s3 = Symbol.for('尚硅谷'); let s3_2 = Symbol.for('尚硅谷'); console.log(s3 === s3_2); //true\"]},\"51\":{\"h\":\"为对象添加Symbol类型的属性\",\"t\":[\"// age 1：方法1 let myObject = {}; // 创建一个空对象 let mySymbol = Symbol('mySymbol'); // 创建一个Symbol myObject[mySymbol] = 'Hello, world!'; // 在对象上添加一个Symbol属性 // 访问myObject的mySymbol属性 console.log(myObject[mySymbol]); // 输出 'Hello, world!' // age 2：应用 let game = { ... //对象game中已有up和down属性 }; // 向game对象添加up、down两个属性，而不影响原有的属性 let methods = { up: Symbol(), down: Symbol() }; game[methods.up] = function(){ console.log('up'); } game[methods.up] = function(){ consoloe.log('down); } console.log(game); // age3 // 调用 [Symbol('say')]方法的错误写法 let youxi = { name:'狼人杀', [Symbol('say')]: function(){ console.log('发言'); } } game[Symbol('say')](); // 会报错，不会输出 \\\"say\\\"，因为这是一个新的Symbol // 因为game[Symbol('say')]尝试访问的是一个使用新创建的Symbol作为键的属性， // 而这个新Symbol与定义在对象game中的那个Symbol是不同的。 // 由于它们是不同的Symbol，所以JavaScript引擎无法找到 // 与这个新Symbol相关联的函数，因此不会调用任何函数，也不会输出任何内容。 // ***正确写法 // 创建一个Symbol并将其存储在变量中以便稍后使用 let saySymbol = Symbol('say'); let nameSymbol = Symbol('name'); let game = { name: 'youxi', [saySymbol]: function() { console.log('say'); }, [nameSymbol]: 'syname' }; // 使用之前存储的Symbol来访问属性 game[saySymbol](); // 现在会输出 \\\"say\\\"\"]},\"52\":{\"h\":\"Symbol内置值\",\"t\":[\"除了定义自己使用的 Symbol 值以外，ES6 还提供了11个内置的Symbol值，指向语言内部使用的方法。可以称这些方法为魔术方法，因为它们会在特定的场 景下自动执行。\",\"Symbol.hasInstance\",\"当其他对象使用instanceof运算符，判断是否为该对 象的实例时，会调用这个方法\",\"Symbol.isConcatSpreadable\",\"对象的Symbol.isConcatSpreadable属性等于的是一个 布尔值，表示该对象用于Array.prototype.concat()时， 是否可以展开。\",\"Symbol.species\",\"创建衍生对象时，会使用该属性\",\"Symbol.match\",\"当执行str.match(myObject) 时，如果该属性存在，会 调用它，返回该方法的返回值。\",\"Symbol.replace\",\"当该对象被str.replace(myObject)方法调用时，会返回 该方法的返回值。\",\"Symbol.search\",\"当该对象被str. search (myObject)方法调用时，会返回 该方法的返回值。\",\"Symbol.split\",\"当该对象被str. split (myObject)方法调用时，会返回该 方法的返回值。\",\"Symbol.iterator\",\"对象进行for...of循环时，会调用Symbol.iterator方法， 返回该对象的默认遍历器\",\"Symbol.toPrimitive\",\"该对象被转为原始类型的值时，会调用这个方法，返 回该对象对应的原始类型值。\",\"Symbol. toStringTag\",\"在该对象上面调用toString方法时，返回该方法的返 回值\",\"Symbol. unscopables\",\"该对象指定了使用with关键字时，哪些属性会被with 环境排除。\",\"class Person{ static [Symbol.hasInstance](param){ console.log(param); console.log(\\\"我被用来检测类型了\\\"); return false; } } let o = {}; console.log(o instanceof Person); const arr = [1,2,3]; const arr2 = [4,5,6]; console.log(arr.concat(arr2)); //[1,2,3,4,5,6] arr2[Symbol.isConcatSpreadable] = false; console.log(arr.concat(arr2)); //[1,2,3,[4,5,6]]\"]},\"53\":{\"h\":\"Iterator 迭代器\",\"t\":[\"迭代器、遍历器（Iterator）就是一种机制。它是一种接口，为各种不同的数据结构提\",\"供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作。\"]},\"54\":{\"h\":\"工作原理\",\"t\":[\"ES6创造了一种新的遍历命令for...of循环，Iterator接口主要供for...of消费\",\"const xiyou = ['唐僧','孙悟空','猪八戒','沙僧']; for(let v of xiyou){ console.log(v); }\",\"原生具备iterator接口的数据(可用for of遍历)\",\"Array\",\"Arguments\",\"Set\",\"Map\",\"String\",\"TypedArray\",\"NodeList\",\"工作原理\",\"创建一个指针对象，指向当前数据结构的起始位置\",\"第一次调用对象的next方法，指针自动指向数据结构的第一个成员\",\"let iterator = xiyou[Symbol.iterator](); console.log(iterator);\"]},\"55\":{\"c\":[\"JavaScript\",\"前端笔记\"]},\"56\":{\"c\":[\"JavaScript\",\"ES6+\"]},\"57\":{\"h\":\"JS 常用方法整理\"},\"58\":{\"h\":\"Array对象方法\"},\"59\":{\"h\":\"常用方法\",\"t\":[\"方法\",\"作用\",\"push( )\",\"动态向数组的尾部添加一个单元\",\"unshift( )\",\"动态向数组头部添加一个单元\",\"pop( )\",\"删除最后一个单元\",\"shift( )\",\"删除第一个单元\",\"splice( )\",\"动态删除任意单元（）\",\"使用以上4个方法时，都是直接在原数组上进行操作，即成功调任何一个方法，原数组都跟着发生相应的改变。并且在添加或删除单元时 length 并不会发生错乱。\",\"<script> // 定义一个数组 let arr = ['html', 'css', 'javascript'] // 1. push 动态向数组的尾部添加一个单元 arr.push('Nodejs') console.log(arr) arr.push('Vue') // 2. unshift 动态向数组头部添加一个单元 arr.unshift('VS Code') console.log(arr) // 3. splice 动态删除任意单元 arr.splice(2, 1) // 从索引值为2的位置开始删除1个单元 console.log(arr) // 4. pop 删除最后一个单元 arr.pop() console.log(arr) // 5. shift 删除第一个单元 arr.shift() console.log(arr) </script>\"]},\"60\":{\"h\":\"拓展方法\",\"t\":[\"方法\",\"作用\",\"说明\",\"forEach\",\"遍历数组\",\"不返回数组，经常用于查找遍历数组元素\",\"filter\",\"过滤数组\",\"返回新数组，返回的是筛选满足条件的数组元素\",\"map\",\"迭代数组\",\"返回新数组，返回的是处理之后的数组元素，想要使用返回的新数组\",\"reduce\",\"累计器\",\"返回累计处理的结果，常用于求和\",\"join\",\"find\",\"查找元素\",\"返回符合测试条件的第一个数组元素值，如果没有符合条件的则返回 undefined(重点)\",\"every\",\"检测数组所有元素是否都符合指定条件，如果所有元素都通过检测返回 true，否则返回 false(重点)\",\"some\",\"检测数组中的元素是否满足指定条件 如果数组中有元素满足条件返回 true，否则返回 false\",\"concat\",\"合并数组\",\"合并两个数组，返回生成新数组\",\"sort\",\"对原数组单元值排序\",\"reverse\",\"反转数组\",\"findIndex\",\"查找元素\",\"查找元素的索引值\",\"from\",\"伪数组转真数组\",\"伪数组转为真数组，返回新数组\"]},\"61\":{\"h\":\"map( ) 迭代数组\",\"t\":[\"语法：\",\"<body> <script> const arr = ['red', 'blue', 'pink'] // 1. 数组 map方法 处理数据并且 返回一个数组 const newArr = arr.map(function (ele, index) { // console.log(ele) // 数组元素 // console.log(index) // 索引号 return ele + '颜色' }) console.log(newArr) </script> </body>\",\"map 也称为映射。映射是个术语，指两个元素的集之间元素相互“对应”的关系。\",\"map重点在于有返回值，forEach没有返回值（undefined）\"]},\"62\":{\"h\":\"forEach( ) 遍历数组\",\"t\":[\"forEach() 方法用于调用数组的每个元素，并将元素传递给回调函数\",\"与map相比，forEach不返回数组。\",\"注意：\",\"1.forEach 主要是遍历数组\",\"2.参数当前数组元素是必须要写的， 索引号可选。\",\"<body> <script> // forEach 就是遍历 加强版的for循环 适合于遍历数组对象 const arr = ['red', 'green', 'pink'] const result = arr.forEach(function (item, index) { console.log(item) // 数组元素 red green pink console.log(index) // 索引号 }) // console.log(result) //undefined </script> </body>\"]},\"63\":{\"h\":\"filter( ) 过滤数组\",\"t\":[\"filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素\",\"主要使用场景： 筛选数组符合条件的元素，并返回筛选之后元素的新数组\",\"<body> <script> const arr = [10, 20, 30] // const newArr = arr.filter(function (item, index) { // // console.log(item) // // console.log(index) // return item >= 20 // }) // 返回的符合条件的新数组 const newArr = arr.filter(item => item >= 20) console.log(newArr) </script> </body>\"]},\"64\":{\"h\":\"join( ) 元素拼接\",\"t\":[\"**作用：**join() 方法用于把数组中的所有元素转换一个字符串\",\"语法：\",\"<body> <script> const arr = ['red', 'blue', 'pink'] // 1. 数组 map方法 处理数据并且 返回一个数组 const newArr = arr.map(function (ele, index) { // console.log(ele) // 数组元素 // console.log(index) // 索引号 return ele + '颜色' }) console.log(newArr) // 2. 数组join方法 把数组转换为字符串 // 小括号为空则逗号分割 console.log(newArr.join()) // red颜色,blue颜色,pink颜色 // 小括号是空字符串，则元素之间没有分隔符 console.log(newArr.join('')) //red颜色blue颜色pink颜色 console.log(newArr.join('|')) //red颜色|blue颜色|pink颜色 </script> </body>\"]},\"65\":{\"h\":\"find( ) 查找元素\",\"t\":[\"返回符合测试条件的第一个数组元素值，如果没有符合条件的则返回 undefined(重点)\",\"<body> <script> const arr = [ { name: '小米', price: 1999 }, { name: '华为', price: 3999 }, { name: '华为', price: 3999 }, ] // 找小米 这个对象，并且返回这个对象 const mi = arr.find(function (item) { // console.log(item) // // console.log(item.name) // // console.log(111) return item.name === '华为' }) // 1. find 查找 // const mi = arr.find(item => item.name === '小米') console.log(mi) </script> </body>\"]},\"66\":{\"h\":\"every( ) 检测每一个\",\"t\":[\"每一个是否都符合条件，如果都符合返回 true ，否则返回false\",\"// 2. every 每一个是否都符合条件，如果都符合返回 true ，否则返回false // const arr1 = [10, 20, 30] // const flag = arr1.every(item => item >= 20) // console.log(flag)\"]},\"67\":{\"h\":\"reduce( ) 累计器\",\"t\":[\"无初始值时，数组第一个元素作为【上一次的值prev】，第二个元素作为【当前值current】，相加后作为【返回值】，第二次返回值作为【上一次的值prev】；\",\"有初始值时，【初始值】作为【上一次的值prev】，数组第一个元素作为作为【当前值current】，相加后作为【返回值】，第二次返回值作为【上一次的值prev】；\",\"当对象中属性的值相加时，需设【初始值】为0（即【上一次的值prev】为0），【当前值current】为current.要加的属性名。 return prev + current.属性名。\",\"<body> <script> const arr = [1, 2, 3] // 1. 数组 map方法 处理数据并且 返回一个数组 const total = arr.reduce(function (prev, current) { // console.log(prev) // 上一次的值 // console.log(current) // 当前值 return prev + current },10) //10为初始值 console.log(total) //16 （1+2+3 +10） </script> </body>\"]},\"68\":{\"h\":\"\",\"t\":[\"MDN链接\",\"slice() 方法返回一个新的数组对象，这一对象是一个由 start 和 end 决定的原数组的浅拷贝（包括 start，不包括 end），其中 start 和 end 代表了数组元素的索引。原始数组不会被改变\",\"语法\",\"slice()\",\"slice(start)\",\"slice(start, end)\",\"const animals = ['ant', 'bison', 'camel', 'duck', 'elephant']; console.log(animals.slice(2)); // Expected output: Array [\\\"camel\\\", \\\"duck\\\", \\\"elephant\\\"] console.log(animals.slice(2, 4)); // Expected output: Array [\\\"camel\\\", \\\"duck\\\"] console.log(animals.slice(1, 5)); // Expected output: Array [\\\"bison\\\", \\\"camel\\\", \\\"duck\\\", \\\"elephant\\\"] console.log(animals.slice(-2)); // Expected output: Array [\\\"duck\\\", \\\"elephant\\\"] console.log(animals.slice(2, -1)); // Expected output: Array [\\\"camel\\\", \\\"duck\\\"] console.log(animals.slice()); // Expected output: Array [\\\"ant\\\", \\\"bison\\\", \\\"camel\\\", \\\"duck\\\", \\\"elephant\\\"]\"]},\"69\":{\"h\":\"排序\",\"t\":[\"MDN链接\",\"sort() 方法就地对数组的元素进行排序，并返回对相同数组的引用。默认排序是将元素转换为字符串，然后按照它们的 UTF-16 码元值升序排序。\",\"由于它取决于具体实现，因此无法保证排序的时间和空间复杂度。\",\"如果想要不改变原数组的排序方法，可以使用 toSorted()。\",\"语法\",\"sort()\",\"sort(compareFn)\",\"参数\",\"compareFn 可选\",\"定义排序顺序的函数。返回值应该是一个数字，其正负性表示两个元素的相对顺序。该函数使用以下参数调用：\",\"a 第一个用于比较的元素。不会是 undefined。\",\"b 第二个用于比较的元素。不会是 undefined。\",\"如果省略该函数，数组元素会被转换为字符串，然后根据每个字符的 Unicode 码位值进行排序。例子参考\",\"const months = ['March', 'Jan', 'Feb', 'Dec']; months.sort(); console.log(months); // Expected output: Array [\\\"Dec\\\", \\\"Feb\\\", \\\"Jan\\\", \\\"March\\\"] const array1 = [1, 30, 4, 21, 100000]; array1.sort(); console.log(array1); // Expected output: Array [1, 100000, 21, 30, 4] var arr = [10, 20, 1, 2]; arr.sort(function(a,b){ if(a<b){ return -1; } if(a>b){ return 1; } return 0; }) console.log(arr); //[1, 2, 10, 20] //如上面代码，按照正序（由小到大）排列。 //通常规定，如果a<b,则返回-1；如果a>b,则返回1；如果a==b,则返回0; //倒序相反。 var arr = [10, 20, 1, 2]; arr.sort(function(a,b){ return a-b; }) console.log(arr); //[20, 10, 2, 1]\"]},\"70\":{\"h\":\"some和every\",\"t\":[\"some() 方法测试数组中是否至少有一个元素通过了由提供的函数实现的测试。如果在数组中找到一个元素使得提供的函数返回 true，则返回 true；否则返回 false。它不会修改数组。\",\"const array = [1, 2, 3, 4, 5]; // some 只要有一个>4，就返回true console.log(array.some((item)=>{ return item > 4 })); // true // every 必须全>4才返回true console.log(array.every((item)=>{ return item > 4 })); // false\"]},\"71\":{\"h\":\"异步问题\"},\"72\":{\"h\":\"1.\",\"t\":[\"forEach不会等待async函数中的await完成，异步操作会被并行执行，并不会按照预期的顺序执行。因此，如果你需要顺序执行异步操作，建议使用for...of循环而不是forEach。\"]},\"73\":{\"h\":\"2.\",\"t\":[\"map可以配合async和await使用，但它会返回一个包含Promise的数组，因为每次async函数调用都会返回一个Promise对象。为了等待所有异步操作完成，可以使用Promise.all：Promise.all\",\"const results = await Promise.all(array.map(async (item) => { // 异步操作 return await asyncFunction(item); }));\"]},\"74\":{\"h\":\"3.\",\"t\":[\"filter的返回结果是一个布尔值，判断是否保留当前项。因为filter也是并行执行的，返回值不会等待await，因此不适合直接在其中使用异步操作。可以配合map和Promise.all来实现异步过滤：\",\"const results = await Promise.all(array.map(async (item) => { return await asyncCondition(item) ? item : null; })); const filtered = results.filter(item => item !== null);\",\"如果你需要顺序执行异步操作，for...of会比forEach、map、filter更合适。\"]},\"75\":{\"h\":\"Sring对象方法\",\"t\":[\"实例属性/方法\",\"说明\",\"length\",\"（属性）用来获取字符串长度\",\"split('分隔符')\",\"用来将字符串拆分成数组\",\"substring（需要截取的第一个字符的索引[,结束的索引号]）\",\"用于字符串截取，[,结束的索引号]不包含要取的字符\",\"startsWith(检测字符串[, 检测位置索引号])\",\"检测是否以某字符开头\",\"includes(搜索的字符串[, 检测位置索引号])\",\"判断一个字符串是否包含在另一个字符串中，根据情况返回 true 或 false（区分大小写）\",\"toUpperCase\",\"用于将字母转换成大写\",\"toLowerCase\",\"用于将字母转换成小写\",\"indexOf\",\"检测是否包含某字符\",\"endsWith\",\"检测是否以某字符结尾\",\"replace\",\"用于替换字符串，支持正则匹配\",\"match\",\"用于查找字符串，支持正则匹配\",\"slice\",\"charAt()\",\"<script> //1. split 把字符串 转换为 数组 和 join() 相反 // const str = 'pink,red' // const arr = str.split(',') // console.log(arr) // const str1 = '2022-4-8' // const arr1 = str1.split('-') // console.log(arr1) // 2. 字符串的截取 substring(开始的索引号[， 结束的索引号]) // 2.1 如果省略 结束的索引号，默认取到最后 // 2.2 结束的索引号不包含想要截取的部分 // const str = '今天又要做核酸了' // console.log(str.substring(5, 7)) // 3. startsWith 判断是不是以某个字符开头 // const str = 'pink老师上课中' // console.log(str.startsWith('pink')) // 4. includes 判断某个字符是不是包含在一个字符串里面 const str = '我是pink老师' console.log(str.includes('pink')) // true </script>\"]},\"76\":{\"h\":\"trim( ) 删除文本两侧空格\",\"t\":[\"let str = ' hello world ' console.log(str.trim()); //删除文本两侧空格\"]},\"77\":{\"h\":\"Number对象方法\"},\"78\":{\"h\":\"toFixed( ) 保留小数位的长度\",\"t\":[\"Number 是内置的构造函数，用于创建数值，实例方法 toFixed 用于设置保留小数位的长度。\",\"<script> // toFixed 方法可以让数字指定保留的小数位数（四舍五入） const num = 10.923 // console.log(num.toFixed()) console.log(num.toFixed(1)) const num1 = 10 console.log(num1.toFixed(2)) </script>\"]},\"79\":{\"h\":\"Object对象方法\"},\"80\":{\"h\":\"Object.keys()\",\"t\":[\"Object.keys() 静态方法返回一个由给定对象自身的可枚举的字符串键属性名组成的数组。\",\"const object1 = { a: 'somestring', b: 42, c: false, }; console.log(Object.keys(object1)); // Expected output: Array [\\\"a\\\", \\\"b\\\", \\\"c\\\"]\"]},\"81\":{\"h\":\"时间戳方法\"},\"82\":{\"h\":\"getTime()\",\"t\":[\"可获取指定时间戳\",\"//当前时间戳 const date = new Date() data.getTime()\"]},\"83\":{\"h\":\"+new Date()\",\"t\":[\"可获取将来时间戳\",\"//当前时间戳 +new Date() //相当于Number(new Date()) //指定时间戳 +new Date('2023-10-28 14:45:00')\"]},\"84\":{\"h\":\"Date.now()\",\"t\":[\"只能得到当前时间戳，无需实例化（无需new Date()）\",\"//当前时间戳 Date.now()\"]},\"85\":{\"h\":\"倒计时\",\"t\":[\"算法\",\"将来的时间戳 - 现在的时间戳 = 剩余时间毫秒数\",\"剩余时间毫秒数 转换为 剩余时间 年月日时分秒 就是倒计时时间\",\"公式\",\"时间戳得到毫秒，需转成秒再计算\",\"天数：d=parseInt(总秒数/60/60/24);\",\"小时：h=parseInt(总秒数/60/60%24);\",\"分数：m=parseInt(总秒数/60%60);\",\"秒数：s=parseInt(总秒数%60)；\",\"let h = parseInt(count / 60 / 60 % 24) h = h < 10 ? '0' + h : h let m = parseInt(count / 60 % 60) m = m < 10 ? '0' + m : m let s = parseInt(count % 60) s = s < 10 ? '0' + s : s console.log(h, m, s)\"]},\"86\":{\"h\":\"\"},\"87\":{\"h\":\"\"},\"88\":{\"c\":[\"JavaScript\",\"前端笔记\"]},\"89\":{\"c\":[\"JavaScript\"]},\"90\":{\"h\":\"JavaScrip 基础\",\"t\":[\"复习所记，并不全面。\"]},\"91\":{\"h\":\"输入输出\"},\"92\":{\"h\":\"输入\",\"t\":[\"向 prompt() 输入任意内容会以弹窗形式出现在浏览器中，一般提示用户输入一些内容。\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 输入输出</title> </head> <body> <script> // 1. 输入的任意数字，都会以弹窗形式展示 document.write('要输出的内容') alert('要输出的内容'); // 2. 以弹窗形式提示用户输入姓名，注意这里的文字使用英文的引号 prompt('请输入您的姓名:') </script> </body> </html>\"]},\"93\":{\"h\":\"输出\",\"t\":[\"console.log()\",\"console.dir() 打印对象 打印出该对象(object)的所有属性和属性值;对于输出 DOM 对象非常有用，因为会显示 DOM 对象的所有属性\",\"let div = document.querySelector('div') console.dir(div)\"]},\"94\":{\"h\":\"变量\"},\"95\":{\"h\":\"let和var的区别\",\"t\":[\"let定义的变量是块级的变量。var定义的变量是全局变量或者函数变量。\",\"作用范围：let定义的变量只对它所在的区域内有效，而var定义的之内。\",\"变量声明：var可以重复声明，let不能重复声明\",\"变量赋值：var不赋值默认为undefined，let必须先赋值。\"]},\"96\":{\"h\":\"const\",\"t\":[\"const声明常量后值不可修改。\",\"注意：复杂数据类型地址不变的情况下可以修改，因为存储的地址没有修改，只是修改了栈的内容。\",\"建议数组和对象用const声明。\",\"const arr = ['red','pink'] arr.push('blue') console.log(arr) //正常 arr = [1,2,4] console.log(arr) //报错\"]},\"97\":{\"h\":\"let、var、const的使用\",\"t\":[\"优先使用const，可以后面发现变量要被修改，再改为let。\"]},\"98\":{\"h\":\"数组\"},\"99\":{\"h\":\"操作数组\",\"t\":[\"数组做为对象数据typora怎么类型，不但有 length 属性可以使用，还提供了许多方法：\",\"push 动态向数组的尾部添加一个单元\",\"unshit 动态向数组头部添加一个单元\",\"pop 删除最后一个单元\",\"shift 删除第一个单元\",\"splice 动态删除任意单元\",\"使用以上4个方法时，都是直接在原数组上进行操作，即成功调任何一个方法，原数组都跟着发生相应的改变。并且在添加或删除单元时 length 并不会发生错乱。\",\"<script> // 定义一个数组 let arr = ['html', 'css', 'javascript'] // 1. push 动态向数组的尾部添加一个单元 arr.push('Nodejs') console.log(arr) arr.push('Vue') // 2. unshit 动态向数组头部添加一个单元 arr.unshift('VS Code') console.log(arr) // 3. splice 动态删除任意单元 arr.splice(2, 1) // 从索引值为2的位置开始删除1个单元 console.log(arr) // 4. pop 删除最后一个单元 arr.pop() console.log(arr) // 5. shift 删除第一个单元 arr.shift() console.log(arr) </script>\"]},\"100\":{\"h\":\"函数\"},\"101\":{\"h\":\"函数命名规范\",\"t\":[\"尽量小驼峰命名法\",\"前缀应该为动词\",\"常用动词约定\",\"动词\",\"含义\",\"can\",\"判断是否可执行某个动作\",\"has\",\"判断是否含有某个值\",\"is\",\"判断是否为某个值\",\"get\",\"获取某个值\",\"set\",\"设置某个值\",\"load\",\"加载某些数据\",\"例如：\",\"function getName(){} function addSquares(){}\"]},\"102\":{\"h\":\"匿名函数\",\"t\":[\"函数可以分为具名函数和匿名函数\",\"匿名函数：没有名字的函数,无法直接使用。\"]},\"103\":{\"h\":\"函数表达式\",\"t\":[\"必须先声明和赋值，再调用\",\"// 声明 let fn = function() { console.log('函数表达式') } // 调用 fn()\"]},\"104\":{\"h\":\"立即执行函数\",\"t\":[\"(function(){ xxx })(); (function(){xxxx}());\",\"无需调用，立即执行，其实本质已经调用了\",\"多个立即执行函数之间用分号隔开\"]},\"105\":{\"h\":\"函数返回值\",\"t\":[\"1、没用return默认返回undefined\",\"2、return后的数据不能换行写\"]},\"106\":{\"h\":\"回调函数\",\"t\":[\"如果将函数 A 做为参数传递给函数 B 时，我们称函数 A 为回调函数。\"]},\"107\":{\"h\":\"对象\",\"t\":[\"对象是 JavaScript 数据类型的一种，之前已经学习了数值类型、字符串类型、布尔类型、undefined。对象数据类型可以被理解成是一种数据集合。它由属性和方法两部分构成。\"]},\"108\":{\"h\":\"语法\",\"t\":[\"声明一个对象类型的变量与之前声明一个数值或字符串类型的变量没有本质上的区别。\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 对象语法</title> </head> <body> <script> // 声明字符串类型变量 let str = 'hello world!' // 声明数值类型变量 let num = 199 // 声明对象类型变量，使用一对花括号 // user 便是一个对象了，目前它是一个空对象 let user = {} </script> </body> </html>\"]},\"109\":{\"h\":\"属性和访问\",\"t\":[\"数据描述性的信息称为属性，如人的姓名、身高、年龄、性别等，一般是名词性的。\",\"属性都是成 对出现的，包括属性名和值，它们之间使用英文 : 分隔\",\"多个属性之间使用英文 , 分隔\",\"属性就是依附在对象上的变量\",\"属性名可以使用 \\\"\\\" 或 ''，一般情况下省略，除非名称遇到特殊符号如空格、中横线等\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 对象语法</title> </head> <body> <script> // 通过对象描述一个人的数据信息 // person 是一个对象，它包含了一个属性 name // 属性都是成对出现的，属性名 和 值，它们之间使用英文 : 分隔 let person = { name: '小明', // 描述人的姓名 age: 18, // 描述人的年龄 stature: 185, // 描述人的身高 gender: '男', // 描述人的性别 } </script> </body> </html>\",\"声明对象，并添加了若干属性后，可以使用 . 或 [] 获得对象中属性对应的值，我称之为属性访问。\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 对象语法</title> </head> <body> <script> // 通过对象描述一个人的数据信息 // person 是一个对象，它包含了一个属性 name // 属性都是成对出现的，属性名 和 值，它们之间使用英文 : 分隔 let person = { name: '小明', // 描述人的姓名 age: 18, // 描述人的年龄 stature: 185, // 描述人的身高 gender: '男', // 描述人的性别 }; // 访问人的名字 console.log(person.name) // 结果为 小明 // 访问人性别 console.log(person.gender) // 结果为 男 // 访问人的身高 console.log(person['stature']) // 结果为 185 // 或者 console.log(person.stature) // 结果同为 185 </script> </body> </html>\",\"扩展：也可以动态为对象添加属性，动态添加与直接定义是一样的，只是语法上更灵活。\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 对象语法</title> </head> <body> <script> // 声明一个空的对象（没有任何属性） let user = {} // 动态追加属性 user.name = '小明' user['age'] = 18 // 动态添加与直接定义是一样的，只是语法上更灵活 </script> </body> </html>\"]},\"110\":{\"h\":\"方法和调用\",\"t\":[\"数据行为性的信息称为方法，如跑步、唱歌等，一般是动词性的，其本质是函数。\",\"方法是由方法名和函数两部分构成，它们之间使用 : 分隔\",\"多个属性之间使用英文 , 分隔\",\"方法是依附在对象中的函数\",\"方法名可以使用 \\\"\\\" 或 ''，一般情况下省略，除非名称遇到特殊符号如空格、中横线等\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 对象方法</title> </head> <body> <script> // 方法是依附在对象上的函数 let person = { name: '小红', age: 18, // 方法是由方法名和函数两部分构成，它们之间使用 : 分隔 singing: function () { console.log('两只老虎，两只老虎，跑的快，跑的快...') }, run: function () { console.log('我跑的非常快...') } } </script> </body> </html>\",\"声明对象，并添加了若干方法后，可以使用 . 或 [] 调用对象中函数，我称之为方法调用。\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 对象方法</title> </head> <body> <script> // 方法是依附在对象上的函数 let person = { name: '小红', age: 18, // 方法是由方法名和函数两部分构成，它们之间使用 : 分隔 singing: function () { console.log('两只老虎，两只老虎，跑的快，跑的快...') }, run: function () { console.log('我跑的非常快...') } } // 调用对象中 singing 方法 person.singing() // 调用对象中的 run 方法 person.run() </script> </body> </html>\",\"扩展：也可以动态为对象添加方法，动态添加与直接定义是一样的，只是语法上更灵活。\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <title>JavaScript 基础 - 对象方法</title> </head> <body> <script> // 声明一个空的对象（没有任何属性，也没有任何方法） let user = {} // 动态追加属性 user.name = '小明' user.['age'] = 18 // 动态添加方法 user.move = function () { console.log('移动一点距离...') } </script> </body> </html>\",\"注：无论是属性或是方法，同一个对象中出现名称一样的，后面的会覆盖前面的。\"]},\"111\":{\"h\":\"null\",\"t\":[\"null 也是 JavaScript 中数据类型的一种，通常只用它来表示不存在的对象。使用 typeof 检测它的类型时，结果为 object。\"]},\"112\":{\"h\":\"遍历对象\",\"t\":[\"for in 遍历对象时，k为属性名；遍历数组时，k为数组索引号；\",\"k是字符串类型，\",\"let obj = { uname: 'pink' } for(let k in obj) { // k 属性名 字符串 带引号 obj.'uname' k === 'uname' // obj[k] 属性值 obj['uname'] obj[k] }\"]},\"113\":{\"h\":\"内置对象\",\"t\":[\"回想一下我们曾经使用过的 console.log，console其实就是 JavaScript 中内置的对象，该对象中存在一个方法叫 log，然后调用 log 这个方法，即 console.log()。\",\"除了 console 对象外，JavaScritp 还有其它的内置的对象\"]},\"114\":{\"h\":\"Math\",\"t\":[\"Math 是 JavaScript 中内置的对象，称为数学对象，这个对象下即包含了属性，也包含了许多的方法。\"]},\"115\":{\"h\":\"属性\",\"t\":[\"Math.PI，获取圆周率\",\"// 圆周率 console.log(Math.PI);\"]},\"116\":{\"h\":\"方法\",\"t\":[\"Math.random，生成 0 到 1 间的随机数\",\"// 0 ~ 1 之间的随机数, 包含 0 不包含 1 Math.random()\",\"Math.ceil，数字向上取整\",\"// 舍弃小数部分，整数部分加1 Math.ceil(3.4)\",\"Math.floor，数字向下取整\",\"// 舍弃小数部分，整数部分不变 Math.floor(4.68)\",\"Math.round，四舍五入取整\",\"// 取整，四舍五入原则 Math.round(5.46539) Math.round(4.849)\",\"Math.max，在一组数中找出最大的\",\"// 找出最大值 Math.max(10, 21, 7, 24, 13)\",\"Math.min，在一组数中找出最小的\",\"// 找出最小值 Math.min(24, 18, 6, 19, 21)\",\"Math.pow，幂方法\",\"// 求某个数的多少次方 Math.pow(4, 2) // 求 4 的 2 次方 Math.pow(2, 3) // 求 2 的 3 次方\",\"Math.sqrt，平方根\",\"// 求某数的平方根 Math.sqrt(16)\",\"数学对象提供了比较多的方法，这里不要求强记，通过演示数学对象的使用，加深对对象的理解。\"]},\"117\":{\"h\":\"随机取数组元素\",\"t\":[\"let arr =['张飞','刘备','关羽']; let random = Math.floor(Math.random() * arr.length); console.log(arr[random]);\"]},\"118\":{\"h\":\"生成随机数\",\"t\":[\"生成0~10的随机数\",\"Math.floor(Math.random() * (10 + 1));\",\"生成5~10的随机数\",\"Math.floor(Math.random() * (5 + 1)) + 5;\",\"生成N~M的随机数\",\"Math.floor(Math.random() * (M - N + 1)) + N;\"]},\"119\":{\"h\":\"严格模式\",\"t\":[\"在js文件或函数开头添加 \\\"use strict\\\";为开启严格模式。\",\"引入模块的js文件自动开启严格模式。\",\"\\\"use strict\\\";\",\"// 严格模式 \\\"use strict\\\"; x = 3.14; // 抛出 ReferenceError\",\"\\\"use strict\\\"; var obj = {}; Object.defineProperty(obj, 'x', { value: 0, writable: false }); obj.x = 3.14; // 抛出 TypeError\",\"\\\"use strict\\\"; function sum(a, a, c) { // 抛出 SyntaxError return a + a + c; }\",\"\\\"use strict\\\"; function f() { return this; } f(); // 返回 undefined\",\"\\\"use strict\\\"; with (Math){ x = cos(2) } // 抛出 SyntaxError\",\" \\\"use strict\\\"; var x = 010; // 抛出 SyntaxError\",\"\\\"use strict\\\"; var x = 3.14; delete x; // 抛出 SyntaxError\"]},\"120\":{\"c\":[\"JavaScript\",\"前端笔记\"]},\"121\":{\"c\":[\"JavaScript\"]},\"122\":{\"h\":\"JavaScrip 进阶\"},\"123\":{\"h\":\"作用域\",\"t\":[\"了解作用域对程序执行的影响及作用域链的查找机制，使用闭包函数创建隔离作用域避免全局变量污染。\",\"作用域（scope）规定了变量能够被访问的“范围”，离开了这个“范围”变量便不能被访问，作用域分为全局作用域和局部作用域。\"]},\"124\":{\"h\":\"局部作用域（Local）\",\"t\":[\"局部作用域分为函数作用域和块作用域。\"]},\"125\":{\"h\":\"函数作用域\",\"t\":[\"在函数内部声明的变量只能在函数内部被访问，外部无法直接访问。\",\"<script> // 声明 counter 函数 function counter(x, y) { // 函数内部声明的变量 const s = x + y console.log(s) // 18 } // 设用 counter 函数 counter(10, 8) // 访问变量 s console.log(s)// 报错 </script>\",\"总结：\",\"函数内部声明的变量，在函数外部无法被访问\",\"函数的参数也是函数内部的局部变量\",\"不同函数内部声明的变量无法互相访问\",\"函数执行完毕后，函数内部的变量实际被清空了\"]},\"126\":{\"h\":\"块作用域\",\"t\":[\"在 JavaScript 中使用 {} 包裹的代码称为代码块，代码块内部声明的变量外部将【有可能】无法被访问。\",\"<script> { // age 只能在该代码块中被访问 let age = 18; console.log(age); // 正常 } // 超出了 age 的作用域 console.log(age) // 报错 let flag = true; if(flag) { // str 只能在该代码块中被访问 let str = 'hello world!' console.log(str); // 正常 } // 超出了 age 的作用域 console.log(str); // 报错 for(let t = 1; t <= 6; t++) { // t 只能在该代码块中被访问 console.log(t); // 正常 } // 超出了 t 的作用域 console.log(t); // 报错 </script>\",\"JavaScript 中除了变量外还有常量，常量与变量本质的区别是【常量必须要有值且不允许被重新赋值】，常量值为对象时其属性和方法允许重新赋值。\",\"<script> // 必须要有值 const version = '1.0.0'; // 不能重新赋值 // version = '1.0.1'; // 常量值为对象类型 const user = { name: '小明', age: 18 } // 不能重新赋值 user = {}; // 属性和方法允许被修改 user.name = '小小明'; user.gender = '男'; </script>\",\"总结：\",\"let 声明的变量会产生块作用域，var 不会产生块作用域\",\"const 声明的常量也会产生块作用域\",\"不同代码块之间的变量无法互相访问\",\"推荐使用 let 或 const\",\"注：开发中 let 和 const 经常不加区分的使用，如果担心某个值会不小被修改时，则只能使用 const 声明成常量。\"]},\"127\":{\"h\":\"全局作用域（Global）\",\"t\":[\"<script> 标签和 .js 文件的【最外层】就是所谓的全局作用域，在此声明的变量在函数内部也可以被访问。\",\"<script> // 此处是全局 function sayHi() { // 此处为局部 } // 此处为全局 </script>\",\"全局作用域中声明的变量，任何其它作用域都可以被访问，如下代码所示：\",\"<script> // 全局变量 name const name = '小明' // 函数作用域中访问全局 function sayHi() { // 此处为局部 console.log('你好' + name) } // 全局变量 flag 和 x const flag = true let x = 10 // 块作用域中访问全局 if(flag) { let y = 5 console.log(x + y) // x 是全局的 } </script>\",\"总结：\",\"为 window 对象动态添加的属性默认也是全局的，不推荐！\",\"函数中未使用任何关键字声明的变量为全局变量，不推荐！！！\",\"尽可能少的声明全局变量，防止全局变量被污染\",\"JavaScript 中的作用域是程序被执行时的底层机制，了解这一机制有助于规范代码书写习惯，避免因作用域导致的语法错误。\"]},\"128\":{\"h\":\"作用域链\",\"t\":[\"在解释什么是作用域链前先来看一段代码：\",\"<script> // 全局作用域 let a = 1 let b = 2 // 局部作用域 function f() { let c // 局部作用域 function g() { let d = 'yo' } } </script>\",\"函数内部允许创建新的函数，f 函数内部创建的新函数 g，会产生新的函数作用域，由此可知作用域产生了嵌套的关系。\",\"如下图所示，父子关系的作用域关联在一起形成了链状的结构，作用域链的名字也由此而来。，在函数被执行时，会优先查找当前函数作用域中查找变量，如果当前作用域查找不到则会依次逐级查找父级作用域直到全局作用域，如下代码所示：\",\"<script> // 全局作用域 let a = 1 let b = 2 // 局部作用域 function f() { let c // let a = 10; console.log(a) // 1 或 10 console.log(d) // 报错 // 局部作用域 function g() { let d = 'yo' // let b = 20; console.log(b) // 2 或 20 } // 调用 g 函数 g() } console.log(c) // 报错 console.log(d) // 报错 f(); </script>\",\"总结：\",\"嵌套关系的作用域串联起来形成了作用域链\",\"相同作用域链中按着从小到大的规则查找变量\",\"子作用域能够访问父作用域，父级作用域无法访问子级作用域\"]},\"129\":{\"h\":\"垃圾回收机制\",\"t\":[\"JS环境中分配的内存, 一般有如下生命周期：\",\"内存分配：当我们声明变量、函数、对象的时候，系统会自动为他们分配内存\",\"内存使用：即读写内存，也就是使用变量、函数等\",\"内存回收：使用完毕，由垃圾回收自动回收不再使用的内存\",\"说明\",\"全局变量一般不会回收(关闭页面回收)；\",\"一般情况下局部变量的值, 不用了, 会被自动回收掉\"]},\"130\":{\"h\":\"引用计数（现浏览器多使用第二种）\",\"t\":[\"IE采用的引用计数算法, 定义“内存不再使用”，就是看一个对象是否有指向它的引用，没有引用了就回收对象\",\"算法：\",\"跟踪记录被引用的次数\",\"如果被引用了一次，那么就记录次数1,多次引用会累加 ++\",\"如果减少一个引用就减1 --\",\"如果引用次数是0 ，则释放内\",\"let arr = [1, 2, 3, 4] arr = nul\",\"它存在一个致命的问题：\",\"嵌套引用（循环引用） 如果两个对象相互引用，尽管他们已不再使用，垃圾回收器不会进行回收，导致内存泄露。 因为他们的引用次数永远不会是0。这样的相互引用如果说很大量的存在就会导致大量的内存泄露。\",\"function fn() { let o1 = {} let o2 = {} o1.a = o2 o2.a = o1 return '引用计数无法回收' } fn()\"]},\"131\":{\"h\":\"标记清除法\",\"t\":[\"现代的浏览器已经了。\",\"现代浏览器通用的大多是基于标记清除算法的某些改进算法，总体思想都是一致的。\",\"核心：\",\"标记清除算法将“不再使用的对象”定义为“无法达到的对象”。\",\"就是从根部（在JS中就是全局对象）出发定时扫描内存中的对象。 凡是能从根部到达的对象，都是还需要使用的。\",\"那些无法由根部出发触及到的对象被标记为不再使用，稍后进行回收\",\"总结：\"]},\"132\":{\"h\":\"闭包（Closure）\",\"t\":[\"闭包是一种比较特殊和函数，使用闭包能够访问函数作用域中的变量。从代码形式上看闭包是一个做为返回值的函数，如下代码所示：\",\"<body> <script> // 1. 闭包 : 内层函数 + 外层函数变量 // function outer() { // const a = 1 // function f() { // console.log(a) // } // f() // } // outer() // 2. 闭包的应用： 实现数据的私有。统计函数的调用次数 // let count = 1 // function fn() { // count++ // console.log(`函数被调用${count}次`) // } // 3. 闭包的写法 统计函数的调用次数 function outer() { let count = 1 function fn() { count++ console.log(`函数被调用${count}次`) } return fn } const re = outer() // const re = function fn() { // count++ // console.log(`函数被调用${count}次`) // } re() re() // const fn = function() { } 函数表达式 // 4. 闭包存在的问题： 可能会造成内存泄漏 </script> </body>\"]},\"133\":{\"h\":\"变量提升\",\"t\":[\"js的缺陷，仅存在于var声明的变量，\",\"<script> // 访问变量 str1 console.log(str1 + 'world!'); //undefinedworld // 声明变量 str1 var str1 = 'hello '; // 访问变量 str2 console.log(str2 + 'world!'); //报错 // 声明变量 str let str2 = 'hello '; </script>\"]},\"134\":{\"h\":\"\"},\"135\":{\"h\":\"函数提升\"},\"136\":{\"h\":\"\"},\"137\":{\"h\":\"动态参数 arguments\",\"t\":[\"只存在于函数里。\",\"<script> // 求生函数，计算所有参数的和 function sum() { // console.log(arguments) let s = 0 for(let i = 0; i < arguments.length; i++) { s += arguments[i] } console.log(s) } // 调用求和函数 sum(5, 10)// 两个参数 sum(1, 2, 4) // 两个参数 </script>\"]},\"138\":{\"h\":\"剩余参数 ...arr\",\"t\":[\"... 是语法符号，置于最末函数形参之前，用于获取多余的实参\",\"借助 ... 获取的剩余实参，是个\",\"<script> function config(baseURL, ...other) { //other是任意变量名 console.log(baseURL) // 得到 'http://baidu.com' console.log(other) // other 得到 ['get', 'json'] } // 调用函数 config('http://baidu.com', 'get', 'json'); </script>\"]},\"139\":{\"h\":\"展开运算符 ...\",\"t\":[\"展开运算符不会修改数组\",\"<script> const arr = [1,2,3,4] console.log(...arr) //1 2 3 4 </script>\",\"一般用于求最大值、合并数组。\",\"由于数组没有求最大值的方法，展开后用Math方法求最大值。\",\"<script> //1.求最大值 const arr1 = [1,2,3,4] //Math.max(1,2,3,4)参数需要逗号隔开, //但直接输出...arr是无逗号的，官方给出的说明是...arr逗号隔开 console.log(Math.max(...arr1)) //4 console.log(Math.min(...arr1)) //1 //2.合并数组 const arr2 = [5,6,7] const arr = [...arr1, ...arr2] console.log(arr) //[1,2,3,4,5,6,7] </script>\"]},\"140\":{\"h\":\"箭头函数\",\"t\":[\"<body> <script> // const fn = function () { // console.log(123) // } // 1. 箭头函数 基本语法 // const fn = () => { // console.log(123) // } // fn() // const fn = (x) => { // console.log(x) // } // fn(1) // 2. 只有一个形参的时候，可以省略小括号 // const fn = x => { // console.log(x) // } // fn(1) // // 3. 只有一行代码的时候，我们可以省略大括号 // const fn = x => console.log(x) // fn(1) // 4. 只有一行代码的时候，可以省略return // const fn = x => x + x // console.log(fn(1)) // 5. 箭头函数可以直接返回一个对象 // const fn = (uname) => ({ uname: uname }) // console.log(fn('刘德华')) </script> </body>\"]},\"141\":{\"h\":\"箭头函数参数\",\"t\":[\"取实参\",\"<body> <script> // 1. 利用箭头函数来求和 const getSum = (...arr) => { let sum = 0 for (let i = 0; i < arr.length; i++) { sum += arr[i] } return sum } const result = getSum(2, 3, 4) console.log(result) // 9 </script>\"]},\"142\":{\"h\":\"\",\"t\":[\"<script> // 以前this的指向： 谁调用的这个函数，this 就指向谁 // console.log(this) // window // // 普通函数 // function fn() { // console.log(this) // window // } // window.fn() // // 对象方法里面的this // const obj = { // name: 'andy', // sayHi: function () { // console.log(this) // obj // } // } // obj.sayHi() // 2. 箭头函数的this 是上一层作用域的this 指向 // const fn = () => { // console.log(this) // window // } // fn() // 对象方法箭头函数 this // const obj = { // uname: 'pink老师', // sayHi: () => { // console.log(this) // this 指向谁？ window // } // } // obj.sayHi() const obj = { uname: 'pink老师', sayHi: function () { console.log(this) // obj let i = 10 const count = () => { console.log(this) // obj } count() } } obj.sayHi() </script>\"]},\"143\":{\"h\":\"解构赋值\",\"t\":[\"知道解构的语法及分类，使用解构简洁语法快速为变量赋值。\",\"解构赋值是一种快速为变量赋值的简洁语法，本质上仍然是为变量赋值，分为数组解构、对象解构两大类型。\"]},\"144\":{\"h\":\"数组解构\",\"t\":[\"数组解构是将数组的单元值快速批量赋值给一系列变量的简洁语法，如下代码所示：\",\"<script> // 普通的数组 let arr = [1, 2, 3] // 批量声明变量 a b c // 同时将数组单元值 1 2 3 依次赋值给变量 a b c let [a, b, c] = arr //let [a, b, c] = [1, 2, 3] console.log(a); // 1 console.log(b); // 2 console.log(c); // 3 //交换变量 let c = 1 let d = 2; //要加分号 [c, d] = [d, c] //变量多，值少 //let [a1, a2, a3, a4] = [1, 2, 3] //console.log(a1) //1 //console.log(a2) //2 //console.log(a3) //3 //console.log(a4) //undefind //给默认值，防止传递undefind let [a1=0, a2=0, a3=0, a4=0] = [1, 2, 3] console.log(a1) //1 console.log(a2) //2 console.log(a3) //3 console.log(a4) //0 //变量少，值多 可用剩余参数 let [b1, b2, ...b3] = [1, 2, 3, 4] console.log(b1) //1 console.log(b2) //2 console.log(b3) //[3, 4] 真数组 //按需导入赋值 let [c1, c2, , c3] = [1, 2, 3, 4] console.log(c1) //1 console.log(c2) //2 console.log(c3) //4 //多维数组解构 //let [d1, d2, d3] = [1, 2, [3, 4]] //console.log(c1) //1 //console.log(c2) //2 //console.log(c3) //[3, 4] let [d1, d2, [d3, d4]] = [1, 2, [3, 4]] console.log(c1) //1 console.log(c2) //2 console.log(c3) //3 console.log(c4) //4 </script>\",\"总结：\",\"赋值运算符 = 左侧的 [] 用于批量声明变量，右侧数组的单元值将被赋值给左侧的变量\",\"变量的顺序对应数组单元值的位置依次进行赋值操作\",\"变量的数量大于单元值数量时，多余的变量将被赋值为 undefined\",\"变量的数量小于单元值数量时，可以通过 ... 获取剩余单元值，但只能置于最末位\",\"允许初始化变量的默认值，且只有单元值为 undefined 时默认值才会生效\",\"注：支持多维解构赋值，比较复杂后续有应用需求时再进一步分析\"]},\"145\":{\"h\":\"对象解构\",\"t\":[\"对象解构是将对象属性和方法快速批量赋值给一系列变量的简洁语法，如下代码所示：\",\"<script> // 普通对象 const user = { name: '小明', age: 18 }; // 批量声明变量 name age // 同时将数组单元值 小明 18 依次赋值给变量 name age //const {name, age} = user //必须变量名和属性名相同 const {name, age} = {name: '小明', age: 18} console.log(name) // 小明 console.log(age) // 18 //变量更名 const {name: uname, age} = {name: '小明', age: 18} //必须变量名和属性名相同 console.log(uname) // 小明 //数组对象解构 // let a = [{ // name: '张三'， // age: 18 // }] // let [{name, age}] = a let a = [{ name: '张三', age: 18 },{ name: '李四', age: 19 }] let [a1={name, age}, a2={name, age}] = a //a1，a2输出两个对象 //let b = [{name, age},{name, age}] = a //b[0],b[1]输出两个对象 //多级对象解构 let b = { name: '佩奇'， family: { mother: '猪妈妈', father: '猪爸爸', sister: '乔治' }, age: 18 } let {name, family: {mother, father, sister}, age} = b </script>\",\"总结：\",\"赋值运算符 = 左侧的 {} 用于批量声明变量，右侧对象的属性值将被赋值给左侧的变量\",\"对象中找不到与变量名一致的属性时变量值为 undefined\",\"允许初始化变量的默认值，属性不存在或单元值为 undefined 时默认值才会生效\",\"注：支持多维解构赋值\",\"<body> <script> // 1. 这是后台传递过来的数据 const msg = { \\\"code\\\": 200, \\\"msg\\\": \\\"获取新闻列表成功\\\", \\\"data\\\": [ { \\\"id\\\": 1, \\\"title\\\": \\\"5G商用自己，三大运用商收入下降\\\", \\\"count\\\": 58 }, { \\\"id\\\": 2, \\\"title\\\": \\\"国际媒体头条速览\\\", \\\"count\\\": 56 }, { \\\"id\\\": 3, \\\"title\\\": \\\"乌克兰和俄罗斯持续冲突\\\", \\\"count\\\": 1669 }, ] } // 需求1： 请将以上msg对象 采用对象解构的方式 只选出 data 方面后面使用渲染页面 // const { data } = msg // console.log(data) // 需求2： 上面msg是后台传递过来的数据，我们需要把data选出当做参数传递给 函数 // const { data } = msg // msg 虽然很多属性，但是我们利用解构只要 data值 function render({ data }) { // const { data } = arr // 我们只要 data 数据 // 内部处理 console.log(data) } render(msg) // 需求3， 为了防止msg里面的data名字混淆，要求渲染函数里面的数据名改为 myData function render({ data: myData }) { // 要求将 获取过来的 data数据 更名为 myData // 内部处理 console.log(myData) } render(msg) </script>\"]},\"146\":{\"h\":\"深入对象\"},\"147\":{\"h\":\"创建对象的三种方法\",\"t\":[\"<body> <script> // 1.字面量创建 const obj = { uname = '张三' age = 18 } // 2.用系统自带的构造函数new Object创建 // 用new创建空对象 const obj = new Object() // 追加属性 obj.uname = '张三' // 或 const obj = new Object({name:'张三'}) // 3.自定义构造函数创建 </script> </body>\"]},\"148\":{\"h\":\"构造函数\",\"t\":[\"构造函数是专门用于创建对象的函数，如果一个函数使用 new 关键字调用，那么这个函数就是构造函数。\",\"构造函数可以快速创建多个类似的对象\"]},\"149\":{\"c\":[\"JavaScript\",\"前端笔记\"]},\"150\":{\"c\":[\"JavaScript\"]},\"151\":{\"h\":\"Web APIs\"},\"152\":{\"h\":\"获取DOM对象 querySelector\",\"t\":[\"querySelector 满足条件的第一个元素querySelector('css选择器')\",\"querySelectorAll 满足条件的元素集合 返回伪数组\",\"其他方式getElementById、getElementsByTagName\"]},\"153\":{\"h\":\"操作元素内容 innerText/innerHTML\",\"t\":[\"通过修改 DOM 的文本内容，动态改变网页的内容。\",\"innerText 将文本内容添加/更新到任意标签位置，文本中包含的标签不会被解析。\",\"<script> // innerText 将文本内容添加/更新到任意标签位置 const intro = document.querySelector('.intro') // intro.innerText = '嗨~ 我叫李雷！' // intro.innerText = '<h4>嗨~ 我叫李雷！</h4>' </script>\",\"innerHTML 将文本内容添加/更新到任意标签位置，文本中包含的标签会被解析。\",\"<script> // innerHTML 将文本内容添加/更新到任意标签位置 const intro = document.querySelector('.intro') intro.innerHTML = '嗨~ 我叫韩梅梅！' intro.innerHTML = '<h4>嗨~ 我叫韩梅梅！</h4>' </script>\",\"总结：如果文本内容中包含 html 标签时推荐使用 innerHTML，否则建议使用 innerText 属性。\"]},\"154\":{\"h\":\"操作元素属性\",\"t\":[\"有3种方式可以实现对属性的修改：\"]},\"155\":{\"h\":\"常用属性修改\",\"t\":[\"直接能过属性名修改，最简洁的语法\",\"<script> // 1. 获取 img 对应的 DOM 元素 const pic = document.querySelector('.pic') // 2. 修改属性 pic.src = './images/lion.webp' pic.width = 400; pic.alt = '图片不见了...' </script>\"]},\"156\":{\"h\":\"控制样式属性\"},\"157\":{\"h\":\"通过修改行内样式 属性，实现对样式的动态修改。\",\"t\":[\"通过元素节点获得的 style 属性本身的数据类型也是对象，如 box.style.color、box.style.width 分别用来获取元素节点 CSS 样式的 color 和 width 的值。\",\"任何标签都有 style 属性，通过 style 属性可以动态更改网页标签的样式，如要遇到 css 属性中包含字符 - 时，要将 - 去掉并将其后面的字母改成大写，如 background-color 要写成 box.style.backgroundColor\",\"// 获取 DOM 节点 const box = document.querySelector('.intro') box.style.color = 'red' box.style.width = '300px' // css 属性的 - 连接符与 JavaScript 的 减运算符 // 冲突，所以要改成驼峰法 box.style.backgroundColor = 'pink'\"]},\"158\":{\"h\":\"通过className 操作类控制CSS\",\"t\":[\"如果修改的样式比较多，直接通过style属性修改比较繁琐，我们可以通过借助于css类名的形式。\",\"注意：\",\"1.由于class是关键字, 所以使用className去代替\",\"2.className是使用新值换旧值, 如果需要添加一个类,需要保留之前的类名\"]},\"159\":{\"h\":\"通过 classList 操作类控制CSS\",\"t\":[\"为了解决className 容易覆盖以前的类名，我们可以通过classList方式追加和删除类名\",\"// 1.获取元素 // let box = document.querySelector('css选择器') let box = document.querySelector('div') // add是个方法 添加 追加 // box.classList.add('active') // remove() 移除 类 // box.classList.remove('one') // 切换类 (有就删除，没有就增加) box.classList.toggle('one') // 检测类 (包含返回true，没有返回false) box.classList.contains('one')\"]},\"160\":{\"h\":\"操作表单元素属性\",\"t\":[\"表单很多情况，也需要修改属性，比如点击眼睛，可以看到密码，本质是把表单类型转换为文本框\",\"正常的有属性有取值的跟其他的标签属性没有任何区别\",\"获取:DOM对象.属性名\",\"设置:DOM对象.属性名= 新值\"]},\"161\":{\"h\":\"自定义属性 data-、dataset\",\"t\":[\"标准属性: 标签天生自带的属性 比如class id title等, 可以直接使用点语法操作比如： disabled、checked、selected\",\"自定义属性：\",\"在html5中推出来了专门的data-自定义属性\",\"在标签上一律以data-开头\",\"在DOM对象上一律以dataset对象方式获取\",\"<div data-id=\\\"1\\\"> 自定义属性 </div> <script> // 1. 获取元素 let div = document.querySelector('div') // 2. 获取自定义属性值 console.log(div.dataset.id) </script>\"]},\"162\":{\"h\":\"元素尺寸与位置\",\"t\":[\"获取元素的自身宽高、包含元素自身设置的宽高、padding、border\",\"offsetWidth和offsetHeight\",\"获取出来的是数值,方便计算\",\"注意: 获取的是可视宽高, 如果盒子是隐藏的,获取的结果是0\"]},\"163\":{\"h\":\"事件\"},\"164\":{\"h\":\"事件监听 addEventListener\",\"t\":[\"addEventListener 是 DOM 对象专门用来添加事件监听的方法，它的两个参数分别为【事件类型】和【事件回调】。\",\"完成事件监听分成3个步骤：\",\"获取 DOM 元素\",\"通过 addEventListener 方法为 DOM 节点添加事件监听\",\"等待事件触发，如用户点击了某个按钮时便会触发 click 事件类型\",\"事件触发后，相对应的回调函数会被执行\",\"addEventListener(事件,事件处理函数,捕获/冒泡触发)\",\"DOM L0 老写法\",\"事件源.on事件 = function()\",\"OM L2 写法\",\"事件源.addEventListener(事件type,事件处理函数listener)\",\"事件源.addEventListener(type, listener, options);\",\"事件源.addEventListener(type, listener, useCapture);\",\"区别：on方式会覆盖，addEvenntListener可绑定多次。\",\"<body> <h3>事件监听</h3> <p id=\\\"text\\\">为 DOM 元素添加事件监听，等待事件发生，便立即执行一个函数。</p> <button id=\\\"btn\\\">点击改变文字颜色</button> <script> // 1. 获取 button 对应的 DOM 对象 const btn = document.querySelector('#btn') // 2. 添加事件监听 btn.addEventListener('click', function () { console.log('等待事件被触发...') // 改变 p 标签的文字颜色 let text = document.getElementById('text') text.style.color = 'red' }) // 3. 只要用户点击了按钮，事件便触发了！！！ </script> </body>\"]},\"165\":{\"h\":\"事件解绑 removeEventListener\",\"t\":[\"DOM L0 老写法\",\"OM L2 写法\"]},\"166\":{\"h\":\"事件类型\"},\"167\":{\"h\":\"常用事件\",\"t\":[\"mouseenter\",\"鼠标是否移入\",\"focus\",\"获得焦点\",\"mouseleave\",\"鼠标是否移出\",\"blur\",\"失去焦点\",\"click\",\"鼠标单击\",\"keydown\",\"键盘按下触发\",\"dblclick\",\"鼠标双击\",\"keyup\",\"键盘抬起触发\",\"input\",\"只要输入就触发\",\"submit\",\"提交事件\"]},\"168\":{\"h\":\"其他事件\"},\"169\":{\"h\":\"页面加载事件\",\"t\":[\"加载外部资源（如图片、外联CSS和JavaScript等）加载完毕时触发的事件\",\"有些时候需要等页面资源全部处理完了做一些事情\"]},\"170\":{\"h\":\"\",\"t\":[\"监听页面所有资源加载完毕：\",\"window.addEventListener('load', function() { // xxxxx })\"]},\"171\":{\"h\":\"\",\"t\":[\"监听页面dom加载完毕：\",\"window.addEventListener('DOMContentLoaded', function() { // xxxxx })\"]},\"172\":{\"h\":\"元素滚动事件 scroll\",\"t\":[\"滚动条在滚动的时候持续触发的事件\",\"window.addEventListener('scroll', function() { // xxxxx })\"]},\"173\":{\"h\":\"页面尺寸事件 resize\",\"t\":[\"会在窗口尺寸改变的时候触发事件：\",\"window.addEventListener('resize', function() { // xxxxx })\"]},\"174\":{\"h\":\"M端事件（移动端）\",\"t\":[\"触屏touch事件\",\"说明\",\"touchstart\",\"手指触摸到一个DOM元素时触发\",\"touchmove\",\"手指在一个DOM元素上滑动时触发\",\"touchend\",\"手指从一个DOM元素上移开时触发\"]},\"175\":{\"h\":\"事件对象\",\"t\":[\"任意事件类型被触发时与事件相关的信息会被以对象的形式记录下来，我们称这个对象为事件对象。\",\"事件回调函数的【第1个参数】即所谓的事件对象，通常习惯性的命名为 event、ev 、e。\",\"<script> const input = document.querySelector('input') // 添加事件监听 input.addEventListener('keyup', function (e) { console.log('任意事件类型被触发后，相关信息会以对象形式被记录下来...'); // 事件回调函数的第1个参数即所谓的事件对象 console.log(e) console.log(e.key) //显示按下的按键 if(e.key === 'Enter'){ console.log('按下了回车') //显示按下的按键 } }) </script>\"]},\"176\":{\"h\":\"环境对象 this\",\"t\":[\"环境对象指的是函数内部特殊的变量 this ，它代表着当前函数运行时所处的环境。\",\"直接调用函数时，this指向window；事件监听函数时，this指向事件绑定的事件源；箭头函数无this。\",\"<script> const btn = document.querySelector('button') // 添加事件监听 btn.addEventListener('click', function () { console.log('任意事件类型被触发后，相关信息会以对象形式被记录下来...'); // 事件回调函数的第1个参数即所谓的事件对象 this.style.backgroundColor = 'red' }) </script>\"]},\"177\":{\"h\":\"事件流\"},\"178\":{\"h\":\"捕获和冒泡\",\"t\":[\"addEventListener 第3个参数决定了事件是在捕获阶段触发还是在冒泡阶段触发\",\"addEventListener 第3个参数为 true 表示捕获阶段触发，false 表示冒泡阶段触发，默认值为 false\",\"事件流只会在父子元素具有相同事件类型时才会产生影响\",\"绝大部分场景都采用默认的冒泡模式（其中一个原因是早期 IE 不支持捕获）\",\"捕获：从父元素到子元素\",\"冒泡：从子元素到父元素\"]},\"179\":{\"h\":\"阻止冒泡 stopPropagation\",\"t\":[\"阻止冒泡是指阻断事件的流动，保证事件只在当前元素被执行，而不再去影响到其对应的祖先元素。\",\"事件对象中的 ev.stopPropagation 方法，专门用来阻止事件冒泡（也可以阻止捕获）。\",\"<body> <h3>阻止冒泡</h3> <p>阻止冒泡是指阻断事件的流动，保证事件只在当前元素被执行，而不再去影响到其对应的祖先元素。</p> <div class=\\\"outer\\\"> <div class=\\\"inner\\\"> <div class=\\\"child\\\"></div> </div> </div> <script> // 获取嵌套的3个节点 const outer = document.querySelector('.outer') const inner = document.querySelector('.inner') const child = document.querySelector('.child') // 外层的盒子 outer.addEventListener('click', function () { console.log('outer...') }) // 中间的盒子 inner.addEventListener('click', function (ev) { console.log('inner...') // 阻止事件冒泡 ev.stopPropagation() }) // 内层的盒子 child.addEventListener('click', function (ev) { console.log('child...') // 借助事件对象，阻止事件向上冒泡 ev.stopPropagation() }) </script> </body>\"]},\"180\":{\"h\":\"阻止元素默认行为 preventDefault\",\"t\":[\"preventDefault()\",\"<body> <a href=\\\"http://www.baidu.com\\\"> </a> <script> const a = document.querySelector('a') a.addEventListener('click', function (e) { e.preventDefault() }) </script> </body>\"]},\"181\":{\"h\":\"事件委托\",\"t\":[\"利用事件流的特征，事件的的冒泡模式总是会将事件流向其父元素的，如果父元素监听了相同的事件类型，那么父元素的事件就会被触发并执行。只对祖先元素添加事件监听，相比对 10000 个子元素添加事件监听执行效率要高许多。\",\"e.target.tagName e.target.dataset.属性值\"]},\"182\":{\"h\":\"元素尺寸与位置\"},\"183\":{\"h\":\"\"},\"184\":{\"h\":\"\",\"t\":[\"获取元素可见部分宽高，不包含border，margin，滚动条等（包含padding）， 用于js 获取元素大小，只读属性。\"]},\"185\":{\"h\":\"\",\"t\":[\"获取元素自身宽高， 包含border、padding，滚动条等，只读，获取结果是数值\"]},\"186\":{\"h\":\"\"},\"187\":{\"h\":\"\",\"t\":[\"获取元素距离自己最近的定位父级元素的左、上距离，offsetLeft/offsetTop是只读属性\",\"如父级有定位，取距离父级左、上距离，否则找最近的有定位的祖先元素取距离。\",\"获取元素位置的时候使用，只读属性。\"]},\"188\":{\"c\":[\"JavaScript\",\"前端笔记\"]},\"189\":{\"c\":[\"JavaScript\",\"Web APIs\"]},\"190\":{\"h\":\"问题日志\"},\"191\":{\"c\":[\"问题日志\"]},\"192\":{\"h\":\"语雀资源跨域问题\"},\"193\":{\"h\":\"问题描述\",\"t\":[\"我的笔记内容是通过语雀进行管理的，但是语雀导出的.md文件中的图片是语雀的 cdn 地址引用，发现语雀的图片资源无法正常显示，经过排查发现是由于语雀的资源跨域问题导致的。\"]},\"194\":{\"h\":\"解决方案\",\"t\":[\"通过 uniCloud 云对象代理，返回 Base64 解决图片跨域问题。\"]},\"195\":{\"h\":\"1. 编写上传 uniCloud 云对象\",\"t\":[\"代码\",\"const axios = require('axios'); // 引入 axios 来请求外部图片 const fs = require('fs'); // 引入 fs 用于文件操作（可选） module.exports = { // 云函数执行的主方法 imageProxy: async function (event, context) { const imageUrl = event.imageUrl; // 获取请求中的图片 URL if (!imageUrl) { return { status: 'error', message: '图片URL不能为空' }; } try { // 使用 axios 请求外部图片，返回图片的二进制数据 const response = await axios.get(imageUrl, { responseType: 'arraybuffer' }); // 获取图片的内容类型 const contentType = response.headers['content-type']; // 将图片的二进制数据转换为 base64 编码 const base64Data = Buffer.from(response.data, 'binary').toString('base64'); // 返回 base64 编码的图片数据（嵌入相应的 Data URL 格式） return { body: `data:${contentType};base64,${base64Data}`, headers: { 'Content-Type': 'text/plain', // 返回纯文本格式 'Cache-Control': 'max-age=3600', // 可选：设置缓存策略 } }; } catch (error) { return { status: 'error', message: '图片获取失败', error: error.message, }; } } };\"]},\"196\":{\"h\":\"2. 编写图片组件\",\"t\":[\"代码\",\"<script setup> import { onMounted, onBeforeUnmount, ref } from 'vue'; import axios from 'axios' const props = defineProps({ src: { type: String, required: true, } }) const imgUrl = ref('') const status = ref(0) // 0: loading, 1: success, 2: error const loadImage = () => { axios.get(`https://env-00jxhapj7v5l.dev-hz.cloudbasefunction.cn/proxy/imageProxy?imageUrl=${props.src}`, { timeout: 1000, }) .then(res => { console.log(111); console.log(res); if (res.data.message == '图片获取失败') { imgUrl.value = ''; status.value = 2; } else { imgUrl.value = res.data.body; status.value = 1; } }).catch(err => { imgUrl.value = ''; status.value = 2; console.log(222); console.log(err); // console.log(status.value); }) } const targetElement = ref(null); // 使用 ref 来绑定目标元素 const observer = ref(null); // 用于存储 IntersectionObserver 实例 // 创建 IntersectionObserver 实例 const createObserver = () => { observer.value = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { // console.log('元素在可视区内'); loadImage() if (observer.value && targetElement.value) { observer.value.unobserve(targetElement.value); } } else { // console.log('元素不在可视区内'); } }); }, { root: null, // 默认为视口 threshold: 0.1 // 交叉比例，当 10% 显示在视口时触发 }); }; // 在 mounted 钩子中启动观察 onMounted(() => { createObserver(); if (targetElement.value) { observer.value.observe(targetElement.value); } }); // 在 beforeUnmount 钩子中清除观察 onBeforeUnmount(() => { if (observer.value && targetElement.value) { observer.value.unobserve(targetElement.value); } }); </script> <template> <div ref=\\\"targetElement\\\" :class=\\\"status === 1 ? '' : 'no-image'\\\"> <img v-if=\\\"status === 1\\\" :src=\\\"imgUrl\\\" alt=\\\"\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"> <template v-else-if=\\\"status === 2\\\"> <svg t=\\\"1739451438290\\\" class=\\\"icon\\\" viewBox=\\\"0 0 1280 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" p-id=\\\"1649\\\" width=\\\"200\\\" height=\\\"200\\\"> <path d=\\\"M829.952 237.2096c0 39.2192 32.1536 71.0656 71.68 71.0656 39.5776 0 71.68-31.8464 71.68-71.0656 0-39.2704-32.1024-71.1168-71.68-71.1168-39.5264 0-71.68 31.8464-71.68 71.1168z\\\" p-id=\\\"1650\\\"></path> <path d=\\\"M751.9232 924.672H71.8336V71.4752h1003.6224v406.272c25.4464 5.12 49.5616 12.4928 71.68 24.576V71.5264c0-39.2192-32.1536-71.1168-71.68-71.1168H71.8336c-39.5776 0-71.68 31.8976-71.68 71.1168v853.0944c0 39.2704 32.1024 71.1168 71.68 71.1168h749.056c-32.6656-19.7632-45.8752-41.472-68.9664-71.1168z\\\" p-id=\\\"1651\\\"></path> <path d=\\\"M1147.136 548.352a254.5664 254.5664 0 0 0-122.88-31.232 255.3856 255.3856 0 0 0-143.104 43.52l-62.1056-82.1248a107.6224 107.6224 0 0 0-95.744-42.1376 107.2128 107.2128 0 0 0-79.7696 47.104l-119.9616-158.72c-20.992-27.648-54.272-45.824-89.088-42.6496-34.816 1.024-67.072 18.7904-86.4256 47.5136l-230.5536 343.04a35.328 35.328 0 0 0 10.0352 49.2544 35.9424 35.9424 0 0 0 49.664-9.8816l230.4-342.9376a35.4816 35.4816 0 0 1 28.8256-15.872 36.3008 36.3008 0 0 1 29.696 14.2336l154.368 204.1344c7.424 9.8816 19.456 14.6944 31.8464 14.08a35.8912 35.8912 0 0 0 28.8256-19.5584l19.8144-39.3728a35.4816 35.4816 0 0 1 28.8256-19.5072 35.2256 35.2256 0 0 1 31.8976 13.9264l66.1504 87.552a250.6752 250.6752 0 0 0-58.6752 161.3312c0 58.2144 19.8144 111.8208 53.1456 154.624a255.6928 255.6928 0 0 0 201.9328 98.304c140.8 0 255.0272-113.2032 255.0272-252.928a252.5696 252.5696 0 0 0-132.1472-221.696z m0 356.2496a183.2448 183.2448 0 0 1-122.88 47.0016 183.296 183.296 0 0 1-96.0512-26.9824 181.0944 181.0944 0 0 1-87.04-154.5728c0-37.7856 11.6736-72.9088 31.5904-101.9392a183.296 183.296 0 0 1 151.5008-79.5648 183.1936 183.1936 0 0 1 122.88 47.0016 180.4288 180.4288 0 0 1 0 269.056z\\\" p-id=\\\"1652\\\"></path> <path d=\\\"M987.9552 884.3264c0 19.8656 16.2304 35.9936 36.3008 35.9936a36.1472 36.1472 0 0 0 36.2496-35.9936 36.1472 36.1472 0 0 0-36.3008-35.9936 36.1472 36.1472 0 0 0-36.2496 35.9936zM1024.256 631.04c-25.6512 0-46.4384 20.6336-46.4384 46.08 0 25.3952 20.7872 138.0352 46.4384 138.0352 25.6 0 46.3872-112.64 46.3872-138.0864a46.2336 46.2336 0 0 0-46.4384-46.0288z\\\" p-id=\\\"1653\\\"></path> </svg> <span>糟糕，图片不见了！</span> </template> <template v-else> <svg t=\\\"1739453552440\\\" class=\\\"icon loading-icon\\\" viewBox=\\\"0 0 1024 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" p-id=\\\"3291\\\" width=\\\"200\\\" height=\\\"200\\\"> <path d=\\\"M510.5 958.7c-60.4 0-119-11.8-174.2-35.2-53.3-22.5-101.1-54.8-142.2-95.9s-73.3-88.9-95.9-142.2C74.9 630.2 63 571.6 63 511.2s11.8-119 35.2-174.2c22.5-53.3 54.8-101.1 95.9-142.2S283 121.5 336.3 99c55.2-23.3 113.8-35.2 174.2-35.2 49.3 0 97.8 8 144.1 23.7 26.1 8.9 40.1 37.3 31.2 63.4-7.1 20.8-26.5 33.9-47.3 33.9-5.3 0-10.8-0.9-16.1-2.7-35.9-12.2-73.6-18.4-111.9-18.4-92.8 0-180 36.1-245.7 101.8C199.2 331.1 163 418.4 163 511.2c0 92.8 36.1 180 101.8 245.7 65.6 65.6 152.9 101.8 245.7 101.8s180-36.1 245.7-101.8C821.8 691.3 858 604 858 511.2c0-58.6-14.9-116.6-43-167.6-13.3-24.2-4.6-54.6 19.6-67.9 24.2-13.3 54.6-4.6 67.9 19.6 36.3 65.7 55.4 140.4 55.4 215.9 0 60.4-11.8 119-35.2 174.2-22.5 53.3-54.8 101.1-95.9 142.2-41.1 41.1-88.9 73.3-142.2 95.9-55.1 23.3-113.7 35.2-174.1 35.2z\\\" p-id=\\\"3292\\\"></path> </svg> <span>加载中...</span> </template> </div> </template> <style lang=\\\"scss\\\" scoped> div { display: flex; justify-content: center; align-items: center; width: 100%; img { max-width: 100%; height: auto; } } .no-image { height: 300px; overflow: hidden; background-color: #464545; flex-direction: column; gap: 10px; color: #878787; svg { height: 60px; fill: #878787; } } /* 为加载图标的 SVG 元素应用旋转动画 */ .loading-icon { animation: spin 2s linear infinite; fill: #878787; } /* 定义旋转动画 */ @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } </style>\"]},\"197\":{\"h\":\"3. 注册组件\",\"t\":[\"import { defineClientConfig } from \\\"vuepress/client\\\"; import imageProxy from \\\"./components/imageProxy.vue\\\"; export default defineClientConfig({ enhance: ({ app, router, siteData }) => { app.component(\\\"imageProxy\\\", imageProxy); }, });\"]},\"198\":{\"h\":\"4. 在md文件中使用组件\",\"t\":[\" <imageProxy src=\\\"语雀图片地址\\\"/>\"]},\"199\":{\"c\":[\"问题日志\",\"VuePress\",\"跨域\"]},\"200\":{\"c\":[\"uniCloud\",\"跨域\"]},\"201\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"202\":{\"h\":\"Java Script\"}},\"dirtCount\":0,\"index\":[[\"跨域\",{\"2\":{\"199\":1,\"200\":1}}],[\"钩子中清除观察\",{\"1\":{\"196\":1}}],[\"钩子中启动观察\",{\"1\":{\"196\":1}}],[\"显示在视口时触发\",{\"1\":{\"196\":1}}],[\"显示按下的按键\",{\"1\":{\"175\":2}}],[\"来绑定目标元素\",{\"1\":{\"196\":1}}],[\"来请求外部图片\",{\"1\":{\"195\":1}}],[\"`https\",{\"1\":{\"196\":1}}],[\"`\",{\"1\":{\"195\":1,\"196\":1}}],[\"`data\",{\"1\":{\"195\":1}}],[\"`函数被调用$\",{\"1\":{\"132\":3}}],[\"格式\",{\"1\":{\"195\":1}}],[\"嵌入相应的\",{\"1\":{\"195\":1}}],[\"嵌套引用\",{\"1\":{\"130\":1}}],[\"嵌套关系的作用域串联起来形成了作用域链\",{\"1\":{\"128\":1}}],[\"编写图片组件\",{\"0\":{\"196\":1}}],[\"编写上传\",{\"0\":{\"195\":1}}],[\"编码的图片数据\",{\"1\":{\"195\":1}}],[\"编码\",{\"1\":{\"195\":1}}],[\"图片获取失败\",{\"1\":{\"195\":1,\"196\":1}}],[\"图片url不能为空\",{\"1\":{\"195\":1}}],[\"图片不见了\",{\"1\":{\"155\":1,\"196\":1}}],[\"云函数执行的主方法\",{\"1\":{\"195\":1}}],[\"云对象\",{\"0\":{\"195\":1}}],[\"云对象代理\",{\"1\":{\"194\":1}}],[\"解决图片跨域问题\",{\"1\":{\"194\":1}}],[\"解决方案\",{\"0\":{\"194\":1}}],[\"解构赋值是一种快速为变量赋值的简洁语法\",{\"1\":{\"143\":1}}],[\"解构赋值\",{\"0\":{\"143\":1}}],[\"经过排查发现是由于语雀的资源跨域问题导致的\",{\"1\":{\"193\":1}}],[\"经常不加区分的使用\",{\"1\":{\"126\":1}}],[\"经常用于查找遍历数组元素\",{\"1\":{\"60\":1}}],[\"发现语雀的图片资源无法正常显示\",{\"1\":{\"193\":1}}],[\"发言\",{\"1\":{\"51\":1}}],[\"地址引用\",{\"1\":{\"193\":1}}],[\"问题描述\",{\"0\":{\"193\":1}}],[\"问题日志\",{\"0\":{\"190\":1},\"2\":{\"191\":1,\"199\":1}}],[\"滚动条等\",{\"1\":{\"184\":1,\"185\":1}}],[\"滚动条在滚动的时候持续触发的事件\",{\"1\":{\"172\":1}}],[\"个子元素添加事件监听执行效率要高许多\",{\"1\":{\"181\":1}}],[\"个人介绍\",{\"2\":{\"6\":1}}],[\"个人简介\",{\"0\":{\"1\":1}}],[\"利用事件流的特征\",{\"1\":{\"181\":1}}],[\"利用箭头函数来求和\",{\"1\":{\"141\":1}}],[\"阻止元素默认行为\",{\"0\":{\"180\":1}}],[\"阻止事件向上冒泡\",{\"1\":{\"179\":1}}],[\"阻止事件冒泡\",{\"1\":{\"179\":1}}],[\"阻止冒泡是指阻断事件的流动\",{\"1\":{\"179\":1}}],[\"阻止冒泡\",{\"0\":{\"179\":1}}],[\"专门用来阻止事件冒泡\",{\"1\":{\"179\":1}}],[\"保证事件只在当前元素被执行\",{\"1\":{\"179\":2}}],[\"保留小数位的长度\",{\"0\":{\"78\":1}}],[\"冒泡\",{\"1\":{\"178\":1}}],[\"冒泡触发\",{\"1\":{\"164\":1}}],[\"绝大部分场景都采用默认的冒泡模式\",{\"1\":{\"178\":1}}],[\"环境对象指的是函数内部特殊的变量\",{\"1\":{\"176\":1}}],[\"环境对象\",{\"0\":{\"176\":1}}],[\"环境排除\",{\"1\":{\"52\":1}}],[\"任意事件类型被触发后\",{\"1\":{\"175\":1,\"176\":1}}],[\"任意事件类型被触发时与事件相关的信息会被以对象的形式记录下来\",{\"1\":{\"175\":1}}],[\"任何标签都有\",{\"1\":{\"157\":1}}],[\"任何其它作用域都可以被访问\",{\"1\":{\"127\":1}}],[\"任何数据结构只要部署\",{\"1\":{\"53\":1}}],[\"手指从一个dom元素上移开时触发\",{\"1\":{\"174\":1}}],[\"手指在一个dom元素上滑动时触发\",{\"1\":{\"174\":1}}],[\"手指触摸到一个dom元素时触发\",{\"1\":{\"174\":1}}],[\"触屏touch事件\",{\"1\":{\"174\":1}}],[\"页面尺寸事件\",{\"0\":{\"173\":1}}],[\"页面加载事件\",{\"0\":{\"169\":1}}],[\"监听页面dom加载完毕\",{\"1\":{\"171\":1}}],[\"监听页面所有资源加载完毕\",{\"1\":{\"170\":1}}],[\"提交事件\",{\"1\":{\"167\":1}}],[\"键盘抬起触发\",{\"1\":{\"167\":1}}],[\"键盘按下触发\",{\"1\":{\"167\":1}}],[\"鼠标双击\",{\"1\":{\"167\":1}}],[\"鼠标单击\",{\"1\":{\"167\":1}}],[\"鼠标是否移出\",{\"1\":{\"167\":1}}],[\"鼠标是否移入\",{\"1\":{\"167\":1}}],[\"失去焦点\",{\"1\":{\"167\":1}}],[\"改变\",{\"1\":{\"164\":1}}],[\"便立即执行一个函数\",{\"1\":{\"164\":1}}],[\"便是一个对象了\",{\"1\":{\"108\":1}}],[\"等待事件被触发\",{\"1\":{\"164\":1}}],[\"等待事件发生\",{\"1\":{\"164\":1}}],[\"等待事件触发\",{\"1\":{\"164\":1}}],[\"区别\",{\"1\":{\"164\":1}}],[\"区分大小写\",{\"1\":{\"75\":1}}],[\"写法\",{\"1\":{\"164\":1,\"165\":1}}],[\"老写法\",{\"1\":{\"164\":1,\"165\":1}}],[\"捕获和冒泡\",{\"0\":{\"178\":1}}],[\"捕获\",{\"1\":{\"164\":1,\"178\":1}}],[\"完成事件监听分成3个步骤\",{\"1\":{\"164\":1}}],[\"事件的的冒泡模式总是会将事件流向其父元素的\",{\"1\":{\"181\":1}}],[\"事件委托\",{\"0\":{\"181\":1}}],[\"事件流只会在父子元素具有相同事件类型时才会产生影响\",{\"1\":{\"178\":1}}],[\"事件流\",{\"0\":{\"177\":1}}],[\"事件对象中的\",{\"1\":{\"179\":1}}],[\"事件对象\",{\"0\":{\"175\":1}}],[\"事件解绑\",{\"0\":{\"165\":1}}],[\"事件便触发了\",{\"1\":{\"164\":1}}],[\"事件type\",{\"1\":{\"164\":1}}],[\"事件源\",{\"1\":{\"164\":4}}],[\"事件处理函数listener\",{\"1\":{\"164\":1}}],[\"事件处理函数\",{\"1\":{\"164\":1}}],[\"事件触发后\",{\"1\":{\"164\":1}}],[\"事件回调函数的第1个参数即所谓的事件对象\",{\"1\":{\"175\":1,\"176\":1}}],[\"事件回调函数的\",{\"1\":{\"175\":1}}],[\"事件回调\",{\"1\":{\"164\":1}}],[\"事件类型\",{\"0\":{\"166\":1},\"1\":{\"164\":2}}],[\"事件监听函数时\",{\"1\":{\"176\":1}}],[\"事件监听\",{\"0\":{\"164\":1}}],[\"事件\",{\"0\":{\"163\":1},\"1\":{\"164\":1}}],[\"自定义属性\",{\"0\":{\"161\":1},\"1\":{\"161\":3}}],[\"自定义构造函数创建\",{\"1\":{\"147\":1}}],[\"新值\",{\"1\":{\"160\":1}}],[\"新数组中的元素是通过检查指定数组中符合条件的所有元素\",{\"1\":{\"63\":1}}],[\"本质是把表单类型转换为文本框\",{\"1\":{\"160\":1}}],[\"本质上仍然是为变量赋值\",{\"1\":{\"143\":1}}],[\"表单很多情况\",{\"1\":{\"160\":1}}],[\"表示冒泡阶段触发\",{\"1\":{\"178\":1}}],[\"表示捕获阶段触发\",{\"1\":{\"178\":1}}],[\"表示该对象用于array\",{\"1\":{\"52\":1}}],[\"表示独一无二的值\",{\"1\":{\"50\":1}}],[\"切换类\",{\"1\":{\"159\":1}}],[\"切换为浅色主题\",{\"1\":{\"26\":1}}],[\"切换为深色主题\",{\"1\":{\"26\":1}}],[\"类\",{\"1\":{\"159\":1}}],[\"类名为persons的元素中的子代a元素\",{\"1\":{\"45\":1}}],[\"类名为beauty的p元素\",{\"1\":{\"42\":1}}],[\"类名包含rich和beauty的元素\",{\"1\":{\"42\":1}}],[\"类名区分主题\",{\"0\":{\"25\":1}}],[\"移动端\",{\"0\":{\"174\":1}}],[\"移动一点距离\",{\"1\":{\"110\":1}}],[\"移除\",{\"1\":{\"159\":1}}],[\"追加\",{\"1\":{\"159\":1}}],[\"追加属性\",{\"1\":{\"147\":1}}],[\"添加事件监听\",{\"1\":{\"164\":1,\"175\":1,\"176\":1}}],[\"添加\",{\"1\":{\"159\":1}}],[\"添加标识的\",{\"1\":{\"50\":1}}],[\"容易覆盖以前的类名\",{\"1\":{\"159\":1}}],[\"直接调用函数时\",{\"1\":{\"176\":1}}],[\"直接通过style属性修改比较繁琐\",{\"1\":{\"158\":1}}],[\"直接能过属性名修改\",{\"1\":{\"155\":1}}],[\"冲突\",{\"1\":{\"157\":1}}],[\"减运算符\",{\"1\":{\"157\":1}}],[\"连接符与\",{\"1\":{\"157\":1}}],[\"节点添加事件监听\",{\"1\":{\"164\":1}}],[\"节点\",{\"1\":{\"157\":1}}],[\"去掉并将其后面的字母改成大写\",{\"1\":{\"157\":1}}],[\"控制样式属性\",{\"0\":{\"156\":1}}],[\"修改属性\",{\"1\":{\"155\":1}}],[\"元素应用旋转动画\",{\"1\":{\"196\":1}}],[\"元素不在可视区内\",{\"1\":{\"196\":1}}],[\"元素在可视区内\",{\"1\":{\"196\":1}}],[\"元素滚动事件\",{\"0\":{\"172\":1}}],[\"元素添加事件监听\",{\"1\":{\"164\":1}}],[\"元素尺寸与位置\",{\"0\":{\"162\":1,\"182\":1}}],[\"元素\",{\"1\":{\"155\":1,\"164\":1}}],[\"元素拼接\",{\"0\":{\"64\":1}}],[\"最简洁的语法\",{\"1\":{\"155\":1}}],[\"最外层\",{\"1\":{\"127\":1}}],[\"否则找最近的有定位的祖先元素取距离\",{\"1\":{\"187\":1}}],[\"否则建议使用\",{\"1\":{\"153\":1}}],[\"否则返回false\",{\"1\":{\"66\":2}}],[\"否则返回\",{\"1\":{\"60\":2,\"70\":1}}],[\"嗨~\",{\"1\":{\"153\":2}}],[\"文本中包含的标签会被解析\",{\"1\":{\"153\":1}}],[\"文本中包含的标签不会被解析\",{\"1\":{\"153\":1}}],[\"文件的\",{\"1\":{\"127\":1}}],[\"更新到任意标签位置\",{\"1\":{\"153\":4}}],[\"更名为\",{\"1\":{\"145\":1}}],[\"将图片的二进制数据转换为\",{\"1\":{\"195\":1}}],[\"将文本内容添加\",{\"1\":{\"153\":4}}],[\"将来的时间戳\",{\"1\":{\"85\":1}}],[\"操作表单元素属性\",{\"0\":{\"160\":1}}],[\"操作类控制css\",{\"0\":{\"158\":1,\"159\":1}}],[\"操作元素属性\",{\"0\":{\"154\":1}}],[\"操作元素内容\",{\"0\":{\"153\":1}}],[\"操作数组\",{\"0\":{\"99\":1}}],[\"满足条件的元素集合\",{\"1\":{\"152\":1}}],[\"满足条件的第一个元素queryselector\",{\"1\":{\"152\":1}}],[\"构造函数可以快速创建多个类似的对象\",{\"1\":{\"148\":1}}],[\"构造函数是专门用于创建对象的函数\",{\"1\":{\"148\":1}}],[\"构造函数\",{\"0\":{\"148\":1}}],[\"字面量创建\",{\"1\":{\"147\":1}}],[\"字符串\",{\"1\":{\"112\":1}}],[\"字符串类型\",{\"1\":{\"107\":1}}],[\"字符串的截取\",{\"1\":{\"75\":1}}],[\"深入对象\",{\"0\":{\"146\":1}}],[\"深色主题\",{\"1\":{\"24\":1}}],[\"虽然很多属性\",{\"1\":{\"145\":1}}],[\"上距离\",{\"1\":{\"187\":2}}],[\"上面msg是后台传递过来的数据\",{\"1\":{\"145\":1}}],[\"上一次的值\",{\"1\":{\"67\":1}}],[\"上一次的值prev\",{\"1\":{\"67\":5}}],[\"方便计算\",{\"1\":{\"162\":1}}],[\"方面后面使用渲染页面\",{\"1\":{\"145\":1}}],[\"方法为\",{\"1\":{\"164\":1}}],[\"方法名可以使用\",{\"1\":{\"110\":1}}],[\"方法是依附在对象上的函数\",{\"1\":{\"110\":2}}],[\"方法是依附在对象中的函数\",{\"1\":{\"110\":1}}],[\"方法是由方法名和函数两部分构成\",{\"1\":{\"110\":3}}],[\"方法和调用\",{\"0\":{\"110\":1}}],[\"方法可以让数字指定保留的小数位数\",{\"1\":{\"78\":1}}],[\"方法测试数组中是否至少有一个元素通过了由提供的函数实现的测试\",{\"1\":{\"70\":1}}],[\"方法就地对数组的元素进行排序\",{\"1\":{\"69\":1}}],[\"方法返回一个新的数组对象\",{\"1\":{\"68\":1}}],[\"方法用于把数组中的所有元素转换一个字符串\",{\"1\":{\"64\":1}}],[\"方法用于调用数组的每个元素\",{\"1\":{\"62\":1}}],[\"方法创建一个新的数组\",{\"1\":{\"63\":1}}],[\"方法\",{\"0\":{\"116\":1},\"1\":{\"59\":1,\"60\":1,\"75\":1,\"110\":2,\"179\":1}}],[\"方法的返回值\",{\"1\":{\"52\":1}}],[\"方法的错误写法\",{\"1\":{\"51\":1}}],[\"方法调用时\",{\"1\":{\"52\":3}}],[\"方法1\",{\"1\":{\"51\":1}}],[\"采用对象解构的方式\",{\"1\":{\"145\":1}}],[\"请求外部图片\",{\"1\":{\"195\":1}}],[\"请将以上msg对象\",{\"1\":{\"145\":1}}],[\"请输入您的姓名\",{\"1\":{\"92\":1}}],[\"乌克兰和俄罗斯持续冲突\",{\"1\":{\"145\":1}}],[\"国际媒体头条速览\",{\"1\":{\"145\":1}}],[\"国家奖学金\",{\"1\":{\"4\":1}}],[\"三大运用商收入下降\",{\"1\":{\"145\":1}}],[\"右侧对象的属性值将被赋值给左侧的变量\",{\"1\":{\"145\":1}}],[\"右侧数组的单元值将被赋值给左侧的变量\",{\"1\":{\"144\":1}}],[\"乔治\",{\"1\":{\"145\":1}}],[\"猪爸爸\",{\"1\":{\"145\":1}}],[\"猪妈妈\",{\"1\":{\"145\":1}}],[\"猪八戒\",{\"1\":{\"54\":1}}],[\"佩奇\",{\"1\":{\"145\":1}}],[\"李四\",{\"1\":{\"145\":1}}],[\"张三\",{\"1\":{\"145\":2,\"147\":3}}],[\"张飞\",{\"1\":{\"117\":1}}],[\"比如class\",{\"1\":{\"161\":1}}],[\"比如点击眼睛\",{\"1\":{\"160\":1}}],[\"比如前端学习\",{\"1\":{\"1\":1}}],[\"比较复杂后续有应用需求时再进一步分析\",{\"1\":{\"144\":1}}],[\"支持多维解构赋值\",{\"1\":{\"144\":1,\"145\":1}}],[\"支持正则匹配\",{\"1\":{\"75\":2}}],[\"且只有单元值为\",{\"1\":{\"144\":1}}],[\"允许初始化变量的默认值\",{\"1\":{\"144\":1,\"145\":1}}],[\"左侧的\",{\"1\":{\"144\":1,\"145\":1}}],[\"赋值运算符\",{\"1\":{\"144\":1,\"145\":1}}],[\"真数组\",{\"1\":{\"144\":1}}],[\"防止传递undefind\",{\"1\":{\"144\":1}}],[\"防止全局变量被污染\",{\"1\":{\"127\":1}}],[\"给默认值\",{\"1\":{\"144\":1}}],[\"交叉比例\",{\"1\":{\"196\":1}}],[\"交换变量\",{\"1\":{\"144\":1}}],[\"交集选择器\",{\"0\":{\"42\":1}}],[\"依次赋值给变量\",{\"1\":{\"144\":1,\"145\":1}}],[\"同时将数组单元值\",{\"1\":{\"144\":1,\"145\":1}}],[\"同一个对象中出现名称一样的\",{\"1\":{\"110\":1}}],[\"批量声明变量\",{\"1\":{\"144\":1,\"145\":1}}],[\"普通对象\",{\"1\":{\"145\":1}}],[\"普通的数组\",{\"1\":{\"144\":1}}],[\"普通函数\",{\"1\":{\"142\":1}}],[\"知道解构的语法及分类\",{\"1\":{\"143\":1}}],[\"谁调用的这个函数\",{\"1\":{\"142\":1}}],[\"97\",{\"1\":{\"196\":1}}],[\"9s\",{\"1\":{\"196\":1}}],[\"99c55\",{\"1\":{\"196\":1}}],[\"9936zm1024\",{\"1\":{\"196\":1}}],[\"9936a36\",{\"1\":{\"196\":1}}],[\"9936\",{\"1\":{\"196\":3}}],[\"992\",{\"1\":{\"196\":1}}],[\"9088\",{\"1\":{\"196\":1}}],[\"9824\",{\"1\":{\"196\":1}}],[\"98\",{\"1\":{\"196\":1}}],[\"9392a183\",{\"1\":{\"196\":1}}],[\"9328\",{\"1\":{\"196\":1}}],[\"9376a35\",{\"1\":{\"196\":1}}],[\"9424\",{\"1\":{\"196\":2}}],[\"96\",{\"1\":{\"196\":1}}],[\"9616\",{\"1\":{\"196\":1}}],[\"9664\",{\"1\":{\"196\":1}}],[\"958\",{\"1\":{\"196\":1}}],[\"9552\",{\"1\":{\"196\":1}}],[\"95\",{\"1\":{\"196\":6}}],[\"952\",{\"1\":{\"196\":1}}],[\"92\",{\"1\":{\"196\":2}}],[\"928a252\",{\"1\":{\"196\":1}}],[\"9264l66\",{\"1\":{\"196\":1}}],[\"924\",{\"1\":{\"196\":1}}],[\"9232\",{\"1\":{\"196\":1}}],[\"923\",{\"1\":{\"78\":1}}],[\"9\",{\"1\":{\"141\":1,\"196\":20}}],[\"取距离父级左\",{\"1\":{\"187\":1}}],[\"取实参\",{\"1\":{\"141\":1}}],[\"取整\",{\"1\":{\"116\":1}}],[\"刘德华\",{\"1\":{\"140\":1}}],[\"刘备\",{\"1\":{\"117\":1}}],[\"基本语法\",{\"1\":{\"140\":1}}],[\"基础\",{\"0\":{\"90\":1},\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"箭头函数无this\",{\"1\":{\"176\":1}}],[\"箭头函数的this\",{\"1\":{\"142\":1}}],[\"箭头函数参数\",{\"0\":{\"141\":1}}],[\"箭头函数可以直接返回一个对象\",{\"1\":{\"140\":1}}],[\"箭头函数\",{\"0\":{\"140\":1},\"1\":{\"140\":1}}],[\"官方给出的说明是\",{\"1\":{\"139\":1}}],[\"展开后用math方法求最大值\",{\"1\":{\"139\":1}}],[\"展开运算符不会修改数组\",{\"1\":{\"139\":1}}],[\"展开运算符\",{\"0\":{\"139\":1}}],[\"得到\",{\"1\":{\"138\":2}}],[\"借助事件对象\",{\"1\":{\"179\":1}}],[\"借助\",{\"1\":{\"138\":1}}],[\"置于最末函数形参之前\",{\"1\":{\"138\":1}}],[\"剩余参数\",{\"0\":{\"138\":1}}],[\"剩余时间\",{\"1\":{\"85\":1}}],[\"剩余时间毫秒数\",{\"1\":{\"85\":2}}],[\"两个参数\",{\"1\":{\"137\":2}}],[\"两只老虎\",{\"1\":{\"110\":4}}],[\"计算所有参数的和\",{\"1\":{\"137\":1}}],[\"仅存在于var声明的变量\",{\"1\":{\"133\":1}}],[\"次`\",{\"1\":{\"132\":3}}],[\"次方\",{\"1\":{\"116\":2}}],[\"统计函数的调用次数\",{\"1\":{\"132\":2}}],[\"实现对样式的动态修改\",{\"0\":{\"157\":1}}],[\"实现数据的私有\",{\"1\":{\"132\":1}}],[\"实例\",{\"1\":{\"196\":2}}],[\"实例方法\",{\"1\":{\"78\":1}}],[\"实例属性\",{\"1\":{\"75\":1}}],[\"外层的盒子\",{\"1\":{\"179\":1}}],[\"外层函数变量\",{\"1\":{\"132\":1}}],[\"外联css和javascript等\",{\"1\":{\"169\":1}}],[\"外部无法直接访问\",{\"1\":{\"125\":1}}],[\"从子元素到父元素\",{\"1\":{\"178\":1}}],[\"从父元素到子元素\",{\"1\":{\"178\":1}}],[\"从代码形式上看闭包是一个做为返回值的函数\",{\"1\":{\"132\":1}}],[\"从索引值为2的位置开始删除1个单元\",{\"1\":{\"59\":1,\"99\":1}}],[\"闭包存在的问题\",{\"1\":{\"132\":1}}],[\"闭包的写法\",{\"1\":{\"132\":1}}],[\"闭包的应用\",{\"1\":{\"132\":1}}],[\"闭包是一种比较特殊和函数\",{\"1\":{\"132\":1}}],[\"闭包\",{\"0\":{\"132\":1},\"1\":{\"132\":1}}],[\"稍后进行回收\",{\"1\":{\"131\":1}}],[\"那么父元素的事件就会被触发并执行\",{\"1\":{\"181\":1}}],[\"那么这个函数就是构造函数\",{\"1\":{\"148\":1}}],[\"那么就记录次数1\",{\"1\":{\"130\":1}}],[\"那些无法由根部出发触及到的对象被标记为不再使用\",{\"1\":{\"131\":1}}],[\"凡是能从根部到达的对象\",{\"1\":{\"131\":1}}],[\"出发定时扫描内存中的对象\",{\"1\":{\"131\":1}}],[\"核心\",{\"1\":{\"131\":1}}],[\"标准属性\",{\"1\":{\"161\":1}}],[\"标记清除算法将\",{\"1\":{\"131\":1}}],[\"标记清除法\",{\"0\":{\"131\":1}}],[\"标签的文字颜色\",{\"1\":{\"164\":1}}],[\"标签天生自带的属性\",{\"1\":{\"161\":1}}],[\"标签时推荐使用\",{\"1\":{\"153\":1}}],[\"标签和\",{\"1\":{\"127\":1}}],[\"标签\",{\"1\":{\"39\":1}}],[\"导致内存泄露\",{\"1\":{\"130\":1}}],[\"垃圾回收器不会进行回收\",{\"1\":{\"130\":1}}],[\"垃圾回收机制\",{\"0\":{\"129\":1}}],[\"循环引用\",{\"1\":{\"130\":1}}],[\"多级对象解构\",{\"1\":{\"145\":1}}],[\"多余的变量将被赋值为\",{\"1\":{\"144\":1}}],[\"多维数组解构\",{\"1\":{\"144\":1}}],[\"多次引用会累加\",{\"1\":{\"130\":1}}],[\"多个属性之间使用英文\",{\"1\":{\"109\":1,\"110\":1}}],[\"多个立即执行函数之间用分号隔开\",{\"1\":{\"104\":1}}],[\"跟踪记录被引用的次数\",{\"1\":{\"130\":1}}],[\"现代浏览器通用的大多是基于标记清除算法的某些改进算法\",{\"1\":{\"131\":1}}],[\"现代的浏览器已经了\",{\"1\":{\"131\":1}}],[\"现浏览器多使用第二种\",{\"0\":{\"130\":1}}],[\"现在的时间戳\",{\"1\":{\"85\":1}}],[\"现在会输出\",{\"1\":{\"51\":1}}],[\"引用计数无法回收\",{\"1\":{\"130\":1}}],[\"引用计数\",{\"0\":{\"130\":1}}],[\"引入\",{\"1\":{\"195\":2}}],[\"引入模块的js文件自动开启严格模式\",{\"1\":{\"119\":1}}],[\"引入了一种新的原始数据类型symbol\",{\"1\":{\"50\":1}}],[\"关键字调用\",{\"1\":{\"148\":1}}],[\"关闭页面回收\",{\"1\":{\"129\":1}}],[\"关羽\",{\"1\":{\"117\":1}}],[\"系统会自动为他们分配内存\",{\"1\":{\"129\":1}}],[\"内层的盒子\",{\"1\":{\"179\":1}}],[\"内层函数\",{\"1\":{\"132\":1}}],[\"内部处理\",{\"1\":{\"145\":2}}],[\"内存不再使用\",{\"1\":{\"130\":1}}],[\"内存回收\",{\"1\":{\"129\":1}}],[\"内存使用\",{\"1\":{\"129\":1}}],[\"内存分配\",{\"1\":{\"129\":1}}],[\"内置对象\",{\"0\":{\"113\":1}}],[\"子作用域能够访问父作用域\",{\"1\":{\"128\":1}}],[\"子代选择器\",{\"0\":{\"45\":1}}],[\"父级作用域无法访问子级作用域\",{\"1\":{\"128\":1}}],[\"父子关系的作用域关联在一起形成了链状的结构\",{\"1\":{\"128\":1}}],[\"父选择器引用\",{\"0\":{\"15\":1}}],[\"避免因作用域导致的语法错误\",{\"1\":{\"127\":1}}],[\"了解这一机制有助于规范代码书写习惯\",{\"1\":{\"127\":1}}],[\"了解作用域对程序执行的影响及作用域链的查找机制\",{\"1\":{\"123\":1}}],[\"尽管他们已不再使用\",{\"1\":{\"130\":1}}],[\"尽可能少的声明全局变量\",{\"1\":{\"127\":1}}],[\"尽量小驼峰命名法\",{\"1\":{\"101\":1}}],[\"全局变量一般不会回收\",{\"1\":{\"129\":1}}],[\"全局变量\",{\"1\":{\"127\":2}}],[\"全局作用域中声明的变量\",{\"1\":{\"127\":1}}],[\"全局作用域\",{\"0\":{\"127\":1},\"1\":{\"128\":2}}],[\"此处为全局\",{\"1\":{\"127\":1}}],[\"此处为局部\",{\"1\":{\"127\":2}}],[\"此处是全局\",{\"1\":{\"127\":1}}],[\"此笔记基于chatgpt\",{\"1\":{\"11\":1}}],[\"开头\",{\"1\":{\"161\":1}}],[\"开发中\",{\"1\":{\"126\":1}}],[\"开始的索引号\",{\"1\":{\"75\":1}}],[\"开始迁移与创作内容\",{\"1\":{\"0\":1}}],[\"推荐使用\",{\"1\":{\"126\":1}}],[\"常量值为对象类型\",{\"1\":{\"126\":1}}],[\"常量值为对象时其属性和方法允许重新赋值\",{\"1\":{\"126\":1}}],[\"常量必须要有值且不允许被重新赋值\",{\"1\":{\"126\":1}}],[\"常量与变量本质的区别是\",{\"1\":{\"126\":1}}],[\"常用事件\",{\"0\":{\"167\":1}}],[\"常用属性修改\",{\"0\":{\"155\":1}}],[\"常用动词约定\",{\"1\":{\"101\":1}}],[\"常用于求和\",{\"1\":{\"60\":1}}],[\"常用方法\",{\"0\":{\"59\":1}}],[\"常用方法整理\",{\"0\":{\"57\":1}}],[\"超出了\",{\"1\":{\"126\":3}}],[\"代码\",{\"1\":{\"195\":1,\"196\":1}}],[\"代码块内部声明的变量外部将\",{\"1\":{\"126\":1}}],[\"代表了数组元素的索引\",{\"1\":{\"68\":1}}],[\"块作用域中访问全局\",{\"1\":{\"127\":1}}],[\"块作用域\",{\"0\":{\"126\":1}}],[\"总体思想都是一致的\",{\"1\":{\"131\":1}}],[\"总结\",{\"1\":{\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"131\":1,\"144\":1,\"145\":1,\"153\":1}}],[\"总秒数\",{\"1\":{\"85\":4}}],[\"设置缓存策略\",{\"1\":{\"195\":1}}],[\"设置\",{\"1\":{\"160\":1}}],[\"设置某个值\",{\"1\":{\"101\":1}}],[\"设用\",{\"1\":{\"125\":1}}],[\"yo\",{\"1\":{\"128\":2}}],[\"youxi\",{\"1\":{\"51\":2}}],[\"y\",{\"1\":{\"125\":2,\"127\":2}}],[\"局部作用域分为函数作用域和块作用域\",{\"1\":{\"124\":1}}],[\"局部作用域\",{\"0\":{\"124\":1},\"1\":{\"128\":4}}],[\"离开了这个\",{\"1\":{\"123\":1}}],[\"范围\",{\"1\":{\"123\":2}}],[\"规定了变量能够被访问的\",{\"1\":{\"123\":1}}],[\"进阶\",{\"0\":{\"122\":1}}],[\"抛出\",{\"1\":{\"119\":6}}],[\"严格模式\",{\"0\":{\"119\":1},\"1\":{\"119\":1}}],[\"随机取数组元素\",{\"0\":{\"117\":1}}],[\"平方根\",{\"1\":{\"116\":1}}],[\"求最大值\",{\"1\":{\"139\":1}}],[\"求生函数\",{\"1\":{\"137\":1}}],[\"求某数的平方根\",{\"1\":{\"116\":1}}],[\"求某个数的多少次方\",{\"1\":{\"116\":1}}],[\"求\",{\"1\":{\"116\":2}}],[\"幂方法\",{\"1\":{\"116\":1}}],[\"找出最小值\",{\"1\":{\"116\":1}}],[\"找出最大值\",{\"1\":{\"116\":1}}],[\"找小米\",{\"1\":{\"65\":1}}],[\"整数部分不变\",{\"1\":{\"116\":1}}],[\"整数部分加1\",{\"1\":{\"116\":1}}],[\"舍弃小数部分\",{\"1\":{\"116\":2}}],[\"包裹的代码称为代码块\",{\"1\":{\"126\":1}}],[\"包含border\",{\"1\":{\"185\":1}}],[\"包含padding\",{\"1\":{\"184\":1}}],[\"包含元素自身设置的宽高\",{\"1\":{\"162\":1}}],[\"包含返回true\",{\"1\":{\"159\":1}}],[\"包含\",{\"1\":{\"116\":1}}],[\"包括属性名和值\",{\"1\":{\"109\":1}}],[\"包括\",{\"1\":{\"68\":1}}],[\"之间的随机数\",{\"1\":{\"116\":1}}],[\"之前已经学习了数值类型\",{\"1\":{\"107\":1}}],[\"~\",{\"1\":{\"116\":1}}],[\"间的随机数\",{\"1\":{\"116\":1}}],[\"到\",{\"1\":{\"116\":1}}],[\"生成n~m的随机数\",{\"1\":{\"118\":1}}],[\"生成5~10的随机数\",{\"1\":{\"118\":1}}],[\"生成0~10的随机数\",{\"1\":{\"118\":1}}],[\"生成随机数\",{\"0\":{\"118\":1}}],[\"生成\",{\"1\":{\"116\":1}}],[\"圆周率\",{\"1\":{\"115\":1}}],[\"称为数学对象\",{\"1\":{\"114\":1}}],[\"还有其它的内置的对象\",{\"1\":{\"113\":1}}],[\"还提供了许多方法\",{\"1\":{\"99\":1}}],[\"还提供了11个内置的symbol值\",{\"1\":{\"52\":1}}],[\"带引号\",{\"1\":{\"112\":1}}],[\"keyframes\",{\"1\":{\"196\":1}}],[\"key\",{\"1\":{\"175\":2}}],[\"keyup\",{\"1\":{\"167\":1,\"175\":1}}],[\"keydown\",{\"1\":{\"167\":1}}],[\"keys\",{\"0\":{\"80\":1},\"1\":{\"80\":2}}],[\"k\",{\"1\":{\"112\":5}}],[\"k是字符串类型\",{\"1\":{\"112\":1}}],[\"k为数组索引号\",{\"1\":{\"112\":1}}],[\"k为属性名\",{\"1\":{\"112\":1}}],[\"后面的会覆盖前面的\",{\"1\":{\"110\":1}}],[\"后代选择器\",{\"0\":{\"44\":1}}],[\"注册组件\",{\"0\":{\"197\":1}}],[\"注\",{\"1\":{\"110\":1,\"126\":1,\"144\":1,\"145\":1}}],[\"注意这里的文字使用英文的引号\",{\"1\":{\"92\":1}}],[\"注意\",{\"1\":{\"62\":1,\"96\":1,\"158\":1,\"162\":1}}],[\"跑的快\",{\"1\":{\"110\":4}}],[\"唱歌等\",{\"1\":{\"110\":1}}],[\"扩展\",{\"1\":{\"109\":1,\"110\":1}}],[\"结果同为\",{\"1\":{\"109\":1}}],[\"结果为\",{\"1\":{\"109\":3,\"111\":1}}],[\"结束的索引号不包含想要截取的部分\",{\"1\":{\"75\":1}}],[\"结束的索引号\",{\"1\":{\"75\":4}}],[\"访问变量\",{\"1\":{\"125\":1,\"133\":2}}],[\"访问人的身高\",{\"1\":{\"109\":1}}],[\"访问人的名字\",{\"1\":{\"109\":1}}],[\"访问人性别\",{\"1\":{\"109\":1}}],[\"访问myobject的mysymbol属性\",{\"1\":{\"51\":1}}],[\"获得焦点\",{\"1\":{\"167\":1}}],[\"获得对象中属性对应的值\",{\"1\":{\"109\":1}}],[\"获取图片的内容类型\",{\"1\":{\"195\":1}}],[\"获取请求中的图片\",{\"1\":{\"195\":1}}],[\"获取结果是数值\",{\"1\":{\"185\":1}}],[\"获取嵌套的3个节点\",{\"1\":{\"179\":1}}],[\"获取的结果是0\",{\"1\":{\"162\":1}}],[\"获取的是可视宽高\",{\"1\":{\"162\":1}}],[\"获取的剩余实参\",{\"1\":{\"138\":1}}],[\"获取出来的是数值\",{\"1\":{\"162\":1}}],[\"获取自定义属性值\",{\"1\":{\"161\":1}}],[\"获取元素位置的时候使用\",{\"1\":{\"187\":1}}],[\"获取元素距离自己最近的定位父级元素的左\",{\"1\":{\"187\":1}}],[\"获取元素自身宽高\",{\"1\":{\"185\":1}}],[\"获取元素大小\",{\"1\":{\"184\":1}}],[\"获取元素可见部分宽高\",{\"1\":{\"184\":1}}],[\"获取元素的自身宽高\",{\"1\":{\"162\":1}}],[\"获取元素\",{\"1\":{\"159\":1,\"161\":1}}],[\"获取\",{\"1\":{\"155\":1,\"157\":1,\"160\":1,\"164\":2}}],[\"获取dom对象\",{\"0\":{\"152\":1}}],[\"获取过来的\",{\"1\":{\"145\":1}}],[\"获取新闻列表成功\",{\"1\":{\"145\":1}}],[\"获取剩余单元值\",{\"1\":{\"144\":1}}],[\"获取圆周率\",{\"1\":{\"115\":1}}],[\"获取某个值\",{\"1\":{\"101\":1}}],[\"男\",{\"1\":{\"109\":3,\"126\":1}}],[\"描述人的性别\",{\"1\":{\"109\":2}}],[\"描述人的身高\",{\"1\":{\"109\":2}}],[\"描述人的年龄\",{\"1\":{\"109\":2}}],[\"描述人的姓名\",{\"1\":{\"109\":2}}],[\"值多\",{\"1\":{\"144\":1}}],[\"值少\",{\"1\":{\"144\":1}}],[\"值\",{\"1\":{\"109\":2}}],[\"值以外\",{\"1\":{\"52\":1}}],[\"中间的盒子\",{\"1\":{\"179\":1}}],[\"中的作用域是程序被执行时的底层机制\",{\"1\":{\"127\":1}}],[\"中除了变量外还有常量\",{\"1\":{\"126\":1}}],[\"中使用\",{\"1\":{\"126\":1}}],[\"中内置的对象\",{\"1\":{\"113\":1,\"114\":1}}],[\"中数据类型的一种\",{\"1\":{\"111\":1}}],[\"中横线等\",{\"1\":{\"109\":1,\"110\":1}}],[\"中不要写块级元素\",{\"1\":{\"39\":1}}],[\"除了\",{\"1\":{\"113\":1}}],[\"除了定义自己使用的\",{\"1\":{\"52\":1}}],[\"除非名称遇到特殊符号如空格\",{\"1\":{\"109\":1,\"110\":1}}],[\"性别等\",{\"1\":{\"109\":1}}],[\"性别男\",{\"1\":{\"1\":1}}],[\"年龄\",{\"1\":{\"109\":1}}],[\"年月日时分秒\",{\"1\":{\"85\":1}}],[\"身高\",{\"1\":{\"109\":1}}],[\"目前它是一个空对象\",{\"1\":{\"108\":1}}],[\"布尔类型\",{\"1\":{\"107\":1}}],[\"布尔值\",{\"1\":{\"52\":1}}],[\"做为参数传递给函数\",{\"1\":{\"106\":1}}],[\"没有返回false\",{\"1\":{\"159\":1}}],[\"没有就增加\",{\"1\":{\"159\":1}}],[\"没有引用了就回收对象\",{\"1\":{\"130\":1}}],[\"没有任何属性\",{\"1\":{\"109\":1,\"110\":1}}],[\"没有名字的函数\",{\"1\":{\"102\":1}}],[\"没用return默认返回undefined\",{\"1\":{\"105\":1}}],[\"立即执行\",{\"1\":{\"104\":1}}],[\"立即执行函数\",{\"0\":{\"104\":1}}],[\"xmlns=\",{\"1\":{\"196\":2}}],[\"x\",{\"1\":{\"119\":7,\"125\":2,\"127\":4,\"140\":9}}],[\"xxxxx\",{\"1\":{\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\"xxxx\",{\"1\":{\"104\":1}}],[\"xxx\",{\"1\":{\"104\":1}}],[\"xiyou\",{\"1\":{\"54\":3}}],[\"声明变量\",{\"1\":{\"133\":2}}],[\"声明成常量\",{\"1\":{\"126\":1}}],[\"声明的常量也会产生块作用域\",{\"1\":{\"126\":1}}],[\"声明的变量会产生块作用域\",{\"1\":{\"126\":1}}],[\"声明一个空的对象\",{\"1\":{\"109\":1,\"110\":1}}],[\"声明一个对象类型的变量与之前声明一个数值或字符串类型的变量没有本质上的区别\",{\"1\":{\"108\":1}}],[\"声明对象\",{\"1\":{\"109\":1,\"110\":1}}],[\"声明对象类型变量\",{\"1\":{\"108\":1}}],[\"声明数值类型变量\",{\"1\":{\"108\":1}}],[\"声明字符串类型变量\",{\"1\":{\"108\":1}}],[\"声明\",{\"1\":{\"103\":1,\"125\":1}}],[\"必须变量名和属性名相同\",{\"1\":{\"145\":2}}],[\"必须要有值\",{\"1\":{\"126\":1}}],[\"必须先声明和赋值\",{\"1\":{\"103\":1}}],[\"必须全>4才返回true\",{\"1\":{\"70\":1}}],[\"匿名函数\",{\"0\":{\"102\":1},\"1\":{\"102\":1}}],[\"例如\",{\"1\":{\"101\":1}}],[\"例子参考\",{\"1\":{\"69\":1}}],[\"加载完毕时触发的事件\",{\"1\":{\"169\":1}}],[\"加载外部资源\",{\"1\":{\"169\":1}}],[\"加载某些数据\",{\"1\":{\"101\":1}}],[\"加深对对象的理解\",{\"1\":{\"116\":1}}],[\"加强版的for循环\",{\"1\":{\"62\":1}}],[\"含义\",{\"1\":{\"101\":1}}],[\"动词\",{\"1\":{\"101\":1}}],[\"动态改变网页的内容\",{\"1\":{\"153\":1}}],[\"动态参数\",{\"0\":{\"137\":1}}],[\"动态添加方法\",{\"1\":{\"110\":1}}],[\"动态添加与直接定义是一样的\",{\"1\":{\"109\":2,\"110\":1}}],[\"动态追加属性\",{\"1\":{\"109\":1,\"110\":1}}],[\"动态删除任意单元\",{\"1\":{\"59\":2,\"99\":2}}],[\"动态向数组头部添加一个单元\",{\"1\":{\"59\":2,\"99\":2}}],[\"动态向数组的尾部添加一个单元\",{\"1\":{\"59\":2,\"99\":2}}],[\"动态切换主题\",{\"0\":{\"26\":1}}],[\"前缀应该为动词\",{\"1\":{\"101\":1}}],[\"前端笔记\",{\"0\":{\"7\":1},\"2\":{\"8\":1,\"36\":1,\"46\":1,\"55\":1,\"88\":1,\"120\":1,\"149\":1,\"188\":1}}],[\"函数提升\",{\"0\":{\"135\":1}}],[\"函数等\",{\"1\":{\"129\":1}}],[\"函数中未使用任何关键字声明的变量为全局变量\",{\"1\":{\"127\":1}}],[\"函数内部创建的新函数\",{\"1\":{\"128\":1}}],[\"函数内部允许创建新的函数\",{\"1\":{\"128\":1}}],[\"函数内部的变量实际被清空了\",{\"1\":{\"125\":1}}],[\"函数内部声明的变量\",{\"1\":{\"125\":2}}],[\"函数执行完毕后\",{\"1\":{\"125\":1}}],[\"函数的参数也是函数内部的局部变量\",{\"1\":{\"125\":1}}],[\"函数作用域中访问全局\",{\"1\":{\"127\":1}}],[\"函数作用域\",{\"0\":{\"125\":1}}],[\"函数返回值\",{\"0\":{\"105\":1}}],[\"函数表达式\",{\"0\":{\"103\":1},\"1\":{\"103\":1,\"132\":1}}],[\"函数可以分为具名函数和匿名函数\",{\"1\":{\"102\":1}}],[\"函数命名规范\",{\"0\":{\"101\":1}}],[\"函数\",{\"0\":{\"100\":1},\"1\":{\"125\":2,\"128\":1,\"129\":1,\"145\":1}}],[\"再调用\",{\"1\":{\"103\":1}}],[\"再改为let\",{\"1\":{\"97\":1}}],[\"再写子\",{\"1\":{\"45\":1}}],[\"优先使用const\",{\"1\":{\"97\":1}}],[\"报错\",{\"1\":{\"96\":1,\"125\":1,\"126\":3,\"128\":3,\"133\":1}}],[\"正常的有属性有取值的跟其他的标签属性没有任何区别\",{\"1\":{\"160\":1}}],[\"正常\",{\"1\":{\"96\":1,\"126\":3}}],[\"正确写法\",{\"1\":{\"51\":1}}],[\"建议数组和对象用const声明\",{\"1\":{\"96\":1}}],[\"建议使用for\",{\"1\":{\"72\":1}}],[\"复杂数据类型地址不变的情况下可以修改\",{\"1\":{\"96\":1}}],[\"复习所记\",{\"1\":{\"38\":1,\"90\":1}}],[\"queryselectorall\",{\"1\":{\"152\":1}}],[\"queryselector\",{\"0\":{\"152\":1},\"1\":{\"93\":1,\"152\":1,\"153\":2,\"155\":1,\"157\":1,\"159\":2,\"161\":1,\"164\":1,\"175\":1,\"176\":1,\"179\":3,\"180\":1}}],[\"qq\",{\"1\":{\"5\":1,\"39\":1}}],[\"打印出该对象\",{\"1\":{\"93\":1}}],[\"打印对象\",{\"1\":{\"93\":1}}],[\"要写成\",{\"1\":{\"157\":1}}],[\"要将\",{\"1\":{\"157\":1}}],[\"要求将\",{\"1\":{\"145\":1}}],[\"要求渲染函数里面的数据名改为\",{\"1\":{\"145\":1}}],[\"要加分号\",{\"1\":{\"144\":1}}],[\"要加的属性名\",{\"1\":{\"67\":1}}],[\"要输出的内容\",{\"1\":{\"92\":2}}],[\"都是还需要使用的\",{\"1\":{\"131\":1}}],[\"都是直接在原数组上进行操作\",{\"1\":{\"59\":1,\"99\":1}}],[\"都会以弹窗形式展示\",{\"1\":{\"92\":1}}],[\"向\",{\"1\":{\"92\":1}}],[\"向game对象添加up\",{\"1\":{\"51\":1}}],[\"输入的任意数字\",{\"1\":{\"92\":1}}],[\"输入任意内容会以弹窗形式出现在浏览器中\",{\"1\":{\"92\":1}}],[\"输入\",{\"0\":{\"92\":1}}],[\"输入输出<\",{\"1\":{\"92\":1}}],[\"输入输出\",{\"0\":{\"91\":1}}],[\"输出两个对象\",{\"1\":{\"145\":1}}],[\"输出\",{\"0\":{\"93\":1},\"1\":{\"51\":1}}],[\"秒数\",{\"1\":{\"85\":1}}],[\"分别用来获取元素节点\",{\"1\":{\"157\":1}}],[\"分为数组解构\",{\"1\":{\"143\":1}}],[\"分隔\",{\"1\":{\"109\":4,\"110\":4}}],[\"分隔符\",{\"1\":{\"75\":1}}],[\"分数\",{\"1\":{\"85\":1}}],[\"天数\",{\"1\":{\"85\":1}}],[\"公式\",{\"1\":{\"85\":1}}],[\"算法\",{\"1\":{\"85\":1,\"130\":1}}],[\"倒计时\",{\"0\":{\"85\":1}}],[\"倒序相反\",{\"1\":{\"69\":1}}],[\"无法达到的对象\",{\"1\":{\"131\":1}}],[\"无法被访问\",{\"1\":{\"126\":1}}],[\"无法直接使用\",{\"1\":{\"102\":1}}],[\"无论是属性或是方法\",{\"1\":{\"110\":1}}],[\"无需调用\",{\"1\":{\"104\":1}}],[\"无需new\",{\"1\":{\"84\":1}}],[\"无需实例化\",{\"1\":{\"84\":1}}],[\"无初始值时\",{\"1\":{\"67\":1}}],[\"只读\",{\"1\":{\"185\":1}}],[\"只读属性\",{\"1\":{\"184\":1,\"187\":1}}],[\"只对祖先元素添加事件监听\",{\"1\":{\"181\":1}}],[\"只要输入就触发\",{\"1\":{\"167\":1}}],[\"只要用户点击了按钮\",{\"1\":{\"164\":1}}],[\"只要有一个>4\",{\"1\":{\"70\":1}}],[\"只选出\",{\"1\":{\"145\":1}}],[\"只有一行代码的时候\",{\"1\":{\"140\":2}}],[\"只有一个形参的时候\",{\"1\":{\"140\":1}}],[\"只存在于函数里\",{\"1\":{\"137\":1}}],[\"只能在该代码块中被访问\",{\"1\":{\"126\":3}}],[\"只能得到当前时间戳\",{\"1\":{\"84\":1}}],[\"只是语法上更灵活\",{\"1\":{\"109\":2,\"110\":1}}],[\"只是修改了栈的内容\",{\"1\":{\"96\":1}}],[\"静态方法返回一个由给定对象自身的可枚举的字符串键属性名组成的数组\",{\"1\":{\"80\":1}}],[\"四舍五入原则\",{\"1\":{\"116\":1}}],[\"四舍五入取整\",{\"1\":{\"116\":1}}],[\"四舍五入\",{\"1\":{\"78\":1}}],[\"73\",{\"1\":{\"196\":3}}],[\"7c\",{\"1\":{\"196\":1}}],[\"7872\",{\"1\":{\"196\":1}}],[\"7856\",{\"1\":{\"196\":1}}],[\"72\",{\"1\":{\"196\":1}}],[\"72c\",{\"1\":{\"196\":1}}],[\"7696\",{\"1\":{\"196\":1}}],[\"7632\",{\"1\":{\"196\":1}}],[\"7904\",{\"1\":{\"196\":1}}],[\"79\",{\"1\":{\"196\":2}}],[\"744\",{\"1\":{\"196\":1}}],[\"71\",{\"1\":{\"196\":23}}],[\"7\",{\"1\":{\"75\":1,\"116\":1,\"139\":2,\"196\":9}}],[\"今天又要做核酸了\",{\"1\":{\"75\":1}}],[\"858\",{\"1\":{\"196\":2}}],[\"8c821\",{\"1\":{\"196\":1}}],[\"8c199\",{\"1\":{\"196\":1}}],[\"8s180\",{\"1\":{\"196\":1}}],[\"8144\",{\"1\":{\"196\":2}}],[\"816\",{\"1\":{\"196\":1}}],[\"878787\",{\"1\":{\"196\":3}}],[\"87\",{\"1\":{\"196\":2}}],[\"872\",{\"1\":{\"196\":1}}],[\"8752\",{\"1\":{\"196\":1}}],[\"8656\",{\"1\":{\"196\":1}}],[\"86\",{\"1\":{\"196\":1}}],[\"8912\",{\"1\":{\"196\":2}}],[\"89\",{\"1\":{\"196\":1}}],[\"8976\",{\"1\":{\"196\":2}}],[\"8208\",{\"1\":{\"196\":1}}],[\"8256\",{\"1\":{\"196\":3}}],[\"824\",{\"1\":{\"196\":1}}],[\"82\",{\"1\":{\"196\":1}}],[\"884\",{\"1\":{\"196\":1}}],[\"8816\",{\"1\":{\"196\":1}}],[\"8816l230\",{\"1\":{\"196\":1}}],[\"88\",{\"1\":{\"196\":5}}],[\"8336c\",{\"1\":{\"196\":1}}],[\"8336v71\",{\"1\":{\"196\":1}}],[\"8464\",{\"1\":{\"196\":3}}],[\"849\",{\"1\":{\"116\":1}}],[\"8\",{\"1\":{\"75\":1,\"92\":1,\"108\":1,\"109\":3,\"110\":3,\"125\":1,\"196\":18}}],[\"相比对\",{\"1\":{\"181\":1}}],[\"相关信息会以对象形式被记录下来\",{\"1\":{\"175\":1,\"176\":1}}],[\"相对应的回调函数会被执行\",{\"1\":{\"164\":1}}],[\"相同作用域链中按着从小到大的规则查找变量\",{\"1\":{\"128\":1}}],[\"相当于number\",{\"1\":{\"83\":1}}],[\"相反\",{\"1\":{\"75\":1}}],[\"相加后作为\",{\"1\":{\"67\":2}}],[\"转换为\",{\"1\":{\"75\":1,\"85\":1}}],[\"把字符串\",{\"1\":{\"75\":1}}],[\"把数组转换为字符串\",{\"1\":{\"64\":1}}],[\"或者\",{\"1\":{\"109\":1}}],[\"或\",{\"1\":{\"75\":1,\"109\":2,\"110\":2,\"126\":1,\"128\":2,\"147\":1}}],[\"或类名为beauty的元素\",{\"1\":{\"43\":1}}],[\"或类名为rich\",{\"1\":{\"43\":1}}],[\"根据情况返回\",{\"1\":{\"75\":1}}],[\"判断某个字符是不是包含在一个字符串里面\",{\"1\":{\"75\":1}}],[\"判断是不是以某个字符开头\",{\"1\":{\"75\":1}}],[\"判断是否为某个值\",{\"1\":{\"101\":1}}],[\"判断是否为该对\",{\"1\":{\"52\":1}}],[\"判断是否含有某个值\",{\"1\":{\"101\":1}}],[\"判断是否可执行某个动作\",{\"1\":{\"101\":1}}],[\"判断是否保留当前项\",{\"1\":{\"74\":1}}],[\"判断一个字符串是否包含在另一个字符串中\",{\"1\":{\"75\":1}}],[\"搜索的字符串\",{\"1\":{\"75\":1}}],[\"需要保留之前的类名\",{\"1\":{\"158\":1}}],[\"需要截取的第一个字符的索引\",{\"1\":{\"75\":1}}],[\"需求3\",{\"1\":{\"145\":1}}],[\"需求2\",{\"1\":{\"145\":1}}],[\"需求1\",{\"1\":{\"145\":1}}],[\"需转成秒再计算\",{\"1\":{\"85\":1}}],[\"需设\",{\"1\":{\"67\":1}}],[\"属性的\",{\"1\":{\"157\":1}}],[\"属性中包含字符\",{\"1\":{\"157\":1}}],[\"属性可以动态更改网页标签的样式\",{\"1\":{\"157\":1}}],[\"属性可以使用\",{\"1\":{\"99\":1}}],[\"属性本身的数据类型也是对象\",{\"1\":{\"157\":1}}],[\"属性不存在或单元值为\",{\"1\":{\"145\":1}}],[\"属性和方法允许被修改\",{\"1\":{\"126\":1}}],[\"属性和访问\",{\"0\":{\"109\":1}}],[\"属性值\",{\"1\":{\"112\":1,\"181\":1}}],[\"属性就是依附在对象上的变量\",{\"1\":{\"109\":1}}],[\"属性都是成对出现的\",{\"1\":{\"109\":2}}],[\"属性都是成\",{\"1\":{\"109\":1}}],[\"属性\",{\"0\":{\"115\":1,\"157\":1},\"1\":{\"75\":1,\"153\":1,\"157\":1}}],[\"属性名=\",{\"1\":{\"160\":1}}],[\"属性名可以使用\",{\"1\":{\"109\":1}}],[\"属性名\",{\"1\":{\"67\":1,\"109\":2,\"112\":1,\"160\":1}}],[\"但是语雀导出的\",{\"1\":{\"193\":1}}],[\"但是我们利用解构只要\",{\"1\":{\"145\":1}}],[\"但是可以使用\",{\"1\":{\"50\":1}}],[\"但只能置于最末位\",{\"1\":{\"144\":1}}],[\"但直接输出\",{\"1\":{\"139\":1}}],[\"但它会返回一个包含promise的数组\",{\"1\":{\"73\":1}}],[\"异步操作\",{\"1\":{\"73\":1}}],[\"异步操作会被并行执行\",{\"1\":{\"72\":1}}],[\"异步问题\",{\"0\":{\"71\":1}}],[\"它代表着当前函数运行时所处的环境\",{\"1\":{\"176\":1}}],[\"它的两个参数分别为\",{\"1\":{\"164\":1}}],[\"它存在一个致命的问题\",{\"1\":{\"130\":1}}],[\"它们之间使用\",{\"1\":{\"110\":3}}],[\"它们之间使用英文\",{\"1\":{\"109\":3}}],[\"它包含了一个属性\",{\"1\":{\"109\":2}}],[\"它由属性和方法两部分构成\",{\"1\":{\"107\":1}}],[\"它不会修改数组\",{\"1\":{\"70\":1}}],[\"它是一种接口\",{\"1\":{\"53\":1}}],[\"它是\",{\"1\":{\"50\":1}}],[\"则释放内\",{\"1\":{\"130\":1}}],[\"则只能使用\",{\"1\":{\"126\":1}}],[\"则返回0\",{\"1\":{\"69\":1}}],[\"则返回1\",{\"1\":{\"69\":1}}],[\"则返回\",{\"1\":{\"69\":1,\"70\":1}}],[\"则元素之间没有分隔符\",{\"1\":{\"64\":1}}],[\"通常习惯性的命名为\",{\"1\":{\"175\":1}}],[\"通常只用它来表示不存在的对象\",{\"1\":{\"111\":1}}],[\"通常规定\",{\"1\":{\"69\":1}}],[\"通过classname\",{\"0\":{\"158\":1}}],[\"通过元素节点获得的\",{\"1\":{\"157\":1}}],[\"通过修改行内样式\",{\"0\":{\"157\":1}}],[\"通过修改\",{\"1\":{\"153\":1}}],[\"通过演示数学对象的使用\",{\"1\":{\"116\":1}}],[\"通过对象描述一个人的数据信息\",{\"1\":{\"109\":2}}],[\"通过\",{\"0\":{\"159\":1},\"1\":{\"39\":1,\"157\":1,\"164\":1,\"194\":1}}],[\"排列\",{\"1\":{\"69\":1}}],[\"排序\",{\"0\":{\"69\":1}}],[\"由于class是关键字\",{\"1\":{\"158\":1}}],[\"由于数组没有求最大值的方法\",{\"1\":{\"139\":1}}],[\"由于它取决于具体实现\",{\"1\":{\"69\":1}}],[\"由于它们是不同的symbol\",{\"1\":{\"51\":1}}],[\"由垃圾回收自动回收不再使用的内存\",{\"1\":{\"129\":1}}],[\"由此可知作用域产生了嵌套的关系\",{\"1\":{\"128\":1}}],[\"由小到大\",{\"1\":{\"69\":1}}],[\"按下了回车\",{\"1\":{\"175\":1}}],[\"按需导入赋值\",{\"1\":{\"144\":1}}],[\"按照正序\",{\"1\":{\"69\":1}}],[\"按原文显示\",{\"1\":{\"39\":1}}],[\"如父级有定位\",{\"1\":{\"187\":1}}],[\"如图片\",{\"1\":{\"169\":1}}],[\"如用户点击了某个按钮时便会触发\",{\"1\":{\"164\":1}}],[\"如要遇到\",{\"1\":{\"157\":1}}],[\"如\",{\"1\":{\"157\":2}}],[\"如下图所示\",{\"1\":{\"128\":1}}],[\"如下代码所示\",{\"1\":{\"127\":1,\"128\":1,\"132\":1,\"144\":1,\"145\":1}}],[\"如跑步\",{\"1\":{\"110\":1}}],[\"如人的姓名\",{\"1\":{\"109\":1}}],[\"如上面代码\",{\"1\":{\"69\":1}}],[\"如果父元素监听了相同的事件类型\",{\"1\":{\"181\":1}}],[\"如果盒子是隐藏的\",{\"1\":{\"162\":1}}],[\"如果需要添加一个类\",{\"1\":{\"158\":1}}],[\"如果修改的样式比较多\",{\"1\":{\"158\":1}}],[\"如果文本内容中包含\",{\"1\":{\"153\":1}}],[\"如果一个函数使用\",{\"1\":{\"148\":1}}],[\"如果两个对象相互引用\",{\"1\":{\"130\":1}}],[\"如果引用次数是0\",{\"1\":{\"130\":1}}],[\"如果减少一个引用就减1\",{\"1\":{\"130\":1}}],[\"如果被引用了一次\",{\"1\":{\"130\":1}}],[\"如果当前作用域查找不到则会依次逐级查找父级作用域直到全局作用域\",{\"1\":{\"128\":1}}],[\"如果担心某个值会不小被修改时\",{\"1\":{\"126\":1}}],[\"如果将函数\",{\"1\":{\"106\":1}}],[\"如果省略\",{\"1\":{\"75\":1}}],[\"如果省略该函数\",{\"1\":{\"69\":1}}],[\"如果你需要顺序执行异步操作\",{\"1\":{\"72\":1,\"74\":1}}],[\"如果在数组中找到一个元素使得提供的函数返回\",{\"1\":{\"70\":1}}],[\"如果a==b\",{\"1\":{\"69\":1}}],[\"如果a>b\",{\"1\":{\"69\":1}}],[\"如果a<b\",{\"1\":{\"69\":1}}],[\"如果想要不改变原数组的排序方法\",{\"1\":{\"69\":1}}],[\"如果都符合返回\",{\"1\":{\"66\":2}}],[\"如果数组中有元素满足条件返回\",{\"1\":{\"60\":1}}],[\"如果所有元素都通过检测返回\",{\"1\":{\"60\":1}}],[\"如果没有符合条件的则返回\",{\"1\":{\"60\":1,\"65\":1}}],[\"如果该属性存在\",{\"1\":{\"52\":1}}],[\"码位值进行排序\",{\"1\":{\"69\":1}}],[\"码元值升序排序\",{\"1\":{\"69\":1}}],[\"然后调用\",{\"1\":{\"113\":1}}],[\"然后根据每个字符的\",{\"1\":{\"69\":1}}],[\"然后按照它们的\",{\"1\":{\"69\":1}}],[\"参数需要逗号隔开\",{\"1\":{\"139\":1}}],[\"参数\",{\"1\":{\"69\":1}}],[\"参数当前数组元素是必须要写的\",{\"1\":{\"62\":1}}],[\"其他事件\",{\"0\":{\"168\":1}}],[\"其他方式getelementbyid\",{\"1\":{\"152\":1}}],[\"其他技能\",{\"0\":{\"3\":1}}],[\"其本质是函数\",{\"1\":{\"110\":1}}],[\"其实本质已经调用了\",{\"1\":{\"104\":1}}],[\"其正负性表示两个元素的相对顺序\",{\"1\":{\"69\":1}}],[\"其中一个原因是早期\",{\"1\":{\"178\":1}}],[\"其中\",{\"1\":{\"68\":1}}],[\"决定的原数组的浅拷贝\",{\"1\":{\"68\":1}}],[\"和\",{\"1\":{\"68\":2,\"75\":1,\"109\":2,\"126\":1,\"127\":1,\"157\":1,\"164\":1}}],[\"即所谓的事件对象\",{\"1\":{\"175\":1}}],[\"即读写内存\",{\"1\":{\"129\":1}}],[\"即\",{\"1\":{\"67\":1,\"113\":1}}],[\"即成功调任何一个方法\",{\"1\":{\"59\":1,\"99\":1}}],[\"作为\",{\"1\":{\"67\":1}}],[\"作用域链的名字也由此而来\",{\"1\":{\"128\":1}}],[\"作用域链\",{\"0\":{\"128\":1}}],[\"作用域分为全局作用域和局部作用域\",{\"1\":{\"123\":1}}],[\"作用域\",{\"0\":{\"123\":1},\"1\":{\"123\":1}}],[\"作用范围\",{\"1\":{\"95\":1}}],[\"作用\",{\"1\":{\"45\":1,\"59\":1,\"60\":1,\"64\":1}}],[\"初始值\",{\"1\":{\"67\":2}}],[\"第3个参数为\",{\"1\":{\"178\":1}}],[\"第3个参数决定了事件是在捕获阶段触发还是在冒泡阶段触发\",{\"1\":{\"178\":1}}],[\"第1个参数\",{\"1\":{\"175\":1}}],[\"第一个用于比较的元素\",{\"1\":{\"69\":1}}],[\"第一次调用对象的next方法\",{\"1\":{\"54\":1}}],[\"第二个用于比较的元素\",{\"1\":{\"69\":1}}],[\"第二个元素作为\",{\"1\":{\"67\":1}}],[\"第二次返回值作为\",{\"1\":{\"67\":2}}],[\"每一个是否都符合条件\",{\"1\":{\"66\":2}}],[\"检测类\",{\"1\":{\"159\":1}}],[\"检测它的类型时\",{\"1\":{\"111\":1}}],[\"检测是否以某字符结尾\",{\"1\":{\"75\":1}}],[\"检测是否以某字符开头\",{\"1\":{\"75\":1}}],[\"检测是否包含某字符\",{\"1\":{\"75\":1}}],[\"检测位置索引号\",{\"1\":{\"75\":2}}],[\"检测字符串\",{\"1\":{\"75\":1}}],[\"检测每一个\",{\"0\":{\"66\":1}}],[\"检测数组中的元素是否满足指定条件\",{\"1\":{\"60\":1}}],[\"检测数组所有元素是否都符合指定条件\",{\"1\":{\"60\":1}}],[\"查找\",{\"1\":{\"65\":1}}],[\"查找元素的索引值\",{\"1\":{\"60\":1}}],[\"查找元素\",{\"0\":{\"65\":1},\"1\":{\"60\":2}}],[\"这是后台传递过来的数据\",{\"1\":{\"145\":1}}],[\"这样的相互引用如果说很大量的存在就会导致大量的内存泄露\",{\"1\":{\"130\":1}}],[\"这里不要求强记\",{\"1\":{\"116\":1}}],[\"这个方法\",{\"1\":{\"113\":1}}],[\"这个对象下即包含了属性\",{\"1\":{\"114\":1}}],[\"这个对象\",{\"1\":{\"65\":1}}],[\"这一对象是一个由\",{\"1\":{\"68\":1}}],[\"这些变量将决定不同的样式属性\",{\"1\":{\"24\":1}}],[\"华为\",{\"1\":{\"65\":3}}],[\"小小明\",{\"1\":{\"126\":1}}],[\"小红\",{\"1\":{\"110\":2}}],[\"小明\",{\"1\":{\"109\":4,\"110\":1,\"126\":1,\"127\":1,\"145\":6}}],[\"小时\",{\"1\":{\"85\":1}}],[\"小米\",{\"1\":{\"65\":2}}],[\"小括号是空字符串\",{\"1\":{\"64\":1}}],[\"小括号为空则逗号分割\",{\"1\":{\"64\":1}}],[\"|\",{\"1\":{\"64\":1}}],[\"筛选数组符合条件的元素\",{\"1\":{\"63\":1}}],[\"适合于遍历数组对象\",{\"1\":{\"62\":1}}],[\"与map相比\",{\"1\":{\"62\":1}}],[\"与这个新symbol相关联的函数\",{\"1\":{\"51\":1}}],[\"的值\",{\"1\":{\"157\":1}}],[\"的文本内容\",{\"1\":{\"153\":1}}],[\"的作用域\",{\"1\":{\"126\":3}}],[\"的\",{\"1\":{\"116\":2,\"157\":1}}],[\"的所有属性和属性值\",{\"1\":{\"93\":1}}],[\"的关系\",{\"1\":{\"61\":1}}],[\"的div子元素\",{\"1\":{\"16\":1}}],[\"映射是个术语\",{\"1\":{\"61\":1}}],[\"也可以阻止捕获\",{\"1\":{\"179\":1}}],[\"也可以动态为对象添加方法\",{\"1\":{\"110\":1}}],[\"也可以动态为对象添加属性\",{\"1\":{\"109\":1}}],[\"也需要修改属性\",{\"1\":{\"160\":1}}],[\"也就是使用变量\",{\"1\":{\"129\":1}}],[\"也包含了许多的方法\",{\"1\":{\"114\":1}}],[\"也是\",{\"1\":{\"111\":1}}],[\"也没有任何方法\",{\"1\":{\"110\":1}}],[\"也称为映射\",{\"1\":{\"61\":1}}],[\"也不会输出任何内容\",{\"1\":{\"51\":1}}],[\"颜色\",{\"1\":{\"61\":1,\"64\":1}}],[\"索引号可选\",{\"1\":{\"62\":1}}],[\"索引号\",{\"1\":{\"61\":1,\"62\":1,\"64\":1}}],[\"处理数据并且\",{\"1\":{\"61\":1,\"64\":1,\"67\":1}}],[\"数学对象提供了比较多的方法\",{\"1\":{\"116\":1}}],[\"数字向下取整\",{\"1\":{\"116\":1}}],[\"数字向上取整\",{\"1\":{\"116\":1}}],[\"数据\",{\"1\":{\"145\":1}}],[\"数据行为性的信息称为方法\",{\"1\":{\"110\":1}}],[\"数据描述性的信息称为属性\",{\"1\":{\"109\":1}}],[\"数据类型的一种\",{\"1\":{\"107\":1}}],[\"数据类型\",{\"0\":{\"49\":1}}],[\"数组对象解构\",{\"1\":{\"145\":1}}],[\"数组解构是将数组的单元值快速批量赋值给一系列变量的简洁语法\",{\"1\":{\"144\":1}}],[\"数组解构\",{\"0\":{\"144\":1}}],[\"数组做为对象数据typora怎么类型\",{\"1\":{\"99\":1}}],[\"数组第一个元素作为作为\",{\"1\":{\"67\":1}}],[\"数组第一个元素作为\",{\"1\":{\"67\":1}}],[\"数组join方法\",{\"1\":{\"64\":1}}],[\"数组元素会被转换为字符串\",{\"1\":{\"69\":1}}],[\"数组元素\",{\"1\":{\"61\":1,\"62\":1,\"64\":1}}],[\"数组\",{\"0\":{\"98\":1},\"1\":{\"61\":1,\"64\":1,\"67\":1,\"75\":1}}],[\"语雀图片地址\",{\"1\":{\"198\":1}}],[\"语雀资源跨域问题\",{\"0\":{\"192\":1}}],[\"语法\",{\"0\":{\"108\":1},\"1\":{\"61\":1,\"64\":1,\"68\":1,\"69\":1}}],[\"语言的第七种数据类型\",{\"1\":{\"50\":1}}],[\"伪数组转为真数组\",{\"1\":{\"60\":1}}],[\"伪数组转真数组\",{\"1\":{\"60\":1}}],[\"反转数组\",{\"1\":{\"60\":1}}],[\"对出现的\",{\"1\":{\"109\":1}}],[\"对于输出\",{\"1\":{\"93\":1}}],[\"对应的\",{\"1\":{\"155\":1,\"164\":1}}],[\"对应\",{\"1\":{\"61\":1}}],[\"对原数组单元值排序\",{\"1\":{\"60\":1}}],[\"对象专门用来添加事件监听的方法\",{\"1\":{\"164\":1}}],[\"对象中找不到与变量名一致的属性时变量值为\",{\"1\":{\"145\":1}}],[\"对象解构是将对象属性和方法快速批量赋值给一系列变量的简洁语法\",{\"1\":{\"145\":1}}],[\"对象解构\",{\"0\":{\"145\":1}}],[\"对象解构两大类型\",{\"1\":{\"143\":1}}],[\"对象方法箭头函数\",{\"1\":{\"142\":1}}],[\"对象方法里面的this\",{\"1\":{\"142\":1}}],[\"对象方法<\",{\"1\":{\"110\":3}}],[\"对象动态添加的属性默认也是全局的\",{\"1\":{\"127\":1}}],[\"对象外\",{\"1\":{\"113\":1}}],[\"对象语法<\",{\"1\":{\"108\":1,\"109\":3}}],[\"对象数据类型可以被理解成是一种数据集合\",{\"1\":{\"107\":1}}],[\"对象是\",{\"1\":{\"107\":1}}],[\"对象\",{\"0\":{\"107\":1},\"1\":{\"164\":1}}],[\"对象的时候\",{\"1\":{\"129\":1}}],[\"对象的所有属性\",{\"1\":{\"93\":1}}],[\"对象的symbol\",{\"1\":{\"52\":1}}],[\"对象非常有用\",{\"1\":{\"93\":1}}],[\"对象进行for\",{\"1\":{\"52\":1}}],[\"对象game中已有up和down属性\",{\"1\":{\"51\":1}}],[\"合并两个数组\",{\"1\":{\"60\":1}}],[\"合并数组\",{\"1\":{\"60\":1,\"139\":2}}],[\"重点\",{\"1\":{\"60\":2,\"65\":1}}],[\"累计器\",{\"0\":{\"67\":1},\"1\":{\"60\":1}}],[\"想要使用返回的新数组\",{\"1\":{\"60\":1}}],[\"迭代数组\",{\"0\":{\"61\":1},\"1\":{\"60\":1}}],[\"迭代器\",{\"0\":{\"53\":1},\"1\":{\"53\":1}}],[\"过滤数组\",{\"0\":{\"63\":1},\"1\":{\"60\":1}}],[\"遍历对象时\",{\"1\":{\"112\":1}}],[\"遍历对象\",{\"0\":{\"112\":1}}],[\"遍历数组时\",{\"1\":{\"112\":1}}],[\"遍历数组\",{\"0\":{\"62\":1},\"1\":{\"60\":1}}],[\"遍历器\",{\"1\":{\"53\":1}}],[\"说明\",{\"1\":{\"60\":1,\"75\":1,\"129\":1,\"174\":1}}],[\"拓展方法\",{\"0\":{\"60\":1}}],[\"原始数组不会被改变\",{\"1\":{\"68\":1}}],[\"原数组都跟着发生相应的改变\",{\"1\":{\"59\":1,\"99\":1}}],[\"原生具备iterator接口的数据\",{\"1\":{\"54\":1}}],[\"删除文本两侧空格\",{\"0\":{\"76\":1},\"1\":{\"76\":1}}],[\"删除第一个单元\",{\"1\":{\"59\":2,\"99\":2}}],[\"删除最后一个单元\",{\"1\":{\"59\":2,\"99\":2}}],[\"指定时间戳\",{\"1\":{\"83\":1}}],[\"指两个元素的集之间元素相互\",{\"1\":{\"61\":1}}],[\"指针自动指向数据结构的第一个成员\",{\"1\":{\"54\":1}}],[\"指向谁\",{\"1\":{\"142\":1}}],[\"指向\",{\"1\":{\"142\":1}}],[\"指向当前数据结构的起始位置\",{\"1\":{\"54\":1}}],[\"指向语言内部使用的方法\",{\"1\":{\"52\":1}}],[\"可用剩余参数\",{\"1\":{\"144\":1}}],[\"可用for\",{\"1\":{\"54\":1}}],[\"可能会造成内存泄漏\",{\"1\":{\"132\":1}}],[\"可获取将来时间戳\",{\"1\":{\"83\":1}}],[\"可获取指定时间戳\",{\"1\":{\"82\":1}}],[\"可选\",{\"1\":{\"69\":1,\"195\":2}}],[\"可以直接使用点语法操作比如\",{\"1\":{\"161\":1}}],[\"可以看到密码\",{\"1\":{\"160\":1}}],[\"可以通过\",{\"1\":{\"144\":1}}],[\"可以省略return\",{\"1\":{\"140\":1}}],[\"可以省略小括号\",{\"1\":{\"140\":1}}],[\"可以后面发现变量要被修改\",{\"1\":{\"97\":1}}],[\"可以配合map和promise\",{\"1\":{\"74\":1}}],[\"可以使用promise\",{\"1\":{\"73\":1}}],[\"可以使用\",{\"1\":{\"69\":1,\"109\":1,\"110\":1}}],[\"可以称这些方法为魔术方法\",{\"1\":{\"52\":1}}],[\"可以唤起设备应用程序\",{\"1\":{\"39\":1}}],[\"viewbox=\",{\"1\":{\"196\":2}}],[\"version=\",{\"1\":{\"196\":2}}],[\"version\",{\"1\":{\"126\":2}}],[\"value\",{\"1\":{\"119\":1,\"196\":19}}],[\"var不赋值默认为undefined\",{\"1\":{\"95\":1}}],[\"var可以重复声明\",{\"1\":{\"95\":1}}],[\"var定义的变量是全局变量或者函数变量\",{\"1\":{\"95\":1}}],[\"var\",{\"0\":{\"97\":1},\"1\":{\"69\":2,\"119\":3,\"126\":1,\"133\":1}}],[\"vs\",{\"1\":{\"59\":1,\"99\":1}}],[\"v\",{\"1\":{\"54\":2,\"196\":3}}],[\"vuepress\",{\"1\":{\"197\":1},\"2\":{\"199\":1}}],[\"vue\",{\"1\":{\"2\":1,\"59\":1,\"99\":1,\"196\":1,\"197\":1}}],[\"沙僧\",{\"1\":{\"54\":1}}],[\"孙悟空\",{\"1\":{\"54\":1}}],[\"唐僧\",{\"1\":{\"54\":1}}],[\"工作原理\",{\"0\":{\"54\":1},\"1\":{\"54\":1}}],[\"就指向谁\",{\"1\":{\"142\":1}}],[\"就返回true\",{\"1\":{\"70\":1}}],[\"就是从根部\",{\"1\":{\"131\":1}}],[\"就是看一个对象是否有指向它的引用\",{\"1\":{\"130\":1}}],[\"就是所谓的全局作用域\",{\"1\":{\"127\":1}}],[\"就是倒计时时间\",{\"1\":{\"85\":1}}],[\"就是遍历\",{\"1\":{\"62\":1}}],[\"就是一种机制\",{\"1\":{\"53\":1}}],[\"就可以完成遍历操作\",{\"1\":{\"53\":1}}],[\"接口\",{\"1\":{\"53\":1}}],[\"供统一的访问机制\",{\"1\":{\"53\":1}}],[\"65\",{\"1\":{\"196\":3}}],[\"6512\",{\"1\":{\"196\":1}}],[\"63\",{\"1\":{\"196\":3}}],[\"630\",{\"1\":{\"196\":1}}],[\"6336\",{\"1\":{\"196\":1}}],[\"631\",{\"1\":{\"196\":1}}],[\"691\",{\"1\":{\"196\":1}}],[\"6928\",{\"1\":{\"196\":2}}],[\"6944\",{\"1\":{\"196\":1}}],[\"696z\",{\"1\":{\"196\":1}}],[\"696\",{\"1\":{\"196\":1}}],[\"664\",{\"1\":{\"196\":1}}],[\"6656\",{\"1\":{\"196\":1}}],[\"6736\",{\"1\":{\"196\":1}}],[\"6752\",{\"1\":{\"196\":3}}],[\"67\",{\"1\":{\"196\":3}}],[\"672h71\",{\"1\":{\"196\":1}}],[\"64\",{\"1\":{\"196\":1}}],[\"6496\",{\"1\":{\"196\":1}}],[\"648\",{\"1\":{\"196\":1}}],[\"624a255\",{\"1\":{\"196\":1}}],[\"6224\",{\"1\":{\"196\":2}}],[\"6224v406\",{\"1\":{\"196\":1}}],[\"62\",{\"1\":{\"196\":1}}],[\"68\",{\"1\":{\"116\":1,\"196\":12}}],[\"60px\",{\"1\":{\"196\":1}}],[\"604\",{\"1\":{\"196\":1}}],[\"60\",{\"1\":{\"85\":12,\"196\":2}}],[\"6\",{\"1\":{\"52\":3,\"116\":1,\"126\":1,\"139\":2,\"196\":14}}],[\"511\",{\"1\":{\"196\":3}}],[\"5136l\",{\"1\":{\"196\":1}}],[\"5008\",{\"1\":{\"196\":1}}],[\"5072\",{\"1\":{\"196\":1}}],[\"5904\",{\"1\":{\"196\":1}}],[\"53\",{\"1\":{\"196\":4}}],[\"55\",{\"1\":{\"196\":3}}],[\"552a250\",{\"1\":{\"196\":1}}],[\"5584l19\",{\"1\":{\"196\":1}}],[\"5536\",{\"1\":{\"196\":1}}],[\"54\",{\"1\":{\"196\":6}}],[\"548\",{\"1\":{\"196\":1}}],[\"52l\",{\"1\":{\"196\":1}}],[\"5264c0\",{\"1\":{\"196\":1}}],[\"5264\",{\"1\":{\"196\":1}}],[\"571\",{\"1\":{\"196\":1}}],[\"5728c0\",{\"1\":{\"196\":1}}],[\"576v71\",{\"1\":{\"196\":1}}],[\"5776\",{\"1\":{\"196\":2}}],[\"5648\",{\"1\":{\"196\":1}}],[\"5696\",{\"1\":{\"196\":2}}],[\"5664\",{\"1\":{\"196\":2}}],[\"5616\",{\"1\":{\"196\":1}}],[\"56\",{\"1\":{\"145\":1}}],[\"58\",{\"1\":{\"145\":1,\"196\":3}}],[\"583833826\",{\"1\":{\"5\":1}}],[\"5g商用自己\",{\"1\":{\"145\":1}}],[\"5\",{\"1\":{\"52\":3,\"59\":1,\"68\":1,\"70\":1,\"75\":1,\"99\":1,\"116\":1,\"118\":2,\"127\":1,\"137\":1,\"139\":2,\"140\":1,\"196\":8}}],[\"464545\",{\"1\":{\"196\":1}}],[\"46\",{\"1\":{\"196\":9}}],[\"46539\",{\"1\":{\"116\":1}}],[\"4816\",{\"1\":{\"196\":4}}],[\"4384\",{\"1\":{\"196\":4}}],[\"43\",{\"1\":{\"196\":2}}],[\"47\",{\"1\":{\"196\":5}}],[\"472\",{\"1\":{\"196\":1}}],[\"4752h1003\",{\"1\":{\"196\":1}}],[\"418\",{\"1\":{\"196\":1}}],[\"41\",{\"1\":{\"196\":3}}],[\"4928\",{\"1\":{\"196\":1}}],[\"49\",{\"1\":{\"196\":4}}],[\"4464\",{\"1\":{\"196\":1}}],[\"404\",{\"1\":{\"201\":1}}],[\"40\",{\"1\":{\"196\":1}}],[\"400\",{\"1\":{\"155\":1}}],[\"40px\",{\"1\":{\"43\":1}}],[\"456\",{\"1\":{\"196\":1}}],[\"45\",{\"1\":{\"83\":1,\"196\":2}}],[\"4288\",{\"1\":{\"196\":2}}],[\"424\",{\"1\":{\"196\":1}}],[\"4256\",{\"1\":{\"196\":1}}],[\"42\",{\"1\":{\"80\":1,\"196\":2}}],[\"4\",{\"0\":{\"198\":1},\"1\":{\"52\":3,\"59\":1,\"68\":1,\"69\":2,\"70\":3,\"75\":2,\"96\":1,\"99\":1,\"116\":5,\"130\":1,\"132\":1,\"137\":1,\"139\":6,\"140\":1,\"141\":1,\"144\":8,\"196\":12}}],[\"我的笔记内容是通过语雀进行管理的\",{\"1\":{\"193\":1}}],[\"我的文章\",{\"0\":{\"9\":1},\"2\":{\"10\":1}}],[\"我叫韩梅梅\",{\"1\":{\"153\":2}}],[\"我叫李雷\",{\"1\":{\"153\":2}}],[\"我们称这个对象为事件对象\",{\"1\":{\"175\":1}}],[\"我们称函数\",{\"1\":{\"106\":1}}],[\"我们可以通过classlist方式追加和删除类名\",{\"1\":{\"159\":1}}],[\"我们可以通过借助于css类名的形式\",{\"1\":{\"158\":1}}],[\"我们可以省略大括号\",{\"1\":{\"140\":1}}],[\"我们只要\",{\"1\":{\"145\":1}}],[\"我们需要把data选出当做参数传递给\",{\"1\":{\"145\":1}}],[\"我称之为方法调用\",{\"1\":{\"110\":1}}],[\"我称之为属性访问\",{\"1\":{\"109\":1}}],[\"我跑的非常快\",{\"1\":{\"110\":2}}],[\"我是pink老师\",{\"1\":{\"75\":1}}],[\"我被用来检测类型了\",{\"1\":{\"52\":1}}],[\"哪些属性会被with\",{\"1\":{\"52\":1}}],[\"回想一下我们曾经使用过的\",{\"1\":{\"113\":1}}],[\"回调函数\",{\"0\":{\"106\":1}}],[\"回值\",{\"1\":{\"52\":1}}],[\"回该对象对应的原始类型值\",{\"1\":{\"52\":1}}],[\"返回纯文本格式\",{\"1\":{\"195\":1}}],[\"返回图片的二进制数据\",{\"1\":{\"195\":1}}],[\"返回伪数组\",{\"1\":{\"152\":1}}],[\"返回\",{\"1\":{\"119\":1,\"194\":1,\"195\":1}}],[\"返回值不会等待await\",{\"1\":{\"74\":1}}],[\"返回值应该是一个数字\",{\"1\":{\"69\":1}}],[\"返回值\",{\"1\":{\"67\":2}}],[\"返回的符合条件的新数组\",{\"1\":{\"63\":1}}],[\"返回的是处理之后的数组元素\",{\"1\":{\"60\":1}}],[\"返回的是筛选满足条件的数组元素\",{\"1\":{\"60\":1}}],[\"返回一个数组\",{\"1\":{\"61\":1,\"64\":1,\"67\":1}}],[\"返回生成新数组\",{\"1\":{\"60\":1}}],[\"返回符合测试条件的第一个数组元素值\",{\"1\":{\"60\":1,\"65\":1}}],[\"返回累计处理的结果\",{\"1\":{\"60\":1}}],[\"返回新数组\",{\"1\":{\"60\":3}}],[\"返回该方法的返\",{\"1\":{\"52\":1}}],[\"返回该方法的返回值\",{\"1\":{\"52\":1}}],[\"返回该对象的默认遍历器\",{\"1\":{\"52\":1}}],[\"返\",{\"1\":{\"52\":1}}],[\"该函数使用以下参数调用\",{\"1\":{\"69\":1}}],[\"该对象中存在一个方法叫\",{\"1\":{\"113\":1}}],[\"该对象指定了使用with关键字时\",{\"1\":{\"52\":1}}],[\"该对象被转为原始类型的值时\",{\"1\":{\"52\":1}}],[\"该方法的返回值\",{\"1\":{\"52\":2}}],[\"当\",{\"1\":{\"196\":1}}],[\"当我们声明变量\",{\"1\":{\"129\":1}}],[\"当前时间戳\",{\"1\":{\"82\":1,\"83\":1,\"84\":1}}],[\"当前值\",{\"1\":{\"67\":1}}],[\"当前值current\",{\"1\":{\"67\":3}}],[\"当对象中属性的值相加时\",{\"1\":{\"67\":1}}],[\"当该对象被str\",{\"1\":{\"52\":3}}],[\"当执行str\",{\"1\":{\"52\":1}}],[\"当其他对象使用instanceof运算符\",{\"1\":{\"52\":1}}],[\"时默认值才会生效\",{\"1\":{\"144\":1,\"145\":1}}],[\"时间戳得到毫秒\",{\"1\":{\"85\":1}}],[\"时间戳方法\",{\"0\":{\"81\":1}}],[\"时\",{\"1\":{\"52\":2,\"106\":1,\"157\":1}}],[\"会在窗口尺寸改变的时候触发事件\",{\"1\":{\"173\":1}}],[\"会被自动回收掉\",{\"1\":{\"129\":1}}],[\"会优先查找当前函数作用域中查找变量\",{\"1\":{\"128\":1}}],[\"会产生新的函数作用域\",{\"1\":{\"128\":1}}],[\"会调用symbol\",{\"1\":{\"52\":1}}],[\"会调用这个方法\",{\"1\":{\"52\":2}}],[\"会返回该\",{\"1\":{\"52\":1}}],[\"会返回\",{\"1\":{\"52\":2}}],[\"会\",{\"1\":{\"52\":1}}],[\"会使用该属性\",{\"1\":{\"52\":1}}],[\"会报错\",{\"1\":{\"51\":1}}],[\"象的实例时\",{\"1\":{\"52\":1}}],[\"景下自动执行\",{\"1\":{\"52\":1}}],[\"因此不适合直接在其中使用异步操作\",{\"1\":{\"74\":1}}],[\"因此不会调用任何函数\",{\"1\":{\"51\":1}}],[\"因此\",{\"1\":{\"72\":1}}],[\"因此无法保证排序的时间和空间复杂度\",{\"1\":{\"69\":1}}],[\"因为他们的引用次数永远不会是0\",{\"1\":{\"130\":1}}],[\"因为存储的地址没有修改\",{\"1\":{\"96\":1}}],[\"因为会显示\",{\"1\":{\"93\":1}}],[\"因为filter也是并行执行的\",{\"1\":{\"74\":1}}],[\"因为每次async函数调用都会返回一个promise对象\",{\"1\":{\"73\":1}}],[\"因为它们会在特定的场\",{\"1\":{\"52\":1}}],[\"因为game\",{\"1\":{\"51\":1}}],[\"因为这是一个新的symbol\",{\"1\":{\"51\":1}}],[\"所以使用classname去代替\",{\"1\":{\"158\":1}}],[\"所以要改成驼峰法\",{\"1\":{\"157\":1}}],[\"所以javascript引擎无法找到\",{\"1\":{\"51\":1}}],[\"所有子代\",{\"0\":{\"16\":1}}],[\"而不再去影响到其对应的祖先元素\",{\"1\":{\"179\":2}}],[\"而不影响原有的属性\",{\"1\":{\"51\":1}}],[\"而var定义的之内\",{\"1\":{\"95\":1}}],[\"而这个新symbol与定义在对象game中的那个symbol是不同的\",{\"1\":{\"51\":1}}],[\"尝试访问的是一个使用新创建的symbol作为键的属性\",{\"1\":{\"51\":1}}],[\"不支持捕获\",{\"1\":{\"178\":1}}],[\"不再使用的对象\",{\"1\":{\"131\":1}}],[\"不用了\",{\"1\":{\"129\":1}}],[\"不推荐\",{\"1\":{\"127\":2}}],[\"不同代码块之间的变量无法互相访问\",{\"1\":{\"126\":1}}],[\"不同函数内部声明的变量无法互相访问\",{\"1\":{\"125\":1}}],[\"不能重新赋值\",{\"1\":{\"126\":2}}],[\"不能互相嵌套\",{\"1\":{\"39\":1}}],[\"不但有\",{\"1\":{\"99\":1}}],[\"不包含border\",{\"1\":{\"184\":1}}],[\"不包含\",{\"1\":{\"116\":1}}],[\"不包含要取的字符\",{\"1\":{\"75\":1}}],[\"不包括\",{\"1\":{\"68\":1}}],[\"不会产生块作用域\",{\"1\":{\"126\":1}}],[\"不会是\",{\"1\":{\"69\":2}}],[\"不会输出\",{\"1\":{\"51\":1}}],[\"不返回数组\",{\"1\":{\"60\":1}}],[\"狼人杀\",{\"1\":{\"51\":1}}],[\"调用函数\",{\"1\":{\"138\":1}}],[\"调用求和函数\",{\"1\":{\"137\":1}}],[\"调用对象中的\",{\"1\":{\"110\":1}}],[\"调用对象中\",{\"1\":{\"110\":1}}],[\"调用对象中函数\",{\"1\":{\"110\":1}}],[\"调用它\",{\"1\":{\"52\":1}}],[\"调用\",{\"1\":{\"51\":1,\"103\":1,\"128\":1}}],[\"gap\",{\"1\":{\"196\":1}}],[\"game\",{\"1\":{\"51\":7}}],[\"g\",{\"1\":{\"128\":5}}],[\"global\",{\"0\":{\"127\":1}}],[\"gender\",{\"1\":{\"109\":3,\"126\":1}}],[\"getelementbyid\",{\"1\":{\"164\":1}}],[\"getelementsbytagname\",{\"1\":{\"152\":1}}],[\"getsum\",{\"1\":{\"141\":2}}],[\"getname\",{\"1\":{\"101\":1}}],[\"get\",{\"1\":{\"101\":1,\"138\":2,\"195\":1,\"196\":1}}],[\"gettime\",{\"0\":{\"82\":1},\"1\":{\"82\":1}}],[\"green\",{\"1\":{\"19\":1,\"31\":1,\"42\":1,\"62\":2}}],[\"在md文件中使用组件\",{\"0\":{\"198\":1}}],[\"在dom对象上一律以dataset对象方式获取\",{\"1\":{\"161\":1}}],[\"在标签上一律以data\",{\"1\":{\"161\":1}}],[\"在html5中推出来了专门的data\",{\"1\":{\"161\":1}}],[\"在js中就是全局对象\",{\"1\":{\"131\":1}}],[\"在js文件或函数开头添加\",{\"1\":{\"119\":1}}],[\"在解释什么是作用域链前先来看一段代码\",{\"1\":{\"128\":1}}],[\"在此声明的变量在函数内部也可以被访问\",{\"1\":{\"127\":1}}],[\"在\",{\"1\":{\"126\":1,\"196\":2}}],[\"在函数被执行时\",{\"1\":{\"128\":1}}],[\"在函数外部无法被访问\",{\"1\":{\"125\":1}}],[\"在函数内部声明的变量只能在函数内部被访问\",{\"1\":{\"125\":1}}],[\"在一组数中找出最小的\",{\"1\":{\"116\":1}}],[\"在一组数中找出最大的\",{\"1\":{\"116\":1}}],[\"在该对象上面调用tostring方法时\",{\"1\":{\"52\":1}}],[\"在对象上添加一个symbol属性\",{\"1\":{\"51\":1}}],[\"在其基础上进行了整理\",{\"1\":{\"11\":1}}],[\"为加载图标的\",{\"1\":{\"196\":1}}],[\"为了解决classname\",{\"1\":{\"159\":1}}],[\"为了防止msg里面的data名字混淆\",{\"1\":{\"145\":1}}],[\"为了等待所有异步操作完成\",{\"1\":{\"73\":1}}],[\"为\",{\"1\":{\"127\":1}}],[\"为开启严格模式\",{\"1\":{\"119\":1}}],[\"为回调函数\",{\"1\":{\"106\":1}}],[\"为current\",{\"1\":{\"67\":1}}],[\"为0\",{\"1\":{\"67\":2}}],[\"为各种不同的数据结构提\",{\"1\":{\"53\":1}}],[\"为对象添加symbol类型的属性\",{\"0\":{\"51\":1}}],[\"为此种写法用的非常多\",{\"1\":{\"42\":1}}],[\"使用解构简洁语法快速为变量赋值\",{\"1\":{\"143\":1}}],[\"使用闭包能够访问函数作用域中的变量\",{\"1\":{\"132\":1}}],[\"使用闭包函数创建隔离作用域避免全局变量污染\",{\"1\":{\"123\":1}}],[\"使用完毕\",{\"1\":{\"129\":1}}],[\"使用一对花括号\",{\"1\":{\"108\":1}}],[\"使用以上4个方法时\",{\"1\":{\"59\":1,\"99\":1}}],[\"使用之前存储的symbol来访问属性\",{\"1\":{\"51\":1}}],[\"使用\",{\"1\":{\"50\":1,\"111\":1,\"195\":1,\"196\":1}}],[\"使用mixin\",{\"1\":{\"25\":2}}],[\"是上一层作用域的this\",{\"1\":{\"142\":1}}],[\"是个\",{\"1\":{\"138\":1}}],[\"是语法符号\",{\"1\":{\"138\":1}}],[\"是全局的\",{\"1\":{\"127\":1}}],[\"是\",{\"1\":{\"114\":1,\"164\":1}}],[\"是一个对象\",{\"1\":{\"109\":2}}],[\"是一种类似于字符串的数据类型\",{\"1\":{\"50\":1}}],[\"是内置的构造函数\",{\"1\":{\"78\":1}}],[\"是否可以展开\",{\"1\":{\"52\":1}}],[\"是标识\",{\"1\":{\"50\":1}}],[\"创建对象的三种方法\",{\"0\":{\"147\":1}}],[\"创建衍生对象时\",{\"1\":{\"52\":1}}],[\"创建一个指针对象\",{\"1\":{\"54\":1}}],[\"创建一个symbol并将其存储在变量中以便稍后使用\",{\"1\":{\"51\":1}}],[\"创建一个symbol\",{\"1\":{\"51\":1}}],[\"创建一个空对象\",{\"1\":{\"51\":1}}],[\"创建\",{\"1\":{\"50\":1,\"196\":1}}],[\"overflow\",{\"1\":{\"196\":1}}],[\"org\",{\"1\":{\"196\":2}}],[\"orange\",{\"1\":{\"44\":1}}],[\"observe\",{\"1\":{\"196\":1}}],[\"observer\",{\"1\":{\"196\":7}}],[\"obj\",{\"1\":{\"112\":6,\"119\":3,\"142\":9,\"147\":4}}],[\"object创建\",{\"1\":{\"147\":1}}],[\"object1\",{\"1\":{\"80\":2}}],[\"object\",{\"0\":{\"80\":1},\"1\":{\"80\":2,\"93\":1,\"111\":1,\"119\":1,\"147\":2}}],[\"object对象方法\",{\"0\":{\"79\":1}}],[\"options\",{\"1\":{\"164\":1}}],[\"om\",{\"1\":{\"164\":1,\"165\":1}}],[\"onbeforeunmount\",{\"1\":{\"196\":2}}],[\"onmounted\",{\"1\":{\"196\":2}}],[\"on方式会覆盖\",{\"1\":{\"164\":1}}],[\"on事件\",{\"1\":{\"164\":1}}],[\"one\",{\"1\":{\"159\":3}}],[\"other是任意变量名\",{\"1\":{\"138\":1}}],[\"other\",{\"1\":{\"138\":3}}],[\"outer\",{\"1\":{\"132\":4,\"179\":5}}],[\"output\",{\"1\":{\"68\":6,\"69\":2,\"80\":1}}],[\"o2\",{\"1\":{\"130\":3}}],[\"o1\",{\"1\":{\"130\":3}}],[\"offsettop是只读属性\",{\"1\":{\"187\":1}}],[\"offsetleft\",{\"1\":{\"187\":1}}],[\"offsetwidth和offsetheight\",{\"1\":{\"162\":1}}],[\"of会比foreach\",{\"1\":{\"74\":1}}],[\"of遍历\",{\"1\":{\"54\":1}}],[\"of\",{\"1\":{\"54\":1}}],[\"of消费\",{\"1\":{\"54\":1}}],[\"of循环而不是foreach\",{\"1\":{\"72\":1}}],[\"of循环\",{\"1\":{\"54\":1}}],[\"of循环时\",{\"1\":{\"52\":1}}],[\"o\",{\"1\":{\"52\":2}}],[\"ownkeys来获取对象的所有键名\",{\"1\":{\"50\":1}}],[\"先写父\",{\"1\":{\"45\":1}}],[\"儿子元素\",{\"1\":{\"45\":1}}],[\"符合要求的子元素\",{\"1\":{\"45\":1}}],[\"选中指定元素中\",{\"1\":{\"45\":1}}],[\"选中类名为subject元素中的所有类名为front\",{\"1\":{\"44\":1}}],[\"选中类名为subject元素中的所有li\",{\"1\":{\"44\":1}}],[\"选中ul中所有li中的a\",{\"1\":{\"44\":1}}],[\"选中ul中的所有li\",{\"1\":{\"44\":1}}],[\"选中id为peiqi\",{\"1\":{\"43\":1}}],[\"选中\",{\"1\":{\"42\":2}}],[\"选择器符号\",{\"0\":{\"14\":1}}],[\"空格会原样显示\",{\"1\":{\"39\":1}}],[\"一般用于求最大值\",{\"1\":{\"139\":1}}],[\"一般用于在页面中嵌入大段代码\",{\"1\":{\"39\":1}}],[\"一般情况下局部变量的值\",{\"1\":{\"129\":1}}],[\"一般情况下省略\",{\"1\":{\"109\":1,\"110\":1}}],[\"一般有如下生命周期\",{\"1\":{\"129\":1}}],[\"一般是动词性的\",{\"1\":{\"110\":1}}],[\"一般是名词性的\",{\"1\":{\"109\":1}}],[\"一般提示用户输入一些内容\",{\"1\":{\"92\":1}}],[\"一名还没毕业的菜鸟前端\",{\"1\":{\"1\":1}}],[\"唤起设备发送短信\",{\"1\":{\"39\":1}}],[\"唤起设备发送邮件\",{\"1\":{\"39\":1}}],[\"唤起设备拨号\",{\"1\":{\"39\":1}}],[\"hidden\",{\"1\":{\"196\":1}}],[\"hz\",{\"1\":{\"196\":1}}],[\"h3>\",{\"1\":{\"164\":1,\"179\":1}}],[\"h4>\",{\"1\":{\"153\":2}}],[\"http\",{\"1\":{\"138\":2,\"180\":1,\"196\":2}}],[\"html>\",{\"1\":{\"92\":2,\"108\":2,\"109\":6,\"110\":6}}],[\"html4\",{\"0\":{\"39\":1}}],[\"html4笔记\",{\"1\":{\"38\":1}}],[\"html5笔记\",{\"1\":{\"38\":1}}],[\"html+css\",{\"0\":{\"38\":1},\"2\":{\"46\":1}}],[\"html\",{\"1\":{\"2\":1,\"59\":1,\"99\":1,\"153\":1},\"2\":{\"36\":1,\"47\":1}}],[\"has\",{\"1\":{\"101\":1}}],[\"hasinstance\",{\"1\":{\"52\":2}}],[\"height\",{\"1\":{\"196\":3}}],[\"height=\",{\"1\":{\"196\":2}}],[\"headers\",{\"1\":{\"195\":2}}],[\"head>\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"hello\",{\"1\":{\"51\":2,\"76\":1,\"108\":1,\"126\":1,\"133\":2}}],[\"h\",{\"1\":{\"85\":6}}],[\"h=parseint\",{\"1\":{\"85\":1}}],[\"href=\",{\"1\":{\"39\":3,\"180\":1}}],[\"h1~h6\",{\"1\":{\"39\":1}}],[\"尚硅谷\",{\"1\":{\"38\":4,\"50\":5}}],[\"详细笔记见下方尚硅谷笔记\",{\"1\":{\"38\":1}}],[\"并添加了若干方法后\",{\"1\":{\"110\":1}}],[\"并添加了若干属性后\",{\"1\":{\"109\":1}}],[\"并添加了一些自己的理解\",{\"1\":{\"11\":1}}],[\"并返回对相同数组的引用\",{\"1\":{\"69\":1}}],[\"并返回筛选之后元素的新数组\",{\"1\":{\"63\":1}}],[\"并且返回这个对象\",{\"1\":{\"65\":1}}],[\"并且在添加或删除单元时\",{\"1\":{\"59\":1,\"99\":1}}],[\"并将元素传递给回调函数\",{\"1\":{\"62\":1}}],[\"并不会按照预期的顺序执行\",{\"1\":{\"72\":1}}],[\"并不会发生错乱\",{\"1\":{\"59\":1,\"99\":1}}],[\"并不全面\",{\"1\":{\"38\":1,\"90\":1}}],[\"并集选择器\",{\"0\":{\"43\":1}}],[\"+=\",{\"1\":{\"137\":1,\"141\":1}}],[\"++\",{\"1\":{\"130\":1}}],[\"+new\",{\"0\":{\"83\":1},\"1\":{\"83\":2}}],[\"+10\",{\"1\":{\"67\":1}}],[\"+\",{\"1\":{\"34\":1,\"61\":1,\"64\":1,\"67\":2,\"85\":3,\"118\":5,\"119\":2,\"125\":1,\"127\":2,\"132\":1,\"133\":2,\"140\":1}}],[\"=>\",{\"1\":{\"63\":1,\"65\":1,\"66\":1,\"70\":2,\"73\":1,\"74\":2,\"140\":6,\"141\":1,\"142\":3,\"196\":8,\"197\":1}}],[\"=\",{\"1\":{\"34\":2,\"50\":5,\"51\":11,\"52\":4,\"54\":2,\"59\":1,\"61\":2,\"62\":2,\"63\":3,\"64\":2,\"65\":3,\"66\":2,\"67\":2,\"68\":1,\"69\":4,\"70\":1,\"73\":1,\"74\":2,\"75\":7,\"76\":1,\"78\":2,\"80\":1,\"82\":1,\"85\":7,\"93\":1,\"96\":2,\"99\":1,\"103\":1,\"108\":3,\"109\":5,\"110\":6,\"112\":1,\"117\":2,\"119\":6,\"125\":1,\"126\":10,\"127\":4,\"128\":8,\"130\":6,\"132\":6,\"133\":2,\"137\":2,\"139\":4,\"140\":7,\"141\":4,\"142\":6,\"144\":13,\"145\":17,\"147\":6,\"153\":6,\"155\":4,\"157\":4,\"159\":2,\"161\":1,\"164\":4,\"175\":1,\"176\":2,\"179\":3,\"180\":1,\"195\":7,\"196\":14}}],[\"===\",{\"1\":{\"50\":2,\"65\":2,\"112\":1,\"175\":1,\"196\":3}}],[\"==\",{\"1\":{\"22\":2,\"74\":1,\"196\":1}}],[\"默认为视口\",{\"1\":{\"196\":1}}],[\"默认值为\",{\"1\":{\"178\":1}}],[\"默认取到最后\",{\"1\":{\"75\":1}}],[\"默认排序是将元素转换为字符串\",{\"1\":{\"69\":1}}],[\"默认浅色主题\",{\"1\":{\"26\":1}}],[\"默认使用浅色主题\",{\"1\":{\"24\":1}}],[\"<imageproxy\",{\"1\":{\"198\":1}}],[\"<img\",{\"1\":{\"196\":1}}],[\"<style\",{\"1\":{\"196\":1}}],[\"<span>加载中\",{\"1\":{\"196\":1}}],[\"<span>糟糕\",{\"1\":{\"196\":1}}],[\"<svg\",{\"1\":{\"196\":2}}],[\"<script\",{\"1\":{\"196\":1}}],[\"<script>\",{\"1\":{\"59\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"67\":1,\"75\":1,\"78\":1,\"92\":1,\"99\":1,\"108\":1,\"109\":3,\"110\":3,\"125\":1,\"126\":2,\"127\":3,\"128\":2,\"132\":1,\"133\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":2,\"147\":1,\"153\":2,\"155\":1,\"161\":1,\"164\":1,\"175\":1,\"176\":1,\"179\":1,\"180\":1}}],[\"<template\",{\"1\":{\"196\":2}}],[\"<template>\",{\"1\":{\"196\":1}}],[\"<title>javascript\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"<button\",{\"1\":{\"164\":1}}],[\"<body>\",{\"1\":{\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"67\":1,\"92\":1,\"108\":1,\"109\":3,\"110\":3,\"132\":1,\"140\":1,\"141\":1,\"145\":1,\"147\":1,\"164\":1,\"179\":1,\"180\":1}}],[\"<path\",{\"1\":{\"196\":5}}],[\"<p>阻止冒泡是指阻断事件的流动\",{\"1\":{\"179\":1}}],[\"<p>hello\",{\"1\":{\"26\":1}}],[\"<p\",{\"1\":{\"164\":1}}],[\"<meta\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"<h3>阻止冒泡<\",{\"1\":{\"179\":1}}],[\"<h3>事件监听<\",{\"1\":{\"164\":1}}],[\"<h4>嗨~\",{\"1\":{\"153\":2}}],[\"<head>\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"<html\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"<a\",{\"1\":{\"39\":3,\"180\":1}}],[\"<=\",{\"1\":{\"34\":1,\"126\":1}}],[\"<div\",{\"1\":{\"26\":1,\"161\":1,\"179\":3,\"196\":1}}],[\"<\",{\"1\":{\"26\":3,\"39\":3,\"59\":1,\"61\":2,\"62\":2,\"63\":2,\"64\":2,\"65\":2,\"67\":2,\"75\":1,\"78\":1,\"85\":3,\"92\":5,\"99\":1,\"108\":5,\"109\":15,\"110\":15,\"125\":1,\"126\":2,\"127\":2,\"128\":2,\"132\":2,\"133\":1,\"137\":2,\"138\":1,\"139\":2,\"140\":2,\"141\":2,\"142\":1,\"144\":1,\"145\":2,\"147\":2,\"153\":4,\"155\":1,\"161\":2,\"164\":3,\"175\":1,\"176\":1,\"179\":5,\"180\":3,\"196\":10}}],[\"应用\",{\"1\":{\"51\":1}}],[\"应用深色主题\",{\"1\":{\"25\":1}}],[\"应用浅色主题\",{\"1\":{\"25\":1}}],[\"定义旋转动画\",{\"1\":{\"196\":1}}],[\"定义为\",{\"1\":{\"131\":1}}],[\"定义排序顺序的函数\",{\"1\":{\"69\":1}}],[\"定义一个数组\",{\"1\":{\"59\":1,\"99\":1}}],[\"定义\",{\"1\":{\"25\":1,\"50\":1,\"130\":1}}],[\"定义主题变量及样式\",{\"0\":{\"24\":1}}],[\"有些时候需要等页面资源全部处理完了做一些事情\",{\"1\":{\"169\":1}}],[\"有就删除\",{\"1\":{\"159\":1}}],[\"有3种方式可以实现对属性的修改\",{\"1\":{\"154\":1}}],[\"有可能\",{\"1\":{\"126\":1}}],[\"有初始值时\",{\"1\":{\"67\":1}}],[\"有两种方式\",{\"1\":{\"25\":1}}],[\"有兴趣就有无限动力\",{\"1\":{\"1\":1}}],[\"样式的\",{\"1\":{\"157\":1}}],[\"样式\",{\"1\":{\"24\":1}}],[\"浅色主题\",{\"1\":{\"24\":1}}],[\"主题2\",{\"1\":{\"24\":1}}],[\"主题1\",{\"1\":{\"24\":1}}],[\"主要使用场景\",{\"1\":{\"63\":1}}],[\"主要是遍历数组\",{\"1\":{\"62\":1}}],[\"主要荣誉\",{\"0\":{\"4\":1}}],[\"主要技术栈\",{\"0\":{\"2\":1}}],[\"你好\",{\"1\":{\"127\":1}}],[\"你可以根据不同的主题定义一组变量\",{\"1\":{\"24\":1}}],[\"你需要定义一些\",{\"1\":{\"24\":1}}],[\"变量更名\",{\"1\":{\"145\":1}}],[\"变量的数量小于单元值数量时\",{\"1\":{\"144\":1}}],[\"变量的数量大于单元值数量时\",{\"1\":{\"144\":1}}],[\"变量的顺序对应数组单元值的位置依次进行赋值操作\",{\"1\":{\"144\":1}}],[\"变量少\",{\"1\":{\"144\":1}}],[\"变量多\",{\"1\":{\"144\":1}}],[\"变量提升\",{\"0\":{\"133\":1}}],[\"变量便不能被访问\",{\"1\":{\"123\":1}}],[\"变量赋值\",{\"1\":{\"95\":1}}],[\"变量声明\",{\"1\":{\"95\":1}}],[\"变量\",{\"0\":{\"94\":1},\"1\":{\"24\":1}}],[\"变量控制主题\",{\"0\":{\"23\":1}}],[\"首先\",{\"1\":{\"24\":1}}],[\"用new创建空对象\",{\"1\":{\"147\":1}}],[\"用系统自带的构造函数new\",{\"1\":{\"147\":1}}],[\"用于存储\",{\"1\":{\"196\":1}}],[\"用于文件操作\",{\"1\":{\"195\":1}}],[\"用于js\",{\"1\":{\"184\":1}}],[\"用于批量声明变量\",{\"1\":{\"144\":1,\"145\":1}}],[\"用于获取多余的实参\",{\"1\":{\"138\":1}}],[\"用于设置保留小数位的长度\",{\"1\":{\"78\":1}}],[\"用于创建数值\",{\"1\":{\"78\":1}}],[\"用于查找字符串\",{\"1\":{\"75\":1}}],[\"用于替换字符串\",{\"1\":{\"75\":1}}],[\"用于将字母转换成小写\",{\"1\":{\"75\":1}}],[\"用于将字母转换成大写\",{\"1\":{\"75\":1}}],[\"用于字符串截取\",{\"1\":{\"75\":1}}],[\"用来将字符串拆分成数组\",{\"1\":{\"75\":1}}],[\"用来获取字符串长度\",{\"1\":{\"75\":1}}],[\"用来解决命名冲突的问题\",{\"1\":{\"50\":1}}],[\"用\",{\"0\":{\"23\":1}}],[\"fs\",{\"1\":{\"195\":3}}],[\"father\",{\"1\":{\"145\":2}}],[\"family\",{\"1\":{\"145\":2}}],[\"false\",{\"1\":{\"50\":2,\"52\":2,\"60\":2,\"70\":2,\"75\":1,\"80\":1,\"119\":1,\"178\":2}}],[\"f\",{\"1\":{\"119\":2,\"128\":4,\"132\":2}}],[\"flex\",{\"1\":{\"196\":2}}],[\"floor\",{\"1\":{\"116\":2,\"117\":1,\"118\":3}}],[\"flag\",{\"1\":{\"66\":2,\"126\":2,\"127\":3}}],[\"fn\",{\"1\":{\"103\":2,\"130\":2,\"132\":5,\"140\":13,\"142\":4}}],[\"feb\",{\"1\":{\"69\":2}}],[\"fill\",{\"1\":{\"196\":2}}],[\"filter更合适\",{\"1\":{\"74\":1}}],[\"filtered\",{\"1\":{\"74\":1}}],[\"filter的返回结果是一个布尔值\",{\"1\":{\"74\":1}}],[\"filter\",{\"0\":{\"63\":1},\"1\":{\"60\":1,\"63\":3,\"74\":1}}],[\"findindex\",{\"1\":{\"60\":1}}],[\"find\",{\"0\":{\"65\":1},\"1\":{\"60\":1,\"65\":3}}],[\"first\",{\"1\":{\"15\":2}}],[\"function\",{\"1\":{\"51\":4,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"67\":1,\"69\":2,\"101\":2,\"103\":1,\"104\":2,\"110\":5,\"119\":2,\"125\":1,\"127\":2,\"128\":4,\"130\":1,\"132\":7,\"137\":1,\"138\":1,\"140\":1,\"142\":3,\"145\":2,\"164\":2,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"175\":1,\"176\":1,\"179\":3,\"180\":1,\"195\":1}}],[\"front\",{\"1\":{\"44\":1}}],[\"from\",{\"1\":{\"22\":1,\"60\":1,\"195\":1,\"196\":2,\"197\":2}}],[\"found\",{\"1\":{\"201\":1}}],[\"focus\",{\"1\":{\"167\":1}}],[\"font\",{\"1\":{\"43\":1}}],[\"foreach不会等待async函数中的await完成\",{\"1\":{\"72\":1}}],[\"foreach不返回数组\",{\"1\":{\"62\":1}}],[\"foreach没有返回值\",{\"1\":{\"61\":1}}],[\"foreach\",{\"0\":{\"62\":1},\"1\":{\"60\":1,\"62\":4,\"196\":1}}],[\"for\",{\"1\":{\"22\":1,\"50\":3,\"54\":1,\"74\":1,\"112\":2,\"126\":1,\"137\":1,\"141\":1}}],[\"ff6600\",{\"1\":{\"24\":1}}],[\"ffffff\",{\"1\":{\"24\":2}}],[\"fff\",{\"1\":{\"22\":2,\"34\":2}}],[\"icon\",{\"1\":{\"196\":4}}],[\"ie\",{\"1\":{\"178\":1}}],[\"ie采用的引用计数算法\",{\"1\":{\"130\":1}}],[\"import\",{\"1\":{\"196\":2,\"197\":2}}],[\"image\",{\"1\":{\"196\":2}}],[\"imageurl=$\",{\"1\":{\"196\":1}}],[\"imageurl\",{\"1\":{\"195\":4}}],[\"imageproxy\",{\"1\":{\"195\":1,\"196\":1,\"197\":4}}],[\"images\",{\"1\":{\"155\":1}}],[\"imgurl\",{\"1\":{\"196\":5}}],[\"img\",{\"1\":{\"155\":1,\"196\":1}}],[\"id=\",{\"1\":{\"161\":1,\"164\":2,\"196\":7}}],[\"id\",{\"1\":{\"145\":3,\"161\":2}}],[\"i++\",{\"1\":{\"137\":1,\"141\":1}}],[\"items\",{\"1\":{\"196\":1}}],[\"item\",{\"1\":{\"62\":2,\"63\":5,\"65\":6,\"66\":2,\"70\":4,\"73\":2,\"74\":5}}],[\"iterator接口主要供for\",{\"1\":{\"54\":1}}],[\"iterator方法\",{\"1\":{\"52\":1}}],[\"iterator\",{\"0\":{\"53\":1},\"1\":{\"52\":1,\"53\":2,\"54\":3}}],[\"i\",{\"1\":{\"34\":7,\"137\":3,\"141\":3,\"142\":1}}],[\"isintersecting\",{\"1\":{\"196\":1}}],[\"isconcatspreadable属性等于的是一个\",{\"1\":{\"52\":1}}],[\"isconcatspreadable\",{\"1\":{\"52\":2}}],[\"is\",{\"1\":{\"26\":1,\"101\":1}}],[\"if=\",{\"1\":{\"196\":2}}],[\"if\",{\"1\":{\"22\":2,\"69\":2,\"126\":1,\"127\":1,\"175\":1,\"195\":1,\"196\":5}}],[\"infinite\",{\"1\":{\"196\":1}}],[\"intersectionobserver\",{\"1\":{\"196\":3}}],[\"intro\",{\"1\":{\"153\":8,\"157\":1}}],[\"input\",{\"1\":{\"167\":1,\"175\":3}}],[\"inner\",{\"1\":{\"179\":5}}],[\"innerhtml\",{\"0\":{\"153\":1},\"1\":{\"153\":5}}],[\"innertext\",{\"0\":{\"153\":1},\"1\":{\"153\":5}}],[\"in\",{\"1\":{\"112\":2}}],[\"indexof\",{\"1\":{\"75\":1}}],[\"index\",{\"1\":{\"61\":2,\"62\":2,\"63\":2,\"64\":2}}],[\"instanceof\",{\"1\":{\"52\":1}}],[\"in循环遍历\",{\"1\":{\"50\":1}}],[\"includes\",{\"1\":{\"75\":3}}],[\"include\",{\"1\":{\"18\":1,\"22\":1,\"25\":2}}],[\"inline\",{\"1\":{\"17\":1,\"29\":1}}],[\"2z\",{\"1\":{\"196\":1}}],[\"2s\",{\"1\":{\"196\":1}}],[\"2s283\",{\"1\":{\"196\":1}}],[\"2s11\",{\"1\":{\"196\":1}}],[\"2c0\",{\"1\":{\"196\":2}}],[\"2c22\",{\"1\":{\"196\":1}}],[\"2c74\",{\"1\":{\"196\":1}}],[\"269\",{\"1\":{\"196\":1}}],[\"26\",{\"1\":{\"196\":3}}],[\"22\",{\"1\":{\"196\":2}}],[\"221\",{\"1\":{\"196\":1}}],[\"2256\",{\"1\":{\"196\":2}}],[\"222\",{\"1\":{\"196\":1}}],[\"296\",{\"1\":{\"196\":4}}],[\"29\",{\"1\":{\"196\":1}}],[\"25\",{\"1\":{\"196\":3}}],[\"256\",{\"1\":{\"196\":1}}],[\"252\",{\"1\":{\"196\":2}}],[\"250\",{\"1\":{\"196\":1}}],[\"255\",{\"1\":{\"196\":5}}],[\"2544\",{\"1\":{\"196\":1}}],[\"254\",{\"1\":{\"196\":1}}],[\"23\",{\"1\":{\"196\":3}}],[\"2336\",{\"1\":{\"196\":2}}],[\"2336l154\",{\"1\":{\"196\":1}}],[\"2304\",{\"1\":{\"196\":1}}],[\"230\",{\"1\":{\"196\":1}}],[\"232\",{\"1\":{\"196\":1}}],[\"237\",{\"1\":{\"196\":1}}],[\"272\",{\"1\":{\"196\":1}}],[\"272c25\",{\"1\":{\"196\":1}}],[\"27\",{\"1\":{\"196\":1}}],[\"2704\",{\"1\":{\"196\":2}}],[\"245\",{\"1\":{\"196\":4}}],[\"2496\",{\"1\":{\"196\":2}}],[\"2496a183\",{\"1\":{\"196\":1}}],[\"2448\",{\"1\":{\"196\":2}}],[\"24\",{\"1\":{\"85\":3,\"116\":2,\"196\":3}}],[\"24岁\",{\"1\":{\"1\":1}}],[\"28\",{\"1\":{\"83\":1,\"196\":3}}],[\"215\",{\"1\":{\"196\":1}}],[\"2144\",{\"1\":{\"196\":1}}],[\"2128\",{\"1\":{\"196\":2}}],[\"2192\",{\"1\":{\"196\":2}}],[\"21\",{\"1\":{\"69\":2,\"116\":2}}],[\"2032\",{\"1\":{\"196\":1}}],[\"201\",{\"1\":{\"196\":1}}],[\"204\",{\"1\":{\"196\":1}}],[\"2096c0\",{\"1\":{\"196\":1}}],[\"2000\",{\"1\":{\"196\":2}}],[\"200\",{\"1\":{\"145\":1,\"196\":4}}],[\"200px\",{\"1\":{\"43\":1}}],[\"2023\",{\"1\":{\"83\":1}}],[\"2022\",{\"1\":{\"75\":1}}],[\"20\",{\"1\":{\"33\":1,\"63\":3,\"66\":2,\"69\":4,\"128\":2,\"196\":4}}],[\"20px\",{\"1\":{\"32\":1}}],[\"2\",{\"0\":{\"73\":1,\"196\":1},\"1\":{\"20\":3,\"32\":3,\"50\":4,\"51\":1,\"52\":3,\"59\":2,\"62\":1,\"64\":1,\"66\":1,\"67\":1,\"68\":4,\"69\":4,\"70\":1,\"75\":4,\"78\":1,\"92\":1,\"96\":1,\"99\":2,\"105\":1,\"116\":4,\"119\":1,\"128\":3,\"130\":1,\"132\":1,\"137\":1,\"139\":6,\"140\":1,\"141\":1,\"142\":1,\"144\":17,\"145\":1,\"147\":1,\"155\":1,\"158\":1,\"161\":1,\"164\":1,\"196\":24}}],[\"w3\",{\"1\":{\"196\":2}}],[\"www\",{\"1\":{\"180\":1,\"196\":2}}],[\"webp\",{\"1\":{\"155\":1}}],[\"web\",{\"0\":{\"151\":1},\"2\":{\"189\":1}}],[\"webkit\",{\"1\":{\"18\":1,\"30\":1}}],[\"window\",{\"1\":{\"127\":1,\"142\":5,\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\"with\",{\"1\":{\"119\":1}}],[\"width=\",{\"1\":{\"196\":2}}],[\"width\",{\"1\":{\"20\":2,\"22\":1,\"32\":2,\"34\":1,\"43\":1,\"155\":1,\"157\":3,\"196\":2}}],[\"writable\",{\"1\":{\"119\":1}}],[\"write\",{\"1\":{\"92\":1}}],[\"world\",{\"1\":{\"51\":2,\"76\":1,\"108\":1,\"126\":1,\"133\":2}}],[\"when\",{\"1\":{\"34\":3}}],[\"err\",{\"1\":{\"196\":2}}],[\"error\",{\"1\":{\"19\":1,\"31\":1,\"195\":5,\"196\":1}}],[\"e\",{\"1\":{\"175\":5,\"180\":2,\"181\":2}}],[\"ev\",{\"1\":{\"175\":1,\"179\":5}}],[\"event\",{\"1\":{\"175\":1,\"195\":2}}],[\"every\",{\"0\":{\"66\":1},\"1\":{\"60\":1,\"66\":2,\"70\":2}}],[\"enhance\",{\"1\":{\"197\":1}}],[\"entry\",{\"1\":{\"196\":2}}],[\"entries\",{\"1\":{\"196\":2}}],[\"enter\",{\"1\":{\"175\":1}}],[\"env\",{\"1\":{\"196\":1}}],[\"en\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"endswith\",{\"1\":{\"75\":1}}],[\"end\",{\"1\":{\"44\":1,\"68\":4}}],[\"end的li\",{\"1\":{\"44\":1}}],[\"export\",{\"1\":{\"197\":1}}],[\"exports\",{\"1\":{\"195\":1}}],[\"expected\",{\"1\":{\"68\":6,\"69\":2,\"80\":1}}],[\"extend\",{\"1\":{\"19\":2,\"31\":2}}],[\"elephant\",{\"1\":{\"68\":5}}],[\"ele\",{\"1\":{\"61\":3,\"64\":3}}],[\"else>\",{\"1\":{\"196\":1}}],[\"else\",{\"1\":{\"22\":1,\"196\":3}}],[\"es6创造了一种新的遍历命令for\",{\"1\":{\"54\":1}}],[\"es6\",{\"1\":{\"50\":1,\"52\":1}}],[\"es6+\",{\"0\":{\"48\":1},\"2\":{\"56\":1}}],[\"3872\",{\"1\":{\"196\":2}}],[\"3856\",{\"1\":{\"196\":2}}],[\"37\",{\"1\":{\"196\":2}}],[\"3728a35\",{\"1\":{\"196\":1}}],[\"331\",{\"1\":{\"196\":1}}],[\"3312c0\",{\"1\":{\"196\":1}}],[\"33\",{\"1\":{\"196\":2}}],[\"336\",{\"1\":{\"196\":1}}],[\"333333\",{\"1\":{\"24\":2}}],[\"333\",{\"1\":{\"19\":1,\"22\":2,\"31\":1,\"34\":2}}],[\"360deg\",{\"1\":{\"196\":1}}],[\"368\",{\"1\":{\"196\":1}}],[\"36\",{\"1\":{\"196\":15}}],[\"356\",{\"1\":{\"196\":1}}],[\"35\",{\"1\":{\"196\":21}}],[\"352a254\",{\"1\":{\"196\":1}}],[\"342\",{\"1\":{\"196\":1}}],[\"343\",{\"1\":{\"196\":1}}],[\"34\",{\"1\":{\"196\":1}}],[\"3498db\",{\"1\":{\"13\":1,\"28\":1}}],[\"31\",{\"1\":{\"196\":8}}],[\"3292\",{\"1\":{\"196\":1}}],[\"3291\",{\"1\":{\"196\":1}}],[\"3264c0\",{\"1\":{\"196\":1}}],[\"328\",{\"1\":{\"196\":2}}],[\"32\",{\"1\":{\"196\":5}}],[\"3952\",{\"1\":{\"196\":1}}],[\"39\",{\"1\":{\"196\":8}}],[\"3999\",{\"1\":{\"65\":2}}],[\"304c140\",{\"1\":{\"196\":1}}],[\"3008\",{\"1\":{\"196\":4}}],[\"300px\",{\"1\":{\"157\":1,\"196\":1}}],[\"30\",{\"1\":{\"63\":1,\"66\":1,\"69\":2}}],[\"3\",{\"0\":{\"74\":1,\"197\":1},\"1\":{\"22\":1,\"34\":1,\"52\":3,\"59\":1,\"67\":1,\"70\":1,\"75\":1,\"99\":1,\"116\":3,\"119\":3,\"130\":1,\"132\":1,\"139\":5,\"140\":1,\"141\":1,\"144\":15,\"145\":1,\"147\":1,\"164\":1,\"196\":16}}],[\"$\",{\"1\":{\"195\":2}}],[\"$text\",{\"1\":{\"24\":5,\"25\":10}}],[\"$theme\",{\"1\":{\"22\":3}}],[\"$background\",{\"1\":{\"24\":5,\"25\":10}}],[\"$i\",{\"1\":{\"22\":3}}],[\"$side\",{\"1\":{\"21\":2}}],[\"$radius\",{\"1\":{\"18\":4}}],[\"$padding\",{\"1\":{\"13\":2,\"20\":3}}],[\"$primary\",{\"1\":{\"13\":2,\"17\":1,\"24\":5,\"25\":10}}],[\"router\",{\"1\":{\"197\":1}}],[\"round\",{\"1\":{\"116\":3}}],[\"rotate\",{\"1\":{\"196\":2}}],[\"root\",{\"1\":{\"196\":1}}],[\"random\",{\"1\":{\"116\":2,\"117\":3,\"118\":3}}],[\"radius\",{\"1\":{\"18\":5,\"30\":9}}],[\"run\",{\"1\":{\"110\":4}}],[\"rich\",{\"1\":{\"42\":1,\"43\":1}}],[\"required\",{\"1\":{\"196\":1}}],[\"require\",{\"1\":{\"195\":2}}],[\"res\",{\"1\":{\"196\":4}}],[\"responsetype\",{\"1\":{\"195\":1}}],[\"response\",{\"1\":{\"195\":3}}],[\"resize\",{\"0\":{\"173\":1},\"1\":{\"173\":1}}],[\"results\",{\"1\":{\"73\":1,\"74\":2}}],[\"result\",{\"1\":{\"62\":2,\"141\":2}}],[\"render\",{\"1\":{\"145\":4}}],[\"re\",{\"1\":{\"132\":4}}],[\"ref=\",{\"1\":{\"196\":1}}],[\"ref\",{\"1\":{\"196\":6}}],[\"referenceerror\",{\"1\":{\"119\":1}}],[\"reflect\",{\"1\":{\"50\":1}}],[\"reverse\",{\"1\":{\"60\":1}}],[\"return后的数据不能换行写\",{\"1\":{\"105\":1}}],[\"return\",{\"1\":{\"52\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"67\":2,\"69\":4,\"70\":2,\"73\":1,\"74\":1,\"119\":2,\"130\":1,\"132\":1,\"141\":1,\"195\":3}}],[\"replace\",{\"1\":{\"52\":2,\"75\":1}}],[\"removeeventlistener\",{\"0\":{\"165\":1}}],[\"remove\",{\"1\":{\"26\":2,\"159\":2}}],[\"red颜色|blue颜色|pink颜色\",{\"1\":{\"64\":1}}],[\"red颜色blue颜色pink颜色\",{\"1\":{\"64\":1}}],[\"red颜色\",{\"1\":{\"64\":1}}],[\"reduce\",{\"0\":{\"67\":1},\"1\":{\"60\":1,\"67\":1}}],[\"red\",{\"1\":{\"19\":1,\"31\":1,\"44\":1,\"45\":2,\"61\":1,\"62\":2,\"64\":1,\"75\":1,\"96\":1,\"157\":1,\"164\":1,\"176\":1}}],[\"react\",{\"1\":{\"2\":1}}],[\"m510\",{\"1\":{\"196\":1}}],[\"m987\",{\"1\":{\"196\":1}}],[\"m0\",{\"1\":{\"196\":1}}],[\"m1147\",{\"1\":{\"196\":1}}],[\"m751\",{\"1\":{\"196\":1}}],[\"m829\",{\"1\":{\"196\":1}}],[\"md文件中的图片是语雀的\",{\"1\":{\"193\":1}}],[\"mdn链接\",{\"1\":{\"68\":1,\"69\":1}}],[\"m端事件\",{\"0\":{\"174\":1}}],[\"msg\",{\"1\":{\"145\":7}}],[\"m\",{\"1\":{\"85\":6,\"118\":1}}],[\"m=parseint\",{\"1\":{\"85\":1}}],[\"mounted\",{\"1\":{\"196\":1}}],[\"mouseleave\",{\"1\":{\"167\":1}}],[\"mouseenter\",{\"1\":{\"167\":1}}],[\"module\",{\"1\":{\"195\":1}}],[\"mother\",{\"1\":{\"145\":2}}],[\"move\",{\"1\":{\"110\":1}}],[\"months\",{\"1\":{\"69\":3}}],[\"moz\",{\"1\":{\"18\":1,\"30\":1}}],[\"min\",{\"1\":{\"116\":2,\"139\":1}}],[\"mi\",{\"1\":{\"65\":3}}],[\"mixin\",{\"1\":{\"18\":1,\"22\":1,\"25\":2}}],[\"methods\",{\"1\":{\"51\":3}}],[\"message\",{\"1\":{\"19\":3,\"31\":3,\"195\":3,\"196\":1}}],[\"mydata\",{\"1\":{\"145\":4}}],[\"mysymbol\",{\"1\":{\"51\":4}}],[\"myobject\",{\"1\":{\"51\":3,\"52\":4}}],[\"max\",{\"1\":{\"116\":2,\"139\":2,\"195\":1,\"196\":1}}],[\"math\",{\"0\":{\"114\":1},\"1\":{\"114\":1,\"115\":2,\"116\":18,\"117\":2,\"118\":6,\"119\":1,\"139\":3}}],[\"match\",{\"1\":{\"52\":2,\"75\":1}}],[\"march\",{\"1\":{\"69\":2}}],[\"margin\",{\"1\":{\"17\":1,\"20\":1,\"21\":1,\"29\":1,\"32\":1,\"184\":1}}],[\"map可以配合async和await使用\",{\"1\":{\"73\":1}}],[\"map重点在于有返回值\",{\"1\":{\"61\":1}}],[\"map方法\",{\"1\":{\"61\":1,\"64\":1,\"67\":1}}],[\"map\",{\"0\":{\"61\":1},\"1\":{\"54\":1,\"60\":1,\"61\":2,\"64\":1,\"73\":1,\"74\":2}}],[\"mailto\",{\"1\":{\"39\":1}}],[\"d=\",{\"1\":{\"196\":5}}],[\"d=parseint\",{\"1\":{\"85\":1}}],[\"dblclick\",{\"1\":{\"167\":1}}],[\"d4\",{\"1\":{\"144\":1}}],[\"d3\",{\"1\":{\"144\":2}}],[\"d2\",{\"1\":{\"144\":2}}],[\"d1\",{\"1\":{\"144\":2}}],[\"d\",{\"1\":{\"128\":4,\"144\":3}}],[\"default\",{\"1\":{\"197\":1}}],[\"defineclientconfig\",{\"1\":{\"197\":2}}],[\"defineprops\",{\"1\":{\"196\":1}}],[\"defineproperty\",{\"1\":{\"119\":1}}],[\"dev\",{\"1\":{\"196\":1}}],[\"delete\",{\"1\":{\"119\":1}}],[\"dec\",{\"1\":{\"69\":2}}],[\"decoration\",{\"1\":{\"17\":1,\"29\":1}}],[\"dataset\",{\"0\":{\"161\":1},\"1\":{\"161\":1,\"181\":1}}],[\"data数据\",{\"1\":{\"145\":1}}],[\"data值\",{\"1\":{\"145\":1}}],[\"data\",{\"0\":{\"161\":1},\"1\":{\"82\":1,\"145\":10,\"161\":1,\"195\":2,\"196\":2}}],[\"date\",{\"0\":{\"83\":1,\"84\":1},\"1\":{\"82\":2,\"83\":3,\"84\":2}}],[\"dark\",{\"1\":{\"22\":2,\"24\":3,\"25\":8,\"26\":2,\"34\":3}}],[\"duck\",{\"1\":{\"68\":7}}],[\"domcontentloaded\",{\"1\":{\"171\":1}}],[\"dom对象\",{\"1\":{\"160\":2}}],[\"dom\",{\"1\":{\"93\":2,\"153\":1,\"155\":1,\"157\":1,\"164\":6,\"165\":1}}],[\"doctype\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"document\",{\"1\":{\"26\":4,\"92\":1,\"93\":1,\"153\":2,\"155\":1,\"157\":1,\"159\":2,\"161\":1,\"164\":2,\"175\":1,\"176\":1,\"179\":3,\"180\":1}}],[\"down\",{\"1\":{\"51\":2}}],[\"down两个属性\",{\"1\":{\"51\":1}}],[\"disabled\",{\"1\":{\"161\":1}}],[\"display\",{\"1\":{\"17\":1,\"29\":1,\"196\":1}}],[\"direction\",{\"1\":{\"196\":1}}],[\"dir\",{\"1\":{\"93\":2}}],[\"div中的子代a元素\",{\"1\":{\"45\":1}}],[\"div>a\",{\"1\":{\"45\":1}}],[\"div>\",{\"1\":{\"26\":1,\"161\":1,\"179\":3,\"196\":1}}],[\"div\",{\"1\":{\"16\":1,\"93\":3,\"159\":1,\"161\":3,\"196\":1}}],[\"t=\",{\"1\":{\"196\":2}}],[\"timeout\",{\"1\":{\"196\":1}}],[\"title等\",{\"1\":{\"161\":1}}],[\"title\",{\"1\":{\"145\":3}}],[\"title>\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"tabindex=\",{\"1\":{\"196\":1}}],[\"tagname\",{\"1\":{\"181\":1}}],[\"targetelement\",{\"1\":{\"196\":8}}],[\"target\",{\"1\":{\"181\":2}}],[\"t++\",{\"1\":{\"126\":1}}],[\"t\",{\"1\":{\"126\":6}}],[\"transform\",{\"1\":{\"196\":2}}],[\"try\",{\"1\":{\"195\":1}}],[\"trim\",{\"0\":{\"76\":1},\"1\":{\"76\":1}}],[\"true\",{\"1\":{\"50\":1,\"60\":2,\"66\":2,\"70\":3,\"75\":2,\"126\":1,\"127\":1,\"178\":1,\"196\":1}}],[\"touchend\",{\"1\":{\"174\":1}}],[\"touchmove\",{\"1\":{\"174\":1}}],[\"touchstart\",{\"1\":{\"174\":1}}],[\"touppercase\",{\"1\":{\"75\":1}}],[\"toggle\",{\"1\":{\"159\":1}}],[\"tofixed\",{\"0\":{\"78\":1},\"1\":{\"78\":5}}],[\"tolowercase\",{\"1\":{\"75\":1}}],[\"tostring\",{\"1\":{\"195\":1}}],[\"tostringtag\",{\"1\":{\"52\":1}}],[\"tosorted\",{\"1\":{\"69\":1}}],[\"total\",{\"1\":{\"67\":2}}],[\"toprimitive\",{\"1\":{\"52\":1}}],[\"type\",{\"1\":{\"164\":2,\"195\":2,\"196\":1}}],[\"typeerror\",{\"1\":{\"119\":1}}],[\"typedarray\",{\"1\":{\"54\":1}}],[\"typeof\",{\"1\":{\"50\":1,\"111\":1}}],[\"typescript\",{\"1\":{\"2\":1}}],[\"template>\",{\"1\":{\"196\":3}}],[\"tel\",{\"1\":{\"39\":1}}],[\"text\",{\"1\":{\"17\":1,\"29\":1,\"164\":4,\"195\":1}}],[\"threshold\",{\"1\":{\"196\":1}}],[\"through\",{\"1\":{\"22\":1}}],[\"then\",{\"1\":{\"196\":1}}],[\"the\",{\"1\":{\"26\":1}}],[\"theme\",{\"1\":{\"22\":3,\"25\":7,\"26\":6,\"34\":10}}],[\"this指向事件绑定的事件源\",{\"1\":{\"176\":1}}],[\"this指向window\",{\"1\":{\"176\":1}}],[\"this\",{\"0\":{\"176\":1},\"1\":{\"26\":1,\"119\":1,\"142\":10,\"176\":2}}],[\"auto\",{\"1\":{\"196\":1}}],[\"axios\",{\"1\":{\"195\":5,\"196\":3}}],[\"active\",{\"1\":{\"159\":1}}],[\"apis\",{\"0\":{\"151\":1},\"2\":{\"189\":1}}],[\"app\",{\"1\":{\"2\":1,\"197\":2}}],[\"a4=0\",{\"1\":{\"144\":1}}],[\"a4\",{\"1\":{\"144\":3}}],[\"a3=0\",{\"1\":{\"144\":1}}],[\"a3\",{\"1\":{\"144\":3}}],[\"a2输出两个对象\",{\"1\":{\"145\":1}}],[\"a2=\",{\"1\":{\"145\":1}}],[\"a2=0\",{\"1\":{\"144\":1}}],[\"a2\",{\"1\":{\"144\":3}}],[\"a1=\",{\"1\":{\"145\":1}}],[\"a1=0\",{\"1\":{\"144\":1}}],[\"a1\",{\"1\":{\"144\":3,\"145\":1}}],[\"align\",{\"1\":{\"196\":1}}],[\"alt=\",{\"1\":{\"196\":1}}],[\"alt\",{\"1\":{\"155\":1}}],[\"alert\",{\"1\":{\"92\":1}}],[\"all来实现异步过滤\",{\"1\":{\"74\":1}}],[\"all\",{\"1\":{\"73\":3,\"74\":1}}],[\"asynccondition\",{\"1\":{\"74\":1}}],[\"asyncfunction\",{\"1\":{\"73\":1}}],[\"async\",{\"1\":{\"73\":1,\"74\":1,\"195\":1}}],[\"await\",{\"1\":{\"73\":2,\"74\":2,\"195\":1}}],[\"a<b\",{\"1\":{\"69\":1}}],[\"animation\",{\"1\":{\"196\":1}}],[\"animals\",{\"1\":{\"68\":7}}],[\"andy\",{\"1\":{\"142\":1}}],[\"ant\",{\"1\":{\"68\":2}}],[\"arguments\",{\"0\":{\"137\":1},\"1\":{\"54\":1,\"137\":3}}],[\"arr逗号隔开\",{\"1\":{\"139\":1}}],[\"arr是无逗号的\",{\"1\":{\"139\":1}}],[\"arr1\",{\"1\":{\"66\":2,\"75\":2,\"139\":4}}],[\"arraybuffer\",{\"1\":{\"195\":1}}],[\"array1\",{\"1\":{\"69\":3}}],[\"array对象方法\",{\"0\":{\"58\":1}}],[\"array\",{\"1\":{\"54\":1,\"68\":6,\"69\":2,\"70\":3,\"73\":1,\"74\":1,\"80\":1}}],[\"arr2\",{\"1\":{\"52\":4,\"139\":2}}],[\"arr\",{\"0\":{\"138\":1},\"1\":{\"52\":3,\"59\":12,\"61\":2,\"62\":2,\"63\":3,\"64\":2,\"65\":3,\"67\":2,\"69\":6,\"75\":2,\"96\":5,\"99\":12,\"117\":3,\"130\":2,\"139\":4,\"141\":3,\"144\":2,\"145\":1}}],[\"age=3600\",{\"1\":{\"195\":1}}],[\"age3\",{\"1\":{\"51\":1}}],[\"age\",{\"1\":{\"51\":2,\"109\":3,\"110\":3,\"126\":7,\"145\":19,\"147\":1}}],[\"a>b\",{\"1\":{\"69\":1}}],[\"a>\",{\"1\":{\"39\":3,\"180\":1}}],[\"addevenntlistener可绑定多次\",{\"1\":{\"164\":1}}],[\"addeventlistener\",{\"0\":{\"164\":1},\"1\":{\"164\":7,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"175\":1,\"176\":1,\"178\":2,\"179\":3,\"180\":1}}],[\"add是个方法\",{\"1\":{\"159\":1}}],[\"addsquares\",{\"1\":{\"101\":1}}],[\"add\",{\"1\":{\"26\":2,\"159\":1}}],[\"a\",{\"1\":{\"17\":1,\"24\":1,\"25\":3,\"29\":1,\"39\":2,\"44\":1,\"69\":4,\"80\":2,\"106\":2,\"119\":4,\"128\":4,\"130\":2,\"132\":2,\"144\":5,\"145\":5,\"180\":3}}],[\"svg>\",{\"1\":{\"196\":2}}],[\"svg\",{\"1\":{\"196\":4}}],[\"src=\",{\"1\":{\"196\":1,\"198\":1}}],[\"src\",{\"1\":{\"155\":1,\"196\":2}}],[\"sring对象方法\",{\"0\":{\"75\":1}}],[\"sqrt\",{\"1\":{\"116\":2}}],[\"sitedata\",{\"1\":{\"197\":1}}],[\"sister\",{\"1\":{\"145\":2}}],[\"singing\",{\"1\":{\"110\":4}}],[\"size\",{\"1\":{\"43\":1}}],[\"s\",{\"1\":{\"85\":6,\"125\":4,\"137\":3}}],[\"s=parseint\",{\"1\":{\"85\":1}}],[\"slice\",{\"1\":{\"68\":10,\"75\":1}}],[\"sort\",{\"1\":{\"60\":1,\"69\":7}}],[\"somestring\",{\"1\":{\"80\":1}}],[\"some和every\",{\"0\":{\"70\":1}}],[\"some\",{\"1\":{\"60\":1,\"70\":3}}],[\"solid\",{\"1\":{\"19\":1,\"31\":1}}],[\"script\",{\"0\":{\"202\":1}}],[\"script>\",{\"1\":{\"59\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"67\":1,\"75\":1,\"78\":1,\"92\":1,\"99\":1,\"108\":1,\"109\":3,\"110\":3,\"125\":1,\"126\":2,\"127\":2,\"128\":2,\"132\":1,\"133\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":2,\"147\":1,\"153\":2,\"155\":1,\"161\":1,\"164\":1,\"175\":1,\"176\":1,\"179\":1,\"180\":1,\"196\":1}}],[\"scroll\",{\"0\":{\"172\":1},\"1\":{\"172\":1}}],[\"scoped>\",{\"1\":{\"196\":1}}],[\"scope\",{\"1\":{\"123\":1}}],[\"scss\",{\"0\":{\"11\":1,\"12\":1},\"1\":{\"196\":1},\"2\":{\"37\":1}}],[\"shift\",{\"1\":{\"59\":3,\"99\":3}}],[\"selected\",{\"1\":{\"161\":1}}],[\"setup>\",{\"1\":{\"196\":1}}],[\"set\",{\"1\":{\"54\":1,\"101\":1}}],[\"search\",{\"1\":{\"52\":2}}],[\"stoppropagation\",{\"0\":{\"179\":1},\"1\":{\"179\":3}}],[\"str2\",{\"1\":{\"133\":3}}],[\"strict\",{\"1\":{\"119\":9}}],[\"string\",{\"1\":{\"54\":1,\"196\":1}}],[\"str1\",{\"1\":{\"75\":2,\"133\":4}}],[\"str\",{\"1\":{\"75\":8,\"76\":2,\"108\":1,\"126\":4,\"133\":1}}],[\"status\",{\"1\":{\"195\":2,\"196\":8}}],[\"stature\",{\"1\":{\"109\":4}}],[\"static\",{\"1\":{\"52\":1}}],[\"startswith\",{\"1\":{\"75\":3}}],[\"start\",{\"1\":{\"68\":5}}],[\"style>\",{\"1\":{\"196\":1}}],[\"style\",{\"1\":{\"17\":1,\"29\":1,\"157\":9,\"164\":1,\"176\":1}}],[\"spin\",{\"1\":{\"196\":2}}],[\"span>\",{\"1\":{\"196\":2}}],[\"splice\",{\"1\":{\"59\":3,\"99\":3}}],[\"split\",{\"1\":{\"52\":2,\"75\":4}}],[\"species\",{\"1\":{\"52\":1}}],[\"syntaxerror\",{\"1\":{\"119\":4}}],[\"syname\",{\"1\":{\"51\":1}}],[\"symbol内置值\",{\"0\":{\"52\":1}}],[\"symbol定义的对象属性不能使用for\",{\"1\":{\"50\":1}}],[\"symbol值不能与其他数据进行运算\",{\"1\":{\"50\":1}}],[\"symbol的值是唯一的\",{\"1\":{\"50\":1}}],[\"symbol特点\",{\"1\":{\"50\":1}}],[\"symbol基本使用\",{\"0\":{\"50\":1}}],[\"symbol\",{\"0\":{\"49\":1},\"1\":{\"50\":8,\"51\":9,\"52\":14,\"54\":1}}],[\"sayhi\",{\"1\":{\"127\":2,\"142\":6}}],[\"saysymbol\",{\"1\":{\"51\":3}}],[\"say\",{\"1\":{\"51\":8}}],[\"sass\",{\"0\":{\"23\":1},\"1\":{\"24\":1}}],[\"s3\",{\"1\":{\"50\":4}}],[\"s2\",{\"1\":{\"50\":4}}],[\"s1\",{\"1\":{\"50\":3}}],[\"sum\",{\"1\":{\"119\":1,\"137\":3,\"141\":3}}],[\"submit\",{\"1\":{\"167\":1}}],[\"substring\",{\"1\":{\"75\":3}}],[\"subject\",{\"1\":{\"44\":2}}],[\"success\",{\"1\":{\"19\":1,\"31\":1,\"196\":1}}],[\"skyblue\",{\"1\":{\"43\":1}}],[\"sms\",{\"1\":{\"39\":1}}],[\"lazy\",{\"1\":{\"196\":1}}],[\"lang=\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3,\"196\":1}}],[\"l2\",{\"1\":{\"164\":1,\"165\":1}}],[\"l0\",{\"1\":{\"164\":1,\"165\":1}}],[\"local\",{\"0\":{\"124\":1}}],[\"loadimage\",{\"1\":{\"196\":2}}],[\"loading=\",{\"1\":{\"196\":1}}],[\"loading\",{\"1\":{\"196\":3}}],[\"load\",{\"1\":{\"101\":1,\"170\":1}}],[\"log\",{\"1\":{\"50\":3,\"51\":6,\"52\":5,\"54\":2,\"59\":5,\"61\":3,\"62\":3,\"63\":3,\"64\":6,\"65\":4,\"66\":1,\"67\":3,\"68\":6,\"69\":4,\"70\":2,\"75\":5,\"76\":1,\"78\":3,\"80\":1,\"85\":1,\"93\":1,\"96\":2,\"99\":5,\"103\":1,\"109\":4,\"110\":5,\"113\":4,\"115\":1,\"117\":1,\"125\":2,\"126\":6,\"127\":2,\"128\":5,\"132\":4,\"133\":2,\"137\":2,\"138\":2,\"139\":4,\"140\":7,\"141\":1,\"142\":7,\"144\":24,\"145\":6,\"161\":1,\"164\":1,\"175\":4,\"176\":1,\"179\":3,\"196\":7}}],[\"loop\",{\"1\":{\"34\":3}}],[\"length\",{\"1\":{\"59\":1,\"75\":1,\"99\":2,\"117\":1,\"137\":1,\"141\":1}}],[\"let必须先赋值\",{\"1\":{\"95\":1}}],[\"let不能重复声明\",{\"1\":{\"95\":1}}],[\"let定义的变量只对它所在的区域内有效\",{\"1\":{\"95\":1}}],[\"let定义的变量是块级的变量\",{\"1\":{\"95\":1}}],[\"let和var的区别\",{\"0\":{\"95\":1}}],[\"let\",{\"0\":{\"97\":1},\"1\":{\"50\":5,\"51\":8,\"52\":1,\"54\":2,\"59\":1,\"76\":1,\"85\":3,\"93\":1,\"99\":1,\"103\":1,\"108\":3,\"109\":3,\"110\":3,\"112\":2,\"117\":2,\"126\":7,\"127\":2,\"128\":10,\"130\":3,\"132\":2,\"133\":1,\"137\":2,\"141\":2,\"142\":1,\"144\":11,\"145\":7,\"159\":2,\"161\":1,\"164\":1}}],[\"left\",{\"1\":{\"21\":1}}],[\"lessc\",{\"1\":{\"35\":1}}],[\"less\",{\"0\":{\"11\":1},\"2\":{\"37\":1}}],[\"linear\",{\"1\":{\"196\":1}}],[\"lion\",{\"1\":{\"155\":1}}],[\"lighten\",{\"1\":{\"33\":3}}],[\"light\",{\"1\":{\"22\":1,\"24\":6,\"25\":8,\"26\":4,\"34\":3}}],[\"li\",{\"1\":{\"17\":1,\"29\":1,\"44\":4}}],[\"listener\",{\"1\":{\"164\":2}}],[\"list\",{\"1\":{\"17\":1,\"29\":1}}],[\"usecapture\",{\"1\":{\"164\":1}}],[\"use\",{\"1\":{\"119\":9}}],[\"user\",{\"1\":{\"108\":2,\"109\":3,\"110\":4,\"126\":4,\"145\":2}}],[\"utf\",{\"1\":{\"69\":1,\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"unobserve\",{\"1\":{\"196\":2}}],[\"undefind\",{\"1\":{\"144\":1}}],[\"undefinedworld\",{\"1\":{\"133\":1}}],[\"undefined\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"69\":2,\"107\":1,\"119\":1,\"144\":2,\"145\":2}}],[\"uname\",{\"1\":{\"112\":4,\"140\":3,\"142\":2,\"145\":2,\"147\":2}}],[\"unshit\",{\"1\":{\"99\":2}}],[\"unshift\",{\"1\":{\"59\":3,\"99\":1}}],[\"unscopables\",{\"1\":{\"52\":1}}],[\"unicloud\",{\"0\":{\"195\":1},\"1\":{\"194\":1},\"2\":{\"200\":1}}],[\"unicode\",{\"1\":{\"69\":1}}],[\"uni\",{\"1\":{\"2\":1}}],[\"up\",{\"1\":{\"51\":4}}],[\"url\",{\"1\":{\"38\":4,\"195\":2}}],[\"ul\",{\"1\":{\"17\":1,\"29\":1,\"44\":2}}],[\"n\",{\"1\":{\"118\":2}}],[\"nul\",{\"1\":{\"130\":1}}],[\"null\",{\"0\":{\"111\":1},\"1\":{\"74\":2,\"111\":1,\"196\":3}}],[\"num1\",{\"1\":{\"78\":2}}],[\"num\",{\"1\":{\"78\":3,\"108\":1}}],[\"number\",{\"1\":{\"78\":1}}],[\"number对象方法\",{\"0\":{\"77\":1}}],[\"namesymbol\",{\"1\":{\"51\":2}}],[\"name\",{\"1\":{\"51\":3,\"65\":6,\"109\":6,\"110\":3,\"126\":2,\"127\":3,\"142\":1,\"145\":19,\"147\":1}}],[\"nav\",{\"1\":{\"17\":1,\"29\":1}}],[\"newarr\",{\"1\":{\"61\":2,\"63\":3,\"64\":5}}],[\"new\",{\"1\":{\"33\":2,\"82\":1,\"83\":1,\"147\":2,\"148\":1,\"196\":1}}],[\"not\",{\"1\":{\"201\":1}}],[\"no\",{\"1\":{\"196\":2}}],[\"now\",{\"0\":{\"84\":1},\"1\":{\"84\":1}}],[\"none\",{\"1\":{\"17\":2,\"29\":2}}],[\"nodejs\",{\"1\":{\"59\":1,\"99\":1}}],[\"nodelist\",{\"1\":{\"54\":1}}],[\"node\",{\"1\":{\"2\":1}}],[\"以前this的指向\",{\"1\":{\"142\":1}}],[\"以弹窗形式提示用户输入姓名\",{\"1\":{\"92\":1}}],[\"以下代码为选中所有\",{\"1\":{\"16\":1}}],[\"以上代码标记部分会被编译成\",{\"1\":{\"15\":1}}],[\"><\",{\"1\":{\"179\":1,\"196\":5}}],[\">点击改变文字颜色<\",{\"1\":{\"164\":1}}],[\">为\",{\"1\":{\"164\":1}}],[\">=\",{\"1\":{\"63\":2,\"66\":1}}],[\">短信联系<\",{\"1\":{\"39\":1}}],[\">邮件联系<\",{\"1\":{\"39\":1}}],[\">电话联系<\",{\"1\":{\"39\":1}}],[\">\",{\"0\":{\"16\":1},\"1\":{\"16\":1,\"26\":2,\"39\":3,\"70\":2,\"92\":2,\"108\":2,\"109\":6,\"110\":6,\"161\":1,\"179\":2,\"180\":1,\"196\":5,\"198\":1}}],[\"beforeunmount\",{\"1\":{\"196\":1}}],[\"beauty\",{\"1\":{\"42\":2,\"43\":1}}],[\"binary\",{\"1\":{\"195\":1}}],[\"bison\",{\"1\":{\"68\":3}}],[\"buffer\",{\"1\":{\"195\":1}}],[\"button>\",{\"1\":{\"164\":1}}],[\"button\",{\"1\":{\"13\":1,\"28\":1,\"33\":1,\"164\":1,\"176\":1}}],[\"btn\",{\"1\":{\"164\":4,\"176\":2}}],[\"b3\",{\"1\":{\"144\":2}}],[\"b2\",{\"1\":{\"144\":2}}],[\"b1\",{\"1\":{\"144\":2}}],[\"base64data\",{\"1\":{\"195\":2}}],[\"base64\",{\"1\":{\"194\":1,\"195\":4}}],[\"baseurl\",{\"1\":{\"138\":2}}],[\"baidu\",{\"1\":{\"138\":2,\"180\":1}}],[\"backgroundcolor\",{\"1\":{\"157\":2,\"176\":1}}],[\"background\",{\"1\":{\"13\":1,\"22\":2,\"24\":1,\"25\":3,\"28\":1,\"34\":2,\"43\":1,\"157\":1,\"196\":1}}],[\"b\",{\"1\":{\"69\":4,\"80\":2,\"106\":1,\"128\":4,\"144\":5,\"145\":5}}],[\"blur\",{\"1\":{\"167\":1}}],[\"blue颜色\",{\"1\":{\"64\":1}}],[\"blue\",{\"1\":{\"42\":1,\"44\":2,\"61\":1,\"64\":1,\"96\":1}}],[\"block\",{\"1\":{\"17\":1,\"29\":1}}],[\"body>\",{\"1\":{\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"67\":1,\"92\":1,\"108\":1,\"109\":3,\"110\":3,\"132\":1,\"140\":1,\"147\":1,\"164\":1,\"179\":1,\"180\":1}}],[\"body\",{\"1\":{\"24\":1,\"25\":3,\"26\":4,\"195\":1,\"196\":1}}],[\"border\",{\"1\":{\"18\":5,\"19\":3,\"30\":5,\"31\":3,\"162\":1}}],[\"box\",{\"1\":{\"15\":2,\"16\":2,\"18\":1,\"21\":1,\"30\":1,\"157\":7,\"159\":6}}],[\"174\",{\"1\":{\"196\":5}}],[\"1739453552440\",{\"1\":{\"196\":1}}],[\"1739451438290\",{\"1\":{\"196\":1}}],[\"152\",{\"1\":{\"196\":1}}],[\"151\",{\"1\":{\"196\":1}}],[\"154\",{\"1\":{\"196\":2}}],[\"1504\",{\"1\":{\"196\":1}}],[\"15\",{\"1\":{\"196\":1}}],[\"158\",{\"1\":{\"196\":1}}],[\"1536\",{\"1\":{\"196\":2}}],[\"116\",{\"1\":{\"196\":1}}],[\"1168h749\",{\"1\":{\"196\":1}}],[\"1168h71\",{\"1\":{\"196\":1}}],[\"1168v853\",{\"1\":{\"196\":1}}],[\"1168z\",{\"1\":{\"196\":2}}],[\"1168\",{\"1\":{\"196\":4}}],[\"112\",{\"1\":{\"196\":1}}],[\"11\",{\"1\":{\"196\":3}}],[\"113\",{\"1\":{\"196\":3}}],[\"119\",{\"1\":{\"196\":4}}],[\"111\",{\"1\":{\"65\":1,\"196\":3}}],[\"121\",{\"1\":{\"196\":1}}],[\"1248a107\",{\"1\":{\"196\":1}}],[\"122\",{\"1\":{\"196\":3}}],[\"12\",{\"1\":{\"196\":3}}],[\"1280\",{\"1\":{\"196\":1}}],[\"123\",{\"1\":{\"140\":2}}],[\"1936\",{\"1\":{\"196\":2}}],[\"19\",{\"1\":{\"116\":1,\"145\":1,\"196\":8}}],[\"199\",{\"1\":{\"108\":1}}],[\"1999\",{\"1\":{\"65\":1}}],[\"138\",{\"1\":{\"196\":3}}],[\"132\",{\"1\":{\"196\":1}}],[\"1344c7\",{\"1\":{\"196\":1}}],[\"1376\",{\"1\":{\"196\":1}}],[\"136\",{\"1\":{\"196\":1}}],[\"13\",{\"1\":{\"116\":1,\"196\":3}}],[\"180\",{\"1\":{\"196\":4}}],[\"181\",{\"1\":{\"196\":2}}],[\"183\",{\"1\":{\"196\":6}}],[\"185\",{\"1\":{\"109\":4}}],[\"18\",{\"1\":{\"109\":3,\"110\":3,\"116\":1,\"125\":1,\"126\":2,\"145\":8,\"147\":1,\"196\":3}}],[\"140\",{\"1\":{\"196\":1}}],[\"144\",{\"1\":{\"196\":1}}],[\"142\",{\"1\":{\"196\":5}}],[\"1472\",{\"1\":{\"196\":7}}],[\"1456\",{\"1\":{\"196\":1}}],[\"143\",{\"1\":{\"196\":1}}],[\"14\",{\"1\":{\"83\":1,\"119\":3,\"196\":4}}],[\"14分创建博客\",{\"1\":{\"0\":1}}],[\"1+2+3\",{\"1\":{\"67\":1}}],[\"167\",{\"1\":{\"196\":1}}],[\"163\",{\"1\":{\"196\":2}}],[\"161\",{\"1\":{\"196\":1}}],[\"1653\",{\"1\":{\"196\":1}}],[\"1652\",{\"1\":{\"196\":1}}],[\"1651\",{\"1\":{\"196\":1}}],[\"1650\",{\"1\":{\"196\":1}}],[\"1649\",{\"1\":{\"196\":1}}],[\"1669\",{\"1\":{\"145\":1}}],[\"16\",{\"1\":{\"67\":1,\"69\":1,\"116\":1,\"196\":2}}],[\"16px\",{\"1\":{\"13\":1,\"28\":1}}],[\"1\",{\"0\":{\"72\":1,\"195\":1},\"1\":{\"22\":1,\"34\":2,\"51\":1,\"52\":3,\"59\":2,\"61\":1,\"62\":1,\"64\":1,\"65\":1,\"67\":2,\"68\":2,\"69\":9,\"70\":1,\"75\":2,\"78\":1,\"92\":1,\"96\":1,\"99\":2,\"105\":1,\"116\":3,\"118\":3,\"126\":4,\"128\":3,\"130\":1,\"132\":4,\"137\":1,\"139\":7,\"140\":5,\"141\":1,\"144\":17,\"145\":3,\"147\":1,\"155\":1,\"158\":1,\"159\":1,\"161\":2,\"164\":1,\"196\":36}}],[\"101\",{\"1\":{\"196\":9}}],[\"107\",{\"1\":{\"196\":3}}],[\"1056\",{\"1\":{\"196\":1}}],[\"104l\",{\"1\":{\"196\":1}}],[\"104\",{\"1\":{\"196\":1}}],[\"1024\",{\"1\":{\"196\":5}}],[\"10为初始值\",{\"1\":{\"67\":1}}],[\"10\",{\"1\":{\"63\":1,\"66\":1,\"67\":1,\"69\":4,\"78\":2,\"83\":1,\"85\":3,\"116\":1,\"118\":1,\"125\":1,\"127\":1,\"128\":2,\"137\":1,\"142\":1,\"196\":3}}],[\"1000\",{\"1\":{\"196\":1}}],[\"10000\",{\"1\":{\"181\":1}}],[\"100000\",{\"1\":{\"69\":2}}],[\"10086\",{\"1\":{\"39\":1}}],[\"10010\",{\"1\":{\"39\":2}}],[\"100\",{\"1\":{\"20\":2,\"22\":1,\"32\":2,\"34\":1,\"196\":3}}],[\"10px\",{\"1\":{\"18\":1,\"19\":1,\"21\":1,\"30\":1,\"31\":1,\"196\":1}}],[\"1px\",{\"1\":{\"19\":1,\"31\":1}}],[\"center\",{\"1\":{\"196\":2}}],[\"ceil\",{\"1\":{\"116\":2}}],[\"createobserver\",{\"1\":{\"196\":2}}],[\"cn\",{\"1\":{\"196\":1}}],[\"cdn\",{\"1\":{\"193\":1}}],[\"c4\",{\"1\":{\"144\":1}}],[\"c3\",{\"1\":{\"144\":4}}],[\"c2\",{\"1\":{\"144\":4}}],[\"c1\",{\"1\":{\"144\":4}}],[\"client\",{\"1\":{\"197\":1}}],[\"click\",{\"1\":{\"164\":2,\"167\":1,\"176\":1,\"179\":3,\"180\":1}}],[\"cloudbasefunction\",{\"1\":{\"196\":1}}],[\"closure\",{\"0\":{\"132\":1}}],[\"classname是使用新值换旧值\",{\"1\":{\"158\":1}}],[\"class\",{\"1\":{\"52\":1}}],[\"classlist\",{\"0\":{\"159\":1},\"1\":{\"26\":4,\"159\":4}}],[\"class=\",{\"1\":{\"26\":1,\"179\":3,\"196\":3}}],[\"c\",{\"1\":{\"80\":2,\"119\":2,\"128\":3,\"144\":8}}],[\"checked\",{\"1\":{\"161\":1}}],[\"charset=\",{\"1\":{\"92\":1,\"108\":1,\"109\":3,\"110\":3}}],[\"charat\",{\"1\":{\"75\":1}}],[\"child\",{\"1\":{\"15\":2,\"179\":5}}],[\"catch\",{\"1\":{\"195\":1,\"196\":1}}],[\"cache\",{\"1\":{\"195\":1}}],[\"can\",{\"1\":{\"101\":1}}],[\"camel\",{\"1\":{\"68\":6}}],[\"calc\",{\"1\":{\"20\":1,\"32\":1}}],[\"current\",{\"1\":{\"67\":4}}],[\"cos\",{\"1\":{\"119\":1}}],[\"count++\",{\"1\":{\"132\":3}}],[\"counter\",{\"1\":{\"125\":4}}],[\"count\",{\"1\":{\"85\":3,\"132\":5,\"142\":2,\"145\":3}}],[\"code\",{\"1\":{\"59\":1,\"99\":1,\"145\":1}}],[\"config\",{\"1\":{\"138\":2}}],[\"const的使用\",{\"0\":{\"97\":1}}],[\"const声明常量后值不可修改\",{\"1\":{\"96\":1}}],[\"const\",{\"0\":{\"96\":1},\"1\":{\"52\":2,\"54\":1,\"61\":2,\"62\":2,\"63\":3,\"64\":2,\"65\":3,\"66\":2,\"67\":2,\"68\":1,\"69\":2,\"70\":1,\"73\":1,\"74\":2,\"75\":7,\"78\":2,\"80\":1,\"82\":1,\"96\":1,\"125\":1,\"126\":6,\"127\":2,\"132\":4,\"139\":4,\"140\":7,\"141\":2,\"142\":5,\"145\":8,\"147\":3,\"153\":2,\"155\":1,\"157\":1,\"164\":1,\"175\":1,\"176\":1,\"179\":3,\"180\":1,\"195\":6,\"196\":7}}],[\"consoloe\",{\"1\":{\"51\":1}}],[\"console其实就是\",{\"1\":{\"113\":1}}],[\"console\",{\"1\":{\"50\":3,\"51\":5,\"52\":5,\"54\":2,\"59\":5,\"61\":3,\"62\":3,\"63\":3,\"64\":6,\"65\":4,\"66\":1,\"67\":3,\"68\":6,\"69\":4,\"70\":2,\"75\":5,\"76\":1,\"78\":3,\"80\":1,\"85\":1,\"93\":3,\"96\":2,\"99\":5,\"103\":1,\"109\":4,\"110\":5,\"113\":3,\"115\":1,\"117\":1,\"125\":2,\"126\":6,\"127\":2,\"128\":5,\"132\":4,\"133\":2,\"137\":2,\"138\":2,\"139\":4,\"140\":7,\"141\":1,\"142\":7,\"144\":24,\"145\":6,\"161\":1,\"164\":1,\"175\":4,\"176\":1,\"179\":3,\"196\":7}}],[\"concat\",{\"1\":{\"52\":3,\"60\":1}}],[\"control\",{\"1\":{\"195\":1}}],[\"context\",{\"1\":{\"195\":1}}],[\"contenttype\",{\"1\":{\"195\":2}}],[\"content\",{\"1\":{\"20\":1,\"32\":1,\"195\":2,\"196\":1}}],[\"contains\",{\"1\":{\"159\":1}}],[\"container\",{\"1\":{\"20\":1,\"32\":1}}],[\"component\",{\"1\":{\"197\":1}}],[\"components\",{\"1\":{\"197\":1}}],[\"comparefn\",{\"1\":{\"69\":2}}],[\"com\",{\"1\":{\"39\":1,\"138\":2,\"180\":1}}],[\"column\",{\"1\":{\"22\":1,\"34\":1,\"196\":1}}],[\"colors\",{\"1\":{\"22\":2}}],[\"color\",{\"1\":{\"13\":3,\"17\":2,\"19\":3,\"22\":4,\"24\":18,\"25\":39,\"28\":3,\"29\":2,\"31\":3,\"33\":6,\"34\":8,\"42\":2,\"43\":1,\"44\":4,\"45\":2,\"157\":4,\"164\":1,\"196\":2}}],[\"ccc\",{\"1\":{\"19\":1,\"31\":1}}],[\"css选择器\",{\"1\":{\"152\":1,\"159\":1}}],[\"css复合选择器\",{\"0\":{\"41\":1}}],[\"css2\",{\"0\":{\"40\":1}}],[\"css2笔记\",{\"1\":{\"38\":1}}],[\"css3笔记\",{\"1\":{\"38\":1}}],[\"css\",{\"1\":{\"2\":1,\"59\":1,\"99\":1,\"157\":3},\"2\":{\"37\":1,\"47\":1}}],[\"好记性不如烂笔头\",{\"1\":{\"7\":1}}],[\"学习过程中积累的笔记\",{\"1\":{\"7\":1}}],[\"联系方式\",{\"0\":{\"5\":1}}],[\"plain\",{\"1\":{\"195\":1}}],[\"pow\",{\"1\":{\"116\":3}}],[\"pop\",{\"1\":{\"59\":3,\"99\":3}}],[\"pic\",{\"1\":{\"155\":5}}],[\"pi\",{\"1\":{\"115\":2}}],[\"pink老师\",{\"1\":{\"142\":2}}],[\"pink老师上课中\",{\"1\":{\"75\":1}}],[\"pink颜色\",{\"1\":{\"64\":1}}],[\"pink\",{\"1\":{\"61\":1,\"62\":2,\"64\":1,\"75\":3,\"96\":1,\"112\":1,\"157\":1}}],[\"push\",{\"1\":{\"59\":4,\"96\":1,\"99\":4}}],[\"path>\",{\"1\":{\"196\":5}}],[\"parseint\",{\"1\":{\"85\":3}}],[\"param\",{\"1\":{\"52\":2}}],[\"padding\",{\"1\":{\"13\":1,\"17\":1,\"19\":1,\"20\":1,\"28\":3,\"29\":1,\"31\":1,\"32\":5,\"162\":1,\"185\":1}}],[\"person\",{\"1\":{\"52\":2,\"109\":8,\"110\":4}}],[\"persons>a\",{\"1\":{\"45\":1}}],[\"percentage\",{\"1\":{\"33\":2}}],[\"peiqi\",{\"1\":{\"43\":1}}],[\"p\",{\"1\":{\"39\":1,\"42\":1,\"164\":1,\"196\":7}}],[\"p>\",{\"1\":{\"26\":1,\"164\":1,\"179\":1}}],[\"price\",{\"1\":{\"65\":3}}],[\"primary\",{\"1\":{\"28\":2,\"29\":1,\"33\":1}}],[\"preventdefault\",{\"0\":{\"180\":1},\"1\":{\"180\":2}}],[\"prev\",{\"1\":{\"67\":4}}],[\"pre\",{\"1\":{\"39\":1}}],[\"premiere\",{\"1\":{\"3\":1}}],[\"proxy\",{\"1\":{\"196\":1}}],[\"props\",{\"1\":{\"196\":2}}],[\"prompt\",{\"1\":{\"92\":2}}],[\"promise\",{\"1\":{\"73\":2,\"74\":1}}],[\"prototype\",{\"1\":{\"52\":1}}],[\"pro\",{\"1\":{\"3\":1}}],[\"photoshop\",{\"1\":{\"3\":1}}],[\"justify\",{\"1\":{\"196\":1}}],[\"java\",{\"0\":{\"202\":1}}],[\"javascritp\",{\"1\":{\"113\":1}}],[\"javascrip\",{\"0\":{\"90\":1,\"122\":1}}],[\"javascript\",{\"0\":{\"26\":1},\"1\":{\"2\":1,\"50\":1,\"59\":1,\"99\":1,\"107\":1,\"111\":1,\"113\":1,\"114\":1,\"126\":2,\"127\":1,\"157\":1},\"2\":{\"55\":1,\"56\":1,\"88\":1,\"89\":1,\"120\":1,\"121\":1,\"149\":1,\"150\":1,\"188\":1,\"189\":1}}],[\"jan\",{\"1\":{\"69\":2}}],[\"join\",{\"0\":{\"64\":1},\"1\":{\"60\":1,\"64\":4,\"75\":1}}],[\"json\",{\"1\":{\"138\":2}}],[\"js的缺陷\",{\"1\":{\"133\":1}}],[\"js环境中分配的内存\",{\"1\":{\"129\":1}}],[\"js\",{\"0\":{\"57\":1},\"1\":{\"2\":3,\"127\":1}}],[\"喜欢尝试新事物\",{\"1\":{\"1\":1}}],[\"喜欢分享\",{\"1\":{\"1\":1}}],[\"兴趣驱动型\",{\"1\":{\"1\":1}}],[\"乐于助人\",{\"1\":{\"1\":1}}],[\"擅长解决问题\",{\"1\":{\"1\":1}}],[\"热爱编程\",{\"1\":{\"1\":1}}],[\"0deg\",{\"1\":{\"196\":1}}],[\"04c\",{\"1\":{\"196\":1}}],[\"04\",{\"1\":{\"196\":1}}],[\"04a35\",{\"1\":{\"196\":1}}],[\"0944\",{\"1\":{\"196\":2}}],[\"0944c0\",{\"1\":{\"196\":1}}],[\"056z\",{\"1\":{\"196\":1}}],[\"056c\",{\"1\":{\"196\":1}}],[\"0512\",{\"1\":{\"196\":1}}],[\"0288z\",{\"1\":{\"196\":1}}],[\"0272\",{\"1\":{\"196\":2}}],[\"024\",{\"1\":{\"196\":1}}],[\"0864a46\",{\"1\":{\"196\":1}}],[\"08\",{\"1\":{\"196\":1}}],[\"08a35\",{\"1\":{\"196\":1}}],[\"088\",{\"1\":{\"196\":1}}],[\"0352\",{\"1\":{\"196\":3}}],[\"072\",{\"1\":{\"196\":1}}],[\"0656\",{\"1\":{\"196\":3}}],[\"010\",{\"1\":{\"119\":1}}],[\"0016\",{\"1\":{\"196\":2}}],[\"00jxhapj7v5l\",{\"1\":{\"196\":1}}],[\"00\",{\"1\":{\"83\":1}}],[\"007bff\",{\"1\":{\"24\":1}}],[\"0\",{\"1\":{\"0\":1,\"17\":2,\"29\":2,\"69\":1,\"85\":3,\"116\":3,\"119\":1,\"126\":3,\"137\":2,\"141\":2,\"144\":1,\"145\":1,\"196\":86}}],[\"于2025年2月12日\",{\"1\":{\"0\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,Mt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=St[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
