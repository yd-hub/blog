"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[524],{1709:(s,i,a)=>{a.d(i,{l:()=>n});const n=JSON.parse('{"category":{"/":{"path":"/category/","map":{"前端笔记":{"path":"/category/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/","indexes":[0,1,2,3,4,5,6,7]},"我的文章":{"path":"/category/%E6%88%91%E7%9A%84%E6%96%87%E7%AB%A0/","indexes":[8]},"HTML":{"path":"/category/html/","indexes":[1]},"HTML+CSS":{"path":"/category/html_css/","indexes":[2]},"JavaScript":{"path":"/category/javascript/","indexes":[3,4,5,6,7]},"问题日志":{"path":"/category/%E9%97%AE%E9%A2%98%E6%97%A5%E5%BF%97/","indexes":[9,10]},"VuePress":{"path":"/category/vuepress/","indexes":[9]},"跨域":{"path":"/category/%E8%B7%A8%E5%9F%9F/","indexes":[9]}}}},"tag":{"/":{"path":"/tag/","map":{"个人介绍":{"path":"/tag/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/","indexes":[11]},"LESS":{"path":"/tag/less/","indexes":[1]},"SCSS":{"path":"/tag/scss/","indexes":[1]},"CSS":{"path":"/tag/css/","indexes":[1,2]},"HTML":{"path":"/tag/html/","indexes":[2]},"JavaScript":{"path":"/tag/javascript/","indexes":[3,4,5,6,7]},"ES6+":{"path":"/tag/es6_/","indexes":[3]},"Web APIs":{"path":"/tag/web-apis/","indexes":[7]},"uniCloud":{"path":"/tag/unicloud/","indexes":[9]},"跨域":{"path":"/tag/%E8%B7%A8%E5%9F%9F/","indexes":[9]}}}}}')},4776:(s,i,a)=>{a.d(i,{M:()=>n});const n=JSON.parse('["/note/","/note/html/SCSS_LESS.html","/note/html/","/note/JavaScript/ES6_.html","/note/JavaScript/JSMethods.html","/note/JavaScript/JavaScripBase.html","/note/JavaScript/JavaScriptUp.html","/note/JavaScript/WebAPIs.html","/posts/","/posts/ProblemLog/yuqueCORS.html","/posts/ProblemLog/","/intro.html"]')},3781:(s,i,a)=>{a.d(i,{U:()=>n});const n=JSON.parse('{"article":{"/":{"path":"/article/","indexes":[9,11,0,8,1,2,3,4,5,6,7,10]}},"star":{"/":{"path":"/star/","indexes":[9]}},"timeline":{"/":{"path":"/timeline/","indexes":[9,11,0,8,1,2,3,4,5,6,7,10]}}}')},7340:(s,i,a)=>{a.d(i,{B:()=>as});var n={};a.r(n);var t={};a.r(t);var e={};a.r(e);var l={};a.r(l),a.d(l,{default:()=>y});var h={};a.r(h),a.d(h,{default:()=>u});var p={};a.r(p);var k={};a.r(k);var r={};a.r(r),a.d(r,{default:()=>L});var d={};a.r(d),a.d(d,{default:()=>M});var o={};a.r(o),a.d(o,{default:()=>R});var c={};a.r(c),a.d(c,{default:()=>is});var g=a(3349),B=a(1781),A=a(9212);const y={enhance:({app:s})=>{s.component("CodeTabs",B.S),s.component("Tabs",A.t)}};var m=a(8031),v=a(3027);const u={enhance:({app:s})=>{s.component("CodeDemo",m.A),s.component("MdDemo",v.A)}};var b=a(8913),F=a(355),E=a(457),C=a(2176),f=a(7786),S=a(641),x=a(307);const L={enhance:({app:s})=>{(0,C.L4)("VPIcon")||s.component("VPIcon",(s=>(0,S.h)(x.G,{type:"iconify",prefix:"fa6-solid:",...s})))},setup:()=>{(0,f.r9V)("https://cdn.jsdelivr.net/npm/iconify-icon@2")}};var D=a(5895),w=a(596),J=a(8831),I=a(730);const M={enhance:({app:s})=>{(0,C.L4)("Badge")||s.component("Badge",w.A),(0,C.L4)("VPCard")||s.component("VPCard",J.A),(0,C.L4)("PDF")||s.component("PDF",I.A)},setup:()=>{},rootComponents:[]};var T=a(6358),P=a(3827),H=a(1599),q=a(421),z=a(1266),_=a(783),j=a(8465),U=a(7107),O=a(9920);(0,j.M_)((s=>{const i=s.t,a=!1!==s.I,n=s.i;return a?{title:i,content:n?()=>[(0,S.h)((0,S.g2)("VPIcon"),{icon:n}),i]:null,order:s.O,index:s.I}:null}));const R={enhance:({app:s,router:i})=>{const{scrollBehavior:a}=i.options;i.options.scrollBehavior=async(...s)=>(await _.lE.wait(),a(...s)),(0,_.fk)(s),s.component("BloggerInfo",U.tI),s.component("SocialMedias",U.rS),s.component("GlobalEncrypt",O.J),s.component("LocalEncrypt",O.n)},setup:()=>{(0,_.PV)(),(0,_.i$)(),(0,U.su)()},layouts:{Layout:_.PE,NotFound:_.Mk,BlogCategory:U.Pn,BlogHome:U.qX,BlogType:U.z7,Timeline:U.Kf}};var V=a(8159),N=a(8278),$=a(3403),K=a(33),W=a(953),G=a(1083);const Q={key:0},X=["src"],Y={key:0,class:"image-title"},Z={__name:"imageProxy",props:{src:{type:String,required:!0},title:{type:String,default:""},hasBorder:{type:Boolean,default:!1}},setup(s){const i=s,a=(0,W.KR)(""),n=(0,W.KR)(0),t=(0,W.KR)(null),e=(0,W.KR)(null);return(0,S.sV)((()=>{e.value=new IntersectionObserver((s=>{s.forEach((s=>{s.isIntersecting&&(G.A.get(`https://env-00jxhapj7v5l.dev-hz.cloudbasefunction.cn/proxy/imageProxy?imageUrl=${i.src}`,{timeout:1e3}).then((s=>{"图片获取失败"==s.data.message?(a.value="",n.value=2):(a.value=s.data.body,n.value=1)})).catch((s=>{a.value="",n.value=2})),e.value&&t.value&&e.value.unobserve(t.value))}))}),{root:null,threshold:.1}),t.value&&e.value.observe(t.value)})),(0,S.xo)((()=>{e.value&&t.value&&e.value.unobserve(t.value)})),(s,e)=>((0,S.uX)(),(0,S.CE)("div",{ref_key:"targetElement",ref:t,class:(0,K.C4)({"no-image":1!==n.value})},[1===n.value?((0,S.uX)(),(0,S.CE)("div",Q,[(0,S.Lk)("img",{class:(0,K.C4)({"has-border":i.hasBorder}),src:a.value,alt:"",tabindex:"0",loading:"lazy"},null,10,X),""!==i.title?((0,S.uX)(),(0,S.CE)("span",Y,(0,K.v_)(i.title),1)):(0,S.Q3)("v-if",!0)])):2===n.value?((0,S.uX)(),(0,S.CE)(S.FK,{key:1},[e[0]||(e[0]=(0,S.Lk)("svg",{t:"1739451438290",class:"icon",viewBox:"0 0 1280 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"1649",width:"200",height:"200"},[(0,S.Lk)("path",{d:"M829.952 237.2096c0 39.2192 32.1536 71.0656 71.68 71.0656 39.5776 0 71.68-31.8464 71.68-71.0656 0-39.2704-32.1024-71.1168-71.68-71.1168-39.5264 0-71.68 31.8464-71.68 71.1168z","p-id":"1650"}),(0,S.Lk)("path",{d:"M751.9232 924.672H71.8336V71.4752h1003.6224v406.272c25.4464 5.12 49.5616 12.4928 71.68 24.576V71.5264c0-39.2192-32.1536-71.1168-71.68-71.1168H71.8336c-39.5776 0-71.68 31.8976-71.68 71.1168v853.0944c0 39.2704 32.1024 71.1168 71.68 71.1168h749.056c-32.6656-19.7632-45.8752-41.472-68.9664-71.1168z","p-id":"1651"}),(0,S.Lk)("path",{d:"M1147.136 548.352a254.5664 254.5664 0 0 0-122.88-31.232 255.3856 255.3856 0 0 0-143.104 43.52l-62.1056-82.1248a107.6224 107.6224 0 0 0-95.744-42.1376 107.2128 107.2128 0 0 0-79.7696 47.104l-119.9616-158.72c-20.992-27.648-54.272-45.824-89.088-42.6496-34.816 1.024-67.072 18.7904-86.4256 47.5136l-230.5536 343.04a35.328 35.328 0 0 0 10.0352 49.2544 35.9424 35.9424 0 0 0 49.664-9.8816l230.4-342.9376a35.4816 35.4816 0 0 1 28.8256-15.872 36.3008 36.3008 0 0 1 29.696 14.2336l154.368 204.1344c7.424 9.8816 19.456 14.6944 31.8464 14.08a35.8912 35.8912 0 0 0 28.8256-19.5584l19.8144-39.3728a35.4816 35.4816 0 0 1 28.8256-19.5072 35.2256 35.2256 0 0 1 31.8976 13.9264l66.1504 87.552a250.6752 250.6752 0 0 0-58.6752 161.3312c0 58.2144 19.8144 111.8208 53.1456 154.624a255.6928 255.6928 0 0 0 201.9328 98.304c140.8 0 255.0272-113.2032 255.0272-252.928a252.5696 252.5696 0 0 0-132.1472-221.696z m0 356.2496a183.2448 183.2448 0 0 1-122.88 47.0016 183.296 183.296 0 0 1-96.0512-26.9824 181.0944 181.0944 0 0 1-87.04-154.5728c0-37.7856 11.6736-72.9088 31.5904-101.9392a183.296 183.296 0 0 1 151.5008-79.5648 183.1936 183.1936 0 0 1 122.88 47.0016 180.4288 180.4288 0 0 1 0 269.056z","p-id":"1652"}),(0,S.Lk)("path",{d:"M987.9552 884.3264c0 19.8656 16.2304 35.9936 36.3008 35.9936a36.1472 36.1472 0 0 0 36.2496-35.9936 36.1472 36.1472 0 0 0-36.3008-35.9936 36.1472 36.1472 0 0 0-36.2496 35.9936zM1024.256 631.04c-25.6512 0-46.4384 20.6336-46.4384 46.08 0 25.3952 20.7872 138.0352 46.4384 138.0352 25.6 0 46.3872-112.64 46.3872-138.0864a46.2336 46.2336 0 0 0-46.4384-46.0288z","p-id":"1653"})],-1)),e[1]||(e[1]=(0,S.Lk)("span",null,"糟糕，图片不见了！",-1))],64)):((0,S.uX)(),(0,S.CE)(S.FK,{key:2},[e[2]||(e[2]=(0,S.Lk)("svg",{t:"1739453552440",class:"icon loading-icon",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"3291",width:"200",height:"200"},[(0,S.Lk)("path",{d:"M510.5 958.7c-60.4 0-119-11.8-174.2-35.2-53.3-22.5-101.1-54.8-142.2-95.9s-73.3-88.9-95.9-142.2C74.9 630.2 63 571.6 63 511.2s11.8-119 35.2-174.2c22.5-53.3 54.8-101.1 95.9-142.2S283 121.5 336.3 99c55.2-23.3 113.8-35.2 174.2-35.2 49.3 0 97.8 8 144.1 23.7 26.1 8.9 40.1 37.3 31.2 63.4-7.1 20.8-26.5 33.9-47.3 33.9-5.3 0-10.8-0.9-16.1-2.7-35.9-12.2-73.6-18.4-111.9-18.4-92.8 0-180 36.1-245.7 101.8C199.2 331.1 163 418.4 163 511.2c0 92.8 36.1 180 101.8 245.7 65.6 65.6 152.9 101.8 245.7 101.8s180-36.1 245.7-101.8C821.8 691.3 858 604 858 511.2c0-58.6-14.9-116.6-43-167.6-13.3-24.2-4.6-54.6 19.6-67.9 24.2-13.3 54.6-4.6 67.9 19.6 36.3 65.7 55.4 140.4 55.4 215.9 0 60.4-11.8 119-35.2 174.2-22.5 53.3-54.8 101.1-95.9 142.2-41.1 41.1-88.9 73.3-142.2 95.9-55.1 23.3-113.7 35.2-174.1 35.2z","p-id":"3292"})],-1)),e[3]||(e[3]=(0,S.Lk)("span",null,"加载中...",-1))],64))],2))}},ss=(0,a(6262).A)(Z,[["__scopeId","data-v-24b8c16c"]]),is=(0,N.re)({setup:()=>{},enhance:({app:s,router:i,siteData:a})=>{s.component("imageProxy",ss)}});(0,$.if)({repo:"yd-hub/blog",repoId:"R_kgDON4KMyQ",category:"General",categoryId:"DIC_kwDON4KMyc4Cm-Hu"});const as=[n,t,e,g,l,h,p,k,b,F,E,r,D,d,T,P,H,q,z,o,V,c].map((s=>s.default)).filter(Boolean)},8164:(s,i,a)=>{a.d(i,{J:()=>t,c:()=>n});const n=JSON.parse('{"/note/JavaScript/ES6+.html":"/note/JavaScript/ES6_.html"}'),t=Object.fromEntries([["/",{loader:()=>a.e(470).then(a.bind(a,9908)),meta:{t:"博客主页",i:"house"}}],["/intro.html",{loader:()=>a.e(912).then(a.bind(a,8307)),meta:{d:173931924e4,l:"2025年2月12日",g:["个人介绍"],v:"/assets/images/cover3.jpg",e:"\n<blockquote>\n<p>于2025年2月12日，0:14分创建博客，开始迁移与创作内容。</p>\n</blockquote>\n<h2>个人简介</h2>\n<p>性别男，24岁，一名还没毕业的菜鸟前端，热爱编程，喜欢分享，擅长解决问题，乐于助人。</p>\n<p>兴趣驱动型，有兴趣就有无限动力（比如前端学习），喜欢尝试新事物。</p>\n<h2>主要技术栈</h2>\n<ul>\n<li>HTML/CSS</li>\n<li>JavaScript/TypeScript</li>\n<li>Vue.js</li>\n<li>uni-app</li>\n<li>Node.js</li>\n<li>React.js<br>\n...</li>\n</ul>",r:{minutes:.49,words:146},t:"介绍页",i:"circle-info",y:"a"}}],["/note/",{loader:()=>a.e(107).then(a.bind(a,3419)),meta:{d:17393184e5,l:"2025年2月12日",c:["前端笔记"],e:'\n<div style="text-align:left">\n<p>学习过程中积累的笔记。</p>\n</div>\n<div style="text-align:right">\n<p>————好记性不如烂笔头。</p>\n</div>\n',r:{minutes:.14,words:42},t:"前端笔记",i:"book-open",y:"a"}}],["/posts/",{loader:()=>a.e(666).then(a.bind(a,8063)),meta:{d:17393184e5,l:"2025年2月12日",c:["我的文章"],r:{minutes:.06,words:17},t:"我的文章",i:"book",y:"a"}}],["/note/html/SCSS_LESS.html",{loader:()=>a.e(197).then(a.bind(a,5272)),meta:{d:17393184e5,l:"2025年2月12日",c:["HTML","前端笔记"],g:["LESS","SCSS","CSS"],e:'\n<p>此笔记基于ChatGPT，在其基础上进行了整理，并添加了一些自己的理解。</p>\n<h2>SCSS</h2>\n<h3></h3>\n<div class="language-sass line-numbers-mode" data-highlighter="shiki" data-ext="sass" data-title="sass" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$primary-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">#3498db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$padding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">.button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  background-color: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$primary-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  padding: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$padding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:5.5,words:1649},t:"SCSS/LESS",i:"fa-brands:css3-alt",y:"a"}}],["/note/html/",{loader:()=>a.e(653).then(a.bind(a,2127)),meta:{d:17393184e5,l:"2025年2月12日",c:["HTML+CSS","前端笔记"],g:["HTML","CSS"],e:'\n<p>复习所记，并不全面，详细笔记见下方尚硅谷笔记。</p>\n<blockquote>\n<details class="hint-container details"><summary>尚硅谷-HTML4笔记 <a href="https://yd-hub.github.io/docs/%E5%B0%9A%E7%A1%85%E8%B0%B7-HTML4%E7%AC%94%E8%AE%B0.pdf" target="_blank" rel="noopener noreferrer">URL</a></summary>\n</details>\n<details class="hint-container details"><summary>尚硅谷-HTML5笔记 <a href="https://yd-hub.github.io/docs/%E5%B0%9A%E7%A1%85%E8%B0%B7-HTML4%E7%AC%94%E8%AE%B0.pdf" target="_blank" rel="noopener noreferrer">URL</a></summary>\n</details>\n<details class="hint-container details"><summary>尚硅谷-CSS2笔记 <a href="https://yd-hub.github.io/docs/%E5%B0%9A%E7%A1%85%E8%B0%B7-HTML4%E7%AC%94%E8%AE%B0.pdf" target="_blank" rel="noopener noreferrer">URL</a></summary>\n</details>\n<details class="hint-container details"><summary>尚硅谷-CSS3笔记 <a href="https://yd-hub.github.io/docs/%E5%B0%9A%E7%A1%85%E8%B0%B7-HTML4%E7%AC%94%E8%AE%B0.pdf" target="_blank" rel="noopener noreferrer">URL</a></summary>\n</details>\n</blockquote>',r:{minutes:29.42,words:8825},t:"HTML+CSS",i:"fa-brands:html5",y:"a"}}],["/note/JavaScript/ES6_.html",{loader:()=>a.e(556).then(a.bind(a,6521)),meta:{d:17393184e5,l:"2025年2月12日",c:["JavaScript","前端笔记"],g:["JavaScript","ES6+"],e:"\n<h2>Symbol 数据类型</h2>\n<h3>Symbol基本使用</h3>\n<p>ES6 引入了一种新的原始数据类型Symbol，表示独一无二的值。它是 JavaScript 语言的第七种数据类型，是一种类似于字符串的数据类型。</p>\n<p>Symbol特点</p>\n<ol>\n<li>\n<p>Symbol的值是唯一的，用来解决命名冲突的问题</p>\n</li>\n<li>\n<p>Symbol值不能与其他数据进行运算</p>\n</li>\n<li>\n<p>Symbol定义的对象属性不能使用for…in循环遍历，但是可以使用 Reflect.ownKeys来获取对象的所有键名</p>\n</li>\n</ol>",r:{minutes:35.58,words:10675},t:"ES6+",i:"e",y:"a"}}],["/note/JavaScript/JSMethods.html",{loader:()=>a.e(696).then(a.bind(a,305)),meta:{d:17393184e5,l:"2025年2月12日",c:["JavaScript","前端笔记"],g:["JavaScript"],e:"\n<h2>Array对象方法</h2>\n<h3>常用方法</h3>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>push( )</td>\n<td>动态向数组的尾部添加一个单元</td>\n</tr>\n<tr>\n<td>unshift( )</td>\n<td>动态向数组头部添加一个单元</td>\n</tr>\n<tr>\n<td>pop( )</td>\n<td>删除最后一个单元</td>\n</tr>\n<tr>\n<td>shift( )</td>\n<td>删除第一个单元</td>\n</tr>\n<tr>\n<td>splice( )</td>\n<td>动态删除任意单元（）</td>\n</tr>\n</tbody>\n</table>",r:{minutes:11.46,words:3439},t:"JS 常用方法整理",i:"folder-open",y:"a"}}],["/note/JavaScript/JavaScripBase.html",{loader:()=>a.e(975).then(a.bind(a,4675)),meta:{d:17393184e5,l:"2025年2月12日",c:["JavaScript","前端笔记"],g:["JavaScript"],e:'\n<p>复习所记，并不全面。</p>\n<h2>输入输出</h2>\n<h3>输入</h3>\n<blockquote>\n<p>向 <code>prompt()</code> 输入任意内容会以弹窗形式出现在浏览器中，一般提示用户输入一些内容。</p>\n</blockquote>\n<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;JavaScript 基础 - 输入输出&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 1. 输入的任意数字，都会以弹窗形式展示</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'要输出的内容\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'要输出的内容\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2. 以弹窗形式提示用户输入姓名，注意这里的文字使用英文的引号</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    prompt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'请输入您的姓名:\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:13.87,words:4161},t:"JavaScrip 基础",i:"fa-brands:js",y:"a"}}],["/note/JavaScript/JavaScriptUp.html",{loader:()=>a.e(437).then(a.bind(a,2964)),meta:{d:17393184e5,l:"2025年2月12日",c:["JavaScript","前端笔记"],g:["JavaScript"],e:'\n<h2>作用域</h2>\n<blockquote>\n<p>了解作用域对程序执行的影响及作用域链的查找机制，使用闭包函数创建隔离作用域避免全局变量污染。</p>\n</blockquote>\n<p>作用域（scope）规定了变量能够被访问的“范围”，离开了这个“范围”变量便不能被访问，作用域分为全局作用域和局部作用域。</p>\n<h3>局部作用域（Local）</h3>\n<p>局部作用域分为函数作用域和块作用域。</p>\n<h4>函数作用域</h4>\n<p>在函数内部声明的变量只能在函数内部被访问，外部无法直接访问。</p>\n<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 声明 counter 函数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> counter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 函数内部声明的变量</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> y</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 18</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 设用 counter 函数</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  counter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 访问变量 s</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 报错</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:43.72,words:13115},t:"JavaScrip 进阶",i:"fa-brands:js",y:"a"}}],["/note/JavaScript/WebAPIs.html",{loader:()=>a.e(928).then(a.bind(a,7957)),meta:{d:17393184e5,l:"2025年2月12日",c:["JavaScript","前端笔记"],g:["JavaScript","Web APIs"],e:"\n<h2>获取DOM对象 querySelector</h2>\n<ol>\n<li>\n<p>querySelector &nbsp; 满足条件的第一个元素<br>\n<code>querySelector('css选择器')</code></p>\n</li>\n<li>\n<p>querySelectorAll &nbsp;满足条件的元素集合 返回伪数组</p>\n</li>\n<li>\n<p>其他方式<br>\n<code>getElementById</code>、<code>getElementsByTagName</code></p>\n</li>\n</ol>\n<h2>操作元素内容 innerText/innerHTML</h2>",r:{minutes:24.76,words:7428},t:"Web APIs",i:"fa-brands:edge-legacy",y:"a"}}],["/posts/ProblemLog/",{loader:()=>a.e(436).then(a.bind(a,3810)),meta:{d:17393184e5,l:"2025年2月12日",c:["问题日志"],r:{minutes:.06,words:17},t:"问题日志",i:"question",y:"a"}}],["/posts/ProblemLog/yuqueCORS.html",{loader:()=>a.e(502).then(a.bind(a,5177)),meta:{d:17394048e5,l:"2025年2月13日",c:["问题日志","VuePress","跨域"],g:["uniCloud","跨域"],e:'\n<h2>问题描述</h2>\n<p>我的笔记内容是通过语雀进行管理的，但是语雀导出的<code>.md</code>文件中的图片是语雀的 cdn 地址引用，发现语雀的图片资源无法正常显示，经过排查发现是由于语雀的资源跨域问题导致的。</p>\n<h2>解决方案</h2>\n<p>通过 uniCloud 云对象代理，返回 Base64 解决图片跨域问题。</p>\n<h3>1. 编写上传 uniCloud 云对象</h3>\n<details class="hint-container details"><summary>代码</summary>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> axios</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'axios\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 引入 axios 来请求外部图片</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 云函数执行的主方法</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  imageProxy</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> imageUrl</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">imageUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 获取请求中的图片 URL</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">imageUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        status</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'error\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'图片URL不能为空\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      };</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 使用 axios 请求外部图片，返回图片的二进制数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> axios</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">imageUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">responseType</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'arraybuffer\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> });</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 获取图片的内容类型</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> contentType</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">headers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'content-type\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 将图片的二进制数据转换为 base64 编码</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> base64Data</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'binary\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'base64\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 返回 base64 编码的图片数据（嵌入相应的 Data URL 格式）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        body</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> `data:</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">contentType</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">;base64,</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD">${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">base64Data</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">          \'Content-Type\'</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'text/plain\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 返回纯文本格式</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">          \'Cache-Control\'</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'max-age=3600\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 可选：设置缓存策略</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      };</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        status</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'error\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'图片获取失败\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        error</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      };</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>',r:{minutes:4.16,words:1247},t:"语雀资源跨域问题",i:"mask",y:"a"}}],["/404.html",{loader:()=>a.e(490).then(a.bind(a,1489)),meta:{t:""}}],["/note/JavaScript/",{loader:()=>a.e(843).then(a.bind(a,1326)),meta:{t:"Java Script"}}],["/category/",{loader:()=>a.e(583).then(a.bind(a,3233)),meta:{t:"分类",I:!1}}],["/category/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(980).then(a.bind(a,9066)),meta:{t:"前端笔记 分类",I:!1}}],["/category/%E6%88%91%E7%9A%84%E6%96%87%E7%AB%A0/",{loader:()=>a.e(126).then(a.bind(a,2320)),meta:{t:"我的文章 分类",I:!1}}],["/category/html/",{loader:()=>a.e(489).then(a.bind(a,2181)),meta:{t:"HTML 分类",I:!1}}],["/category/html_css/",{loader:()=>a.e(777).then(a.bind(a,385)),meta:{t:"HTML+CSS 分类",I:!1}}],["/category/javascript/",{loader:()=>a.e(791).then(a.bind(a,438)),meta:{t:"JavaScript 分类",I:!1}}],["/category/%E9%97%AE%E9%A2%98%E6%97%A5%E5%BF%97/",{loader:()=>a.e(154).then(a.bind(a,1682)),meta:{t:"问题日志 分类",I:!1}}],["/category/vuepress/",{loader:()=>a.e(575).then(a.bind(a,3058)),meta:{t:"VuePress 分类",I:!1}}],["/category/%E8%B7%A8%E5%9F%9F/",{loader:()=>a.e(837).then(a.bind(a,3853)),meta:{t:"跨域 分类",I:!1}}],["/tag/",{loader:()=>a.e(797).then(a.bind(a,951)),meta:{t:"标签",I:!1}}],["/tag/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/",{loader:()=>a.e(770).then(a.bind(a,5545)),meta:{t:"标签: 个人介绍",I:!1}}],["/tag/less/",{loader:()=>a.e(539).then(a.bind(a,9875)),meta:{t:"标签: LESS",I:!1}}],["/tag/scss/",{loader:()=>a.e(262).then(a.bind(a,9623)),meta:{t:"标签: SCSS",I:!1}}],["/tag/css/",{loader:()=>a.e(381).then(a.bind(a,3933)),meta:{t:"标签: CSS",I:!1}}],["/tag/html/",{loader:()=>a.e(567).then(a.bind(a,8854)),meta:{t:"标签: HTML",I:!1}}],["/tag/javascript/",{loader:()=>a.e(225).then(a.bind(a,5527)),meta:{t:"标签: JavaScript",I:!1}}],["/tag/es6_/",{loader:()=>a.e(601).then(a.bind(a,6434)),meta:{t:"标签: ES6+",I:!1}}],["/tag/web-apis/",{loader:()=>a.e(802).then(a.bind(a,6131)),meta:{t:"标签: Web APIs",I:!1}}],["/tag/unicloud/",{loader:()=>a.e(553).then(a.bind(a,1553)),meta:{t:"标签: uniCloud",I:!1}}],["/tag/%E8%B7%A8%E5%9F%9F/",{loader:()=>a.e(479).then(a.bind(a,427)),meta:{t:"标签: 跨域",I:!1}}],["/article/",{loader:()=>a.e(511).then(a.bind(a,2772)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(199).then(a.bind(a,353)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(464).then(a.bind(a,4695)),meta:{t:"时间轴",I:!1}}]])},8761:(s,i,a)=>{a.d(i,{U:()=>n});const n=JSON.parse('{"base":"/blog/","lang":"zh-CN","title":"zhao\'s blog","description":"zhao\'s blog","head":[["link",{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["link",{"rel":"preconnect","href":"https://fonts.gstatic.com","crossorigin":""}],["link",{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap"}],["link",{"href":"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;500;700&display=swap","rel":"stylesheet"}],["link",{"rel":"stylesheet","href":"https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css"}]],"locales":{}}')},6653:(s,i,a)=>{a.d(i,{K:()=>n});const n=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":{"tokens":["$2a$10$TudY075QLQs62FftCnvgou8W1y7WSxQsstETjNCFhElCLz2vpvG0W"],"hint":"Password: 1234"}}},"author":{"name":"zhao"},"logo":"/avatar.png","repo":"https://github.com/yd-hub/blog","docsDir":"src","footer":"zhao\'s blog","displayFooter":true,"blog":{"description":"还没毕业的菜鸟前端，持续学习中。","intro":"/intro.html","medias":{"QQ":"intro.html#联系方式","Email":"mailto:583833826@qq.com","Gitee":"https://gitee.com/zhaoStore","GitHub":"https://github.com/yd-hub/"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/",{"text":"前端笔记","icon":"book-open","prefix":"/note/","children":[{"text":"前端笔记","icon":"book-open","link":"/note/"},{"text":"前端基础","icon":"pen-to-square","children":[{"text":"HTML+CSS","icon":"fa-brands:html5","link":"html/"},{"text":"JavaScript","icon":"fa-brands:js","link":"JavaScript/WebAPIs"}]}]},{"text":"我的文章","icon":"book","prefix":"/posts/","children":[{"text":"我的文章","icon":"book","link":"/posts/"},{"text":"问题日志","icon":"question","link":"/posts/ProblemLog/"}]}],"sidebar":{"/posts/":[{"text":"我的文章","icon":"book","link":"/posts/"},{"text":"问题日志","icon":"question","prefix":"ProblemLog/","children":["yuqueCORS"]}],"/note/":[{"text":"前端笔记","icon":"book-open","link":"/note/"},{"text":"HTML+CSS","icon":"fa-brands:html5","prefix":"html/","link":"html/","children":["SCSS_LESS"]},{"text":"JavaScript","icon":"fa-brands:js","prefix":"JavaScript/","children":["JavaScripBase","WebAPIs","JavaScriptUp","ES6+","JSMethods"]}],"/":["","intro",{"text":"前端笔记","icon":"book-open","link":"note/","prefix":"note/"},{"text":"我的文章","icon":"book","link":"posts/","prefix":"posts/"}]}}}}')},4923:(s,i,a)=>{},8123:(s,i,a)=>{a.d(i,{v:()=>n});const n={}},2878:(s,i,a)=>{a.d(i,{P:()=>n});const n={QQ:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon qq-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#5eaade"/><path fill="#fff" d="M805.25 585.542c-15-48.188-32.25-88.688-58.781-154.97 4.125-174.093-68.25-314.905-234.938-314.905-168.562 0-239.344 143.625-234.844 314.906-26.625 66.375-43.78 106.594-58.78 154.969-31.876 102.656-21.563 145.125-13.688 146.062 16.875 2.063 65.718-77.25 65.718-77.25 0 45.938 23.625 105.844 74.813 149.063-24.75 7.593-80.344 28.03-67.125 50.437 10.688 18.094 183.938 11.531 233.906 5.906 49.969 5.625 223.219 12.188 233.906-5.906 13.22-22.312-42.468-42.844-67.125-50.437 51.188-43.313 74.813-103.22 74.813-149.063 0 0 48.844 79.313 65.719 77.25 7.969-1.031 18.281-43.5-13.594-146.062z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>'}}},s=>{s.O(0,[133,246],(()=>s(s.s=8731))),s.O()}]);